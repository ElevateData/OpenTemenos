//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using Shared.Models;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"

namespace DataHub.OperationalDataStore.System.ServiceDetails
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface IServiceDetailsService
    {
        /// <summary>Retrieves the list of elapsed times for reports</summary>
        /// <param name="batchDate">The bank date on which the particular report was generated.</param>
        /// <param name="recordId">Unique identifier of an entity</param>
        /// <returns>getAllReportTimesResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<GetAllReportTimesResponse> GetAllReportTimesAsync(System.DateTimeOffset? batchDate, string? recordId);
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves the list of elapsed times for reports</summary>
        /// <param name="batchDate">The bank date on which the particular report was generated.</param>
        /// <param name="recordId">Unique identifier of an entity</param>
        /// <returns>getAllReportTimesResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<GetAllReportTimesResponse> GetAllReportTimesAsync(System.DateTimeOffset? batchDate, string? recordId, System.Threading.CancellationToken cancellationToken);
    
        /// <summary>Retrieves the list of elapsed times for reports generated during close of business processing</summary>
        /// <param name="batchDate">The bank date on which the particular report was generated.</param>
        /// <param name="recordId">Unique identifier of an entity</param>
        /// <returns>getAllReportTimesCOBResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<GetAllReportTimesCOBResponse> GetAllReportTimesCOBAsync(System.DateTimeOffset batchDate, string? recordId);
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves the list of elapsed times for reports generated during close of business processing</summary>
        /// <param name="batchDate">The bank date on which the particular report was generated.</param>
        /// <param name="recordId">Unique identifier of an entity</param>
        /// <returns>getAllReportTimesCOBResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<GetAllReportTimesCOBResponse> GetAllReportTimesCOBAsync(System.DateTimeOffset batchDate, string? recordId, System.Threading.CancellationToken cancellationToken);
    
    }

    /// <summary>getAllReportTimesResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetAllReportTimesResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("data")]
        public GetAllReportTimesResponseBody? Data { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetAllReportTimesResponseBody 
    {
        /// <summary>Application to Update the Process Time for every individual report generated during Batch.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("reportTimes")]
        public System.Collections.Generic.ICollection<ReportTimes>? ReportTimes { get; set; }= default!;
    
    
    }
    
    /// <summary>getAllReportTimesCOBResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetAllReportTimesCOBResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("data")]
        public GetAllReportTimesCOBResponseBody? Data { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetAllReportTimesCOBResponseBody 
    {
        /// <summary>Application to Update the Process Time for every individual report generated during Batch.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("reportTimes")]
        public System.Collections.Generic.ICollection<ReportTimes2>? ReportTimes { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ReportTimes 
    {
        /// <summary>Unique identifier of an entity</summary>
        [System.Text.Json.Serialization.JsonPropertyName("recordId")]
        public string? RecordId { get; set; }= default!;
    
        /// <summary>The bank date on which the particular report was generated.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("batchDate")]
        public BatchDate? BatchDate { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ReportTimes2 
    {
        /// <summary>Unique identifier of an entity</summary>
        [System.Text.Json.Serialization.JsonPropertyName("recordId")]
        public string? RecordId { get; set; }= default!;
    
        /// <summary>The bank date on which the particular report was generated.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("batchDate")]
        public BatchDate2? BatchDate { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BatchDate 
    {
        /// <summary>The bank date on which the particular report was generated.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("batchDate")]
        public string? BatchDate1 { get; set; }= default!;
    
        /// <summary>The beginning of the time interval in the current Day</summary>
        [System.Text.Json.Serialization.JsonPropertyName("startTime")]
        public string? StartTime { get; set; }= default!;
    
        /// <summary>The end of the time interval in corresponding Day</summary>
        [System.Text.Json.Serialization.JsonPropertyName("endTime")]
        public string? EndTime { get; set; }= default!;
    
        /// <summary>Contains the session number in which the agent is running</summary>
        [System.Text.Json.Serialization.JsonPropertyName("sessionNo")]
        public string? SessionNo { get; set; }= default!;
    
        /// <summary>Contains the elapsed time of the report in seconds</summary>
        [System.Text.Json.Serialization.JsonPropertyName("elapsedTime")]
        public string? ElapsedTime { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BatchDate2 
    {
        /// <summary>The bank date on which the particular report was generated.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("batchDate")]
        public string? BatchDate { get; set; }= default!;
    
        /// <summary>The beginning of the time interval in the current Day</summary>
        [System.Text.Json.Serialization.JsonPropertyName("startTime")]
        public string? StartTime { get; set; }= default!;
    
        /// <summary>The end of the time interval in corresponding Day</summary>
        [System.Text.Json.Serialization.JsonPropertyName("endTime")]
        public string? EndTime { get; set; }= default!;
    
        /// <summary>Contains the session number in which the agent is running</summary>
        [System.Text.Json.Serialization.JsonPropertyName("sessionNo")]
        public string? SessionNo { get; set; }= default!;
    
        /// <summary>Contains the elapsed time of the report in seconds</summary>
        [System.Text.Json.Serialization.JsonPropertyName("elapsedTime")]
        public string? ElapsedTime { get; set; }= default!;
    
    
    }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016