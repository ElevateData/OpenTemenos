//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using Shared.Models;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"

namespace Transact.Microservice.CallbackRegistries
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface ICallbackRegistryService
    {
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Adds callback url in the callback registry</summary>
        /// <returns>Created callback succeess response.</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<Callback> CreateCallbackAsync(Callback body, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Receives transaction processed events</summary>
        /// <returns>Success response from source keeping system for a transaction processed.</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<EventResponse> AcceptEventAsync(EventMessage body, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Callback 
    {
        /// <summary>Identifier of an event.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("eventId")]
        public string EventId { get; set; }= default!;
    
        /// <summary>Indicates the type of operation/command executed in the record keeping system.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("eventType")]
        public string EventType { get; set; }= default!;
    
        /// <summary>Indicates key field data related to event.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("keyFieldsData")]
        public string KeyFieldsData { get; set; }= default!;
    
        /// <summary>Indicates the status of event.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public string Status { get; set; }= default!;
    
        /// <summary>Indicates client application Url to perform callback.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("callbackUrl")]
        public string CallbackUrl { get; set; }= default!;
    
        /// <summary>Indicates expiry timeout of event in millisecounds.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("expiry")]
        public double Expiry { get; set; }= default!;
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class EventMessage 
    {
        /// <summary>Indicates the type of event.Indicate type of operation/command executed in the record keeping system</summary>
        [System.Text.Json.Serialization.JsonPropertyName("eventType")]
        public string EventType { get; set; }= default!;
    
        /// <summary>Indicates message along with event.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string Message { get; set; }= default!;
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Data 
    {
        /// <summary>Indicates the type of event. Identifies type of operation/command executed in the record keeping system</summary>
        [System.Text.Json.Serialization.JsonPropertyName("eventType")]
        public string EventType { get; set; }= default!;
    
        /// <summary>Array of keys, which related to events.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("keys")]
        public System.Collections.Generic.ICollection<string> Keys { get; set; }= default!;
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ErrorDetails 
    {
        /// <summary>Contains short error message.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("error")]
        public string Error { get; set; }= default!;
    
        /// <summary>Status code of an error.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public double Status { get; set; }= default!;
    
        /// <summary>Detailed messages of an error.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string Message { get; set; }= default!;
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class EventResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("errors")]
        public ErrorDetails Errors { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("data")]
        public Data Data { get; set; }= default!;
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
    
    }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016