//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using Shared.Models;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"

namespace DataHub.OperationalDataStore.Product.ProductConditionDetails
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface IProductConditionDetailsService
    {
        /// <summary>Retrieves the Protection Limit Property details like arrangement number, actual Limit amount, Limit amount currency for a product</summary>
        /// <param name="productId">Contains the unique identifier of the product, e.g. the product id of the arrangement account.</param>
        /// <param name="propertyId">The identifier of the product condition</param>
        /// <returns>getProtectionLimitConditionsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<GetProtectionLimitConditionsResponse> GetProtectionLimitConditionsAsync(string productId, string? propertyId);
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves the Protection Limit Property details like arrangement number, actual Limit amount, Limit amount currency for a product</summary>
        /// <param name="productId">Contains the unique identifier of the product, e.g. the product id of the arrangement account.</param>
        /// <param name="propertyId">The identifier of the product condition</param>
        /// <returns>getProtectionLimitConditionsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<GetProtectionLimitConditionsResponse> GetProtectionLimitConditionsAsync(string productId, string? propertyId, System.Threading.CancellationToken cancellationToken);
    
        /// <summary>Retrieves the product availability details such as the day/time from which the specific product conditions are available</summary>
        /// <param name="productId">Contains the unique identifier of the product, e.g. the product id of the arrangement account.</param>
        /// <param name="propertyId">The identifier of the product condition</param>
        /// <returns>getAvailabilityConditionsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<GetAvailabilityConditionsResponse> GetAvailabilityConditionsAsync(string productId, string? propertyId);
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves the product availability details such as the day/time from which the specific product conditions are available</summary>
        /// <param name="productId">Contains the unique identifier of the product, e.g. the product id of the arrangement account.</param>
        /// <param name="propertyId">The identifier of the product condition</param>
        /// <returns>getAvailabilityConditionsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<GetAvailabilityConditionsResponse> GetAvailabilityConditionsAsync(string productId, string? propertyId, System.Threading.CancellationToken cancellationToken);
    
        /// <summary>Retrieves the published product conditions record details like arrangement number, property name, maximum number of roles linked to the master arrangement, maximum number of users linked to a master arrangement or its roles for a product</summary>
        /// <param name="productId">Contains the unique identifier of the product, e.g. the product id of the arrangement account.</param>
        /// <param name="propertyId">The identifier of the product condition</param>
        /// <returns>getLicensingConditionsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<GetLicensingConditionsResponse> GetLicensingConditionsAsync(string productId, string? propertyId);
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves the published product conditions record details like arrangement number, property name, maximum number of roles linked to the master arrangement, maximum number of users linked to a master arrangement or its roles for a product</summary>
        /// <param name="productId">Contains the unique identifier of the product, e.g. the product id of the arrangement account.</param>
        /// <param name="propertyId">The identifier of the product condition</param>
        /// <returns>getLicensingConditionsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<GetLicensingConditionsResponse> GetLicensingConditionsAsync(string productId, string? propertyId, System.Threading.CancellationToken cancellationToken);
    
    }

    /// <summary>getProtectionLimitConditionsResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetProtectionLimitConditionsResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("data")]
        public GetProtectionLimitConditionsResponseBody? Data { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetProtectionLimitConditionsResponseBody 
    {
        /// <summary>The Protection Limit Property class is used by products which have daily limits on the cumulative amount of transactions that can be done via an external channel.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("catProtectionLimit")]
        public System.Collections.Generic.ICollection<CatProtectionLimit>? CatProtectionLimit { get; set; }= default!;
    
    
    }
    
    /// <summary>getAvailabilityConditionsResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetAvailabilityConditionsResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("data")]
        public GetAvailabilityConditionsResponseBody? Data { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetAvailabilityConditionsResponseBody 
    {
        /// <summary>The published product conditions records for the property TC.AVAILABILITY.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("tcAvailability")]
        public System.Collections.Generic.ICollection<TcAvailability>? TcAvailability { get; set; }= default!;
    
    
    }
    
    /// <summary>getLicensingConditionsResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetLicensingConditionsResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("data")]
        public GetLicensingConditionsResponseBody? Data { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetLicensingConditionsResponseBody 
    {
        [System.Text.Json.Serialization.JsonPropertyName("tcLicensing")]
        public System.Collections.Generic.ICollection<TcLicensing>? TcLicensing { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CatProtectionLimit 
    {
        /// <summary>Contains the unique identifier of the product, e.g. the product id of the arrangement account.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("productId")]
        public string? ProductId { get; set; }= default!;
    
        /// <summary>The identifier of the product condition</summary>
        [System.Text.Json.Serialization.JsonPropertyName("propertyId")]
        public string? PropertyId { get; set; }= default!;
    
        /// <summary>The Limit amount that is actually available for use. The system limit checks are preformed against the online limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitAmount")]
        public string? LimitAmount { get; set; }= default!;
    
        /// <summary>Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("currencyId")]
        public string? CurrencyId { get; set; }= default!;
    
        /// <summary>Defines which individual attribute (field) has the negotiation rules defined in fields</summary>
        [System.Text.Json.Serialization.JsonPropertyName("negotiationRulesAttribute")]
        public NegotiationRulesAttribute? NegotiationRulesAttribute { get; set; }= default!;
    
        /// <summary>Holds the value of the customer level limit amount to be used for all defined customers</summary>
        [System.Text.Json.Serialization.JsonPropertyName("cusMaxLimit")]
        public string? CusMaxLimit { get; set; }= default!;
    
        /// <summary>Allowed customers for the selected arrangement; where in they can see their product in Internet Banking</summary>
        [System.Text.Json.Serialization.JsonPropertyName("definedCustomer")]
        public DefinedCustomer? DefinedCustomer { get; set; }= default!;
    
        /// <summary>Holds the value of the customer level limit amount to be used for all defined customers</summary>
        [System.Text.Json.Serialization.JsonPropertyName("usageUpdate")]
        public string? UsageUpdate { get; set; }= default!;
    
        /// <summary>Indicates whether the Protection Limit reset should take place as the calendar date changes or at close of business</summary>
        [System.Text.Json.Serialization.JsonPropertyName("utilisationReset")]
        public string? UtilisationReset { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class TcAvailability 
    {
        /// <summary>Contains the unique identifier of the product, e.g. the product id of the arrangement account.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("productId")]
        public string? ProductId { get; set; }= default!;
    
        /// <summary>The identifier of the product condition</summary>
        [System.Text.Json.Serialization.JsonPropertyName("propertyId")]
        public string? PropertyId { get; set; }= default!;
    
        /// <summary>Day name of the week,The Day for which availabilities are defined. This is a multi value set of fields, one set for each week day</summary>
        [System.Text.Json.Serialization.JsonPropertyName("dayName")]
        public DayName? DayName { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class TcLicensing 
    {
        /// <summary>Contains the unique identifier of the product, e.g. the product id of the arrangement account.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("productId")]
        public string? ProductId { get; set; }= default!;
    
        /// <summary>The identifier of the product condition</summary>
        [System.Text.Json.Serialization.JsonPropertyName("propertyId")]
        public string? PropertyId { get; set; }= default!;
    
        /// <summary>The maximum number of users that can be linked to a master arrangement or its roles</summary>
        [System.Text.Json.Serialization.JsonPropertyName("noOfUsers")]
        public string? NoOfUsers { get; set; }= default!;
    
        /// <summary>The maximum number of roles that can be linked to the master arrangement</summary>
        [System.Text.Json.Serialization.JsonPropertyName("noOfRoles")]
        public string? NoOfRoles { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class NegotiationRulesAttribute 
    {
        /// <summary>This field indicates whether to raise error or override message when rule is broken,Allows only two values ERROR or OVERRIDE,ERROR - Error message is raisedOVERRIDE - Override message is generated.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("negotiationRulesMessage")]
        public string? NegotiationRulesMessage { get; set; }= default!;
    
        /// <summary>Defines named values to indicate if an option applies to the associated NR.ATTRIBUTE. More than one option can be associated with the NR.ATTRIBUTE, with certain restrictions.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("negotiationRulesOptions")]
        public NegotiationRulesOptions? NegotiationRulesOptions { get; set; }= default!;
    
        /// <summary>Defines the value that links to the rule in field Nr.Type</summary>
        [System.Text.Json.Serialization.JsonPropertyName("negotiationRulesValue")]
        public string? NegotiationRulesValue { get; set; }= default!;
    
        /// <summary>Defines which individual attribute (field) has the negotiation rules defined in fields</summary>
        [System.Text.Json.Serialization.JsonPropertyName("negotiationRulesAttribute")]
        public string? NegotiationRulesAttribute1 { get; set; }= default!;
    
        /// <summary>Defines the negotiation rule that is linked to the field defined in Nr.Attribute. If an attribute has a negotiation rule linked to it. It is possible to define more than one negotiation rule for an attribute.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("negotiationRulesType")]
        public NegotiationRulesType? NegotiationRulesType { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DefinedCustomer 
    {
        /// <summary>Limit reference of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerLimitId")]
        public string? CustomerLimitId { get; set; }= default!;
    
        /// <summary>Allowed customers for the selected arrangement; where in they can see their product in Internet Banking</summary>
        [System.Text.Json.Serialization.JsonPropertyName("definedCustomer")]
        public string? DefinedCustomer1 { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DayName 
    {
        /// <summary>Day name of the week,The Day for which availabilities are defined. This is a multi value set of fields, one set for each week day</summary>
        [System.Text.Json.Serialization.JsonPropertyName("dayName")]
        public string? DayName1 { get; set; }= default!;
    
        /// <summary>The beginning of the time interval in the current Day</summary>
        [System.Text.Json.Serialization.JsonPropertyName("startTime")]
        public StartTime? StartTime { get; set; }= default!;
    
        /// <summary>Allowed days to access Internet Banking,The permissions for the current Day.Possible values: Null/Yes/No</summary>
        [System.Text.Json.Serialization.JsonPropertyName("daySelect")]
        public string? DaySelect { get; set; }= default!;
    
        /// <summary>The end of the time interval in corresponding Day</summary>
        [System.Text.Json.Serialization.JsonPropertyName("endTime")]
        public string? EndTime { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class NegotiationRulesOptions 
    {
        /// <summary>Defines named values to indicate if an option applies to the associated NR.ATTRIBUTE. More than one option can be associated with the NR.ATTRIBUTE, with certain restrictions.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("negotiationRulesOptions")]
        public string? NegotiationRulesOptions1 { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class NegotiationRulesType 
    {
        /// <summary>This field indicates whether to raise error or override message when rule is broken,Allows only two values ERROR or OVERRIDE,ERROR - Error message is raisedOVERRIDE - Override message is generated.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("negotiationRulesMessage")]
        public string? NegotiationRulesMessage { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class StartTime 
    {
        /// <summary>The end of the time interval in corresponding Day</summary>
        [System.Text.Json.Serialization.JsonPropertyName("endTime")]
        public string? EndTime { get; set; }= default!;
    
    
    }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016