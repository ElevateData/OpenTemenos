//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using Shared.Models;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"

namespace DataHub.OperationalDataStore.Holding.RepurchaseAgreements
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface IRepurchaseAgreementsService
    {
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves the repurchase agreement position movements</summary>
        /// <param name="recordId">Unique identifier of an entity</param>
        /// <param name="portfolioId">Id of the portfolio or security account</param>
        /// <param name="instrumentId">The identifier of the instrument</param>
        /// <param name="depositoryId">Id of the securities depository.</param>
        /// <returns>getREPOPositionMovementsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<GetREPOPositionMovementsResponse> GetREPOPositionMovementsAsync(string? recordId = null, string? portfolioId = null, string? instrumentId = null, string? depositoryId = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves the reverse repurchase agreement positions  and movements</summary>
        /// <param name="recordId">Unique identifier of an entity</param>
        /// <param name="portfolioId">Id of the portfolio or security account</param>
        /// <param name="instrumentId">The identifier of the instrument</param>
        /// <param name="depositoryId">Id of the securities depository.</param>
        /// <returns>getRESOPositionMovementsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<GetRESOPositionMovementsResponse> GetRESOPositionMovementsAsync(string? recordId = null, string? portfolioId = null, string? instrumentId = null, string? depositoryId = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves the  reverse repurchase agreement positions</summary>
        /// <param name="recordId">Unique identifier of an entity</param>
        /// <param name="portfolioId">Id of the portfolio or security account</param>
        /// <param name="instrumentId">The identifier of the instrument</param>
        /// <param name="depositoryId">Id of the securities depository.</param>
        /// <param name="quantity">The nominal quantity</param>
        /// <returns>getRESOPositionResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<GetRESOPositionResponse> GetRESOPositionAsync(string? recordId = null, string? portfolioId = null, string? instrumentId = null, string? depositoryId = null, double? quantity = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves the repurchase agreement positions</summary>
        /// <param name="recordId">Unique identifier of an entity</param>
        /// <param name="portfolioId">Id of the portfolio or security account</param>
        /// <param name="depositoryId">Id of the securities depository.</param>
        /// <param name="instrumentId">The identifier of the instrument</param>
        /// <param name="quantity">The nominal quantity</param>
        /// <returns>getREPOPositionResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<GetREPOPositionResponse> GetREPOPositionAsync(string? recordId = null, string? portfolioId = null, string? depositoryId = null, string? instrumentId = null, double? quantity = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
    }

    /// <summary>getREPOPositionMovementsResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetREPOPositionMovementsResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("data")]
        public GetREPOPositionMovementsResponseBody? Data { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetREPOPositionMovementsResponseBody 
    {
        /// <summary>Holds all security positions which have been repo'd out of the Bank's own book(s)</summary>
        [System.Text.Json.Serialization.JsonPropertyName("repoPosition")]
        public System.Collections.Generic.ICollection<RepoPosition>? RepoPosition { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("repo")]
        public System.Collections.Generic.ICollection<Repo>? Repo { get; set; }= default!;
    
    
    }
    
    /// <summary>getRESOPositionMovementsResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetRESOPositionMovementsResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("data")]
        public GetRESOPositionMovementsResponseBody? Data { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetRESOPositionMovementsResponseBody 
    {
        /// <summary>Shows the Bank's overall reverse repo positions. It holds all security positions which have been received by the Bank under its reverse repo transactions</summary>
        [System.Text.Json.Serialization.JsonPropertyName("resoPosition")]
        public System.Collections.Generic.ICollection<ResoPosition>? ResoPosition { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("repo")]
        public System.Collections.Generic.ICollection<Repo2>? Repo { get; set; }= default!;
    
    
    }
    
    /// <summary>getRESOPositionResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetRESOPositionResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("data")]
        public GetRESOPositionResponseBody? Data { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetRESOPositionResponseBody 
    {
        /// <summary>Shows the Bank's overall reverse repo positions. It holds all security positions which have been received by the Bank under its reverse repo transactions</summary>
        [System.Text.Json.Serialization.JsonPropertyName("resoPosition")]
        public System.Collections.Generic.ICollection<ResoPosition2>? ResoPosition { get; set; }= default!;
    
    
    }
    
    /// <summary>getREPOPositionResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetREPOPositionResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("data")]
        public GetREPOPositionResponseBody? Data { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetREPOPositionResponseBody 
    {
        /// <summary>Holds all security positions which have been repo'd out of the Bank's own book(s)</summary>
        [System.Text.Json.Serialization.JsonPropertyName("repoPosition")]
        public System.Collections.Generic.ICollection<RepoPosition2>? RepoPosition { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class RepoPosition 
    {
        /// <summary>Id of the portfolio or security account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("portfolioId")]
        public string? PortfolioId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("costPrice")]
        public CostPrice? CostPrice { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Repo 
    {
        /// <summary>Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("currencyId")]
        public string? CurrencyId { get; set; }= default!;
    
        /// <summary>Standard date field which records trade date of the account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("tradeDate")]
        public string? TradeDate { get; set; }= default!;
    
        /// <summary>Indicates maturity date of the contract</summary>
        [System.Text.Json.Serialization.JsonPropertyName("maturityDate")]
        public string? MaturityDate { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ResoPosition 
    {
        /// <summary>Id of the portfolio or security account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("portfolioId")]
        public string? PortfolioId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("costPrice")]
        public CostPrice2? CostPrice { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Repo2 
    {
        /// <summary>Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("currencyId")]
        public string? CurrencyId { get; set; }= default!;
    
        /// <summary>Standard date field which records trade date of the account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("tradeDate")]
        public string? TradeDate { get; set; }= default!;
    
        /// <summary>Indicates maturity date of the contract</summary>
        [System.Text.Json.Serialization.JsonPropertyName("maturityDate")]
        public string? MaturityDate { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ResoPosition2 
    {
        /// <summary>Unique identifier of an entity</summary>
        [System.Text.Json.Serialization.JsonPropertyName("recordId")]
        public string? RecordId { get; set; }= default!;
    
        /// <summary>Id of the portfolio or security account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("portfolioId")]
        public string? PortfolioId { get; set; }= default!;
    
        /// <summary>Id of the securities depository.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("depositoryId")]
        public string? DepositoryId { get; set; }= default!;
    
        /// <summary>The identifier of the instrument</summary>
        [System.Text.Json.Serialization.JsonPropertyName("instrumentId")]
        public string? InstrumentId { get; set; }= default!;
    
        /// <summary>The nominal quantity</summary>
        [System.Text.Json.Serialization.JsonPropertyName("quantity")]
        public string? Quantity { get; set; }= default!;
    
        /// <summary>Cost price of the Instrument</summary>
        [System.Text.Json.Serialization.JsonPropertyName("costPrice")]
        public CostPrice3? CostPrice { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class RepoPosition2 
    {
        /// <summary>Unique identifier of an entity</summary>
        [System.Text.Json.Serialization.JsonPropertyName("recordId")]
        public string? RecordId { get; set; }= default!;
    
        /// <summary>Id of the portfolio or security account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("portfolioId")]
        public string? PortfolioId { get; set; }= default!;
    
        /// <summary>Id of the securities depository.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("depositoryId")]
        public string? DepositoryId { get; set; }= default!;
    
        /// <summary>The identifier of the instrument</summary>
        [System.Text.Json.Serialization.JsonPropertyName("instrumentId")]
        public string? InstrumentId { get; set; }= default!;
    
        /// <summary>The nominal quantity</summary>
        [System.Text.Json.Serialization.JsonPropertyName("quantity")]
        public string? Quantity { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CostPrice 
    {
        /// <summary>The identifier of the counter party</summary>
        [System.Text.Json.Serialization.JsonPropertyName("counterpartyId")]
        public string? CounterpartyId { get; set; }= default!;
    
        /// <summary>The nominal quantity</summary>
        [System.Text.Json.Serialization.JsonPropertyName("quantity")]
        public string? Quantity { get; set; }= default!;
    
        /// <summary>Identifies the unique identifier of the transaction or contract.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("contractId")]
        public string? ContractId { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CostPrice2 
    {
        /// <summary>The identifier of the counter party</summary>
        [System.Text.Json.Serialization.JsonPropertyName("counterpartyId")]
        public string? CounterpartyId { get; set; }= default!;
    
        /// <summary>The nominal quantity</summary>
        [System.Text.Json.Serialization.JsonPropertyName("quantity")]
        public string? Quantity { get; set; }= default!;
    
        /// <summary>Identifies the unique identifier of the transaction or contract.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("contractId")]
        public string? ContractId { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CostPrice3 
    {
        /// <summary>Identifies the unique identifier of the transaction or contract.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("contractId")]
        public string? ContractId { get; set; }= default!;
    
    
    }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016