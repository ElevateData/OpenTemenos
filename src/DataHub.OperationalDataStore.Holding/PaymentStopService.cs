//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using Shared.Models;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"

namespace DataHub.OperationalDataStore.Holding.PaymentStops
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface IPaymentStopService
    {
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves the Payment Stop information of all accounts</summary>
        /// <param name="recordId">Unique identifier of an entity</param>
        /// <param name="customerId">Identifier of the customer</param>
        /// <param name="stopTypeId">Indicates the reason why a Payment Stop is requested for e.g. Cheque lost, funds not available etc.</param>
        /// <returns>getPaymentStopsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<GetPaymentStopsResponse> GetPaymentStopsAsync(string? recordId = null, string? customerId = null, string? stopTypeId = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
    }

    /// <summary>getPaymentStopsResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetPaymentStopsResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("data")]
        public GetPaymentStopsResponseBody? Data { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetPaymentStopsResponseBody 
    {
        /// <summary>Table allows all Payment Stop instructions to be recorded.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("paymentStop")]
        public System.Collections.Generic.ICollection<PaymentStop>? PaymentStop { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PaymentStop 
    {
        /// <summary>Unique identifier of an entity</summary>
        [System.Text.Json.Serialization.JsonPropertyName("recordId")]
        public string? RecordId { get; set; }= default!;
    
        /// <summary>Identifier of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerId")]
        public string? CustomerId { get; set; }= default!;
    
        /// <summary>Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("currencyId")]
        public string? CurrencyId { get; set; }= default!;
    
        /// <summary>Indicates the reason why a Payment Stop is requested for e.g. Cheque lost, funds not available etc. </summary>
        [System.Text.Json.Serialization.JsonPropertyName("stopTypeId")]
        public StopTypeId? StopTypeId { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class StopTypeId 
    {
        /// <summary>Specifies the Amount up To which the Payment Stop instruction is effective.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("amountTo")]
        public string? AmountTo { get; set; }= default!;
    
        /// <summary>It is possible to stop a range of cheques in one instruction. This indicates the first cheque number in the range for which payment stop instruction is effective</summary>
        [System.Text.Json.Serialization.JsonPropertyName("firstChequeId")]
        public string? FirstChequeId { get; set; }= default!;
    
        /// <summary>Indicates the reason why a Payment Stop is requested for e.g. Cheque lost, funds not available etc. </summary>
        [System.Text.Json.Serialization.JsonPropertyName("stopTypeId")]
        public string? StopTypeId1 { get; set; }= default!;
    
        /// <summary>Specifies the Amount From which the Payment Stop instruction is effective.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("amountFrom")]
        public string? AmountFrom { get; set; }= default!;
    
        /// <summary>It is possible to stop a range of cheques in one instruction. This indicates the last cheque number in the range for which payment stop instruction is effective</summary>
        [System.Text.Json.Serialization.JsonPropertyName("lastChequeId")]
        public string? LastChequeId { get; set; }= default!;
    
        /// <summary>Charge amount equivalent in currency of the charge account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("chargeAmount")]
        public string? ChargeAmount { get; set; }= default!;
    
        /// <summary>Indicates the type of Cheques for which payment stop instruction is effective</summary>
        [System.Text.Json.Serialization.JsonPropertyName("chequeTypeId")]
        public string? ChequeTypeId { get; set; }= default!;
    
        /// <summary>Indicates the date on which the Payment Stop is placed</summary>
        [System.Text.Json.Serialization.JsonPropertyName("stopDate")]
        public string? StopDate { get; set; }= default!;
    
        /// <summary>Indicates the Id of beneficiary when beneficiary details are stored</summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryId")]
        public string? BeneficiaryId { get; set; }= default!;
    
        /// <summary>Indicates the charge code to which the charges are identified and calculated and to be debited to the customer account. For example: C(Credit less Charges The Credit less Charges), D(Debit plus Charge The Debit plus Charge) , W(Waive).</summary>
        [System.Text.Json.Serialization.JsonPropertyName("chargeCode")]
        public ChargeCode? ChargeCode { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ChargeCode 
    {
        /// <summary>Charge amount equivalent in currency of the charge account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("chargeAmount")]
        public string? ChargeAmount { get; set; }= default!;
    
    
    }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016