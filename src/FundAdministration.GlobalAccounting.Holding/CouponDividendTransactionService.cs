//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using Shared.Models;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"

namespace FundAdministration.GlobalAccounting.Holding.CouponDividendTransaction
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface ICouponDividendTransactionService
    {
        /// <summary>Creates and manages coupon or dividend transactions</summary>
        /// <param name="referenceId">uniqueId for security purpose</param>
        /// <param name="token">unique token</param>
        /// <param name="username">username</param>
        /// <param name="company">company name</param>
        /// <param name="command">API operations like INVOKE, VALIDATE, PROCESS can be set or by default PROCESS is set</param>
        /// <param name="payload">couponDividendTransaction Payload</param>
        /// <returns>couponDividendTransaction Success Response</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<CouponDividendTransactionSuccessResponse> CouponDividendTransactionAsync(string? referenceId, string? token, string? username, string? company, string? command, _0BULKPayload payload);
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Creates and manages coupon or dividend transactions</summary>
        /// <param name="referenceId">uniqueId for security purpose</param>
        /// <param name="token">unique token</param>
        /// <param name="username">username</param>
        /// <param name="company">company name</param>
        /// <param name="command">API operations like INVOKE, VALIDATE, PROCESS can be set or by default PROCESS is set</param>
        /// <param name="payload">couponDividendTransaction Payload</param>
        /// <returns>couponDividendTransaction Success Response</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<CouponDividendTransactionSuccessResponse> CouponDividendTransactionAsync(string? referenceId, string? token, string? username, string? company, string? command, _0BULKPayload payload, System.Threading.CancellationToken cancellationToken);
    
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class _0BULKPayload 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public object? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public Body? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PaginationSchema 
    {
        [System.Text.Json.Serialization.JsonPropertyName("page")]
        public string? Page { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("size")]
        public string? Size { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("count")]
        public string? Count { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("total")]
        public string? Total { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class AuditSchema 
    {
        [System.Text.Json.Serialization.JsonPropertyName("startTime")]
        public string? StartTime { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("endTime")]
        public string? EndTime { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("processTime")]
        public string? ProcessTime { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SuccessHeaderstatusSchema 
    {
        [System.Text.Json.Serialization.JsonPropertyName("result")]
        public string? Result { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("HTTP_MESSAGE")]
        public string? HTTP_MESSAGE { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string? Description { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("HTTP_CODE")]
        public string? HTTP_CODE { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("requestId")]
        public string? RequestId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("responseId")]
        public string? ResponseId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("eTag")]
        public string? ETag { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("lastModified")]
        public string? LastModified { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CouponDividendTransactionSuccessheaderResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("pagination")]
        public PaginationSchema? Pagination { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public AuditSchema? Audit { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public SuccessHeaderstatusSchema? Status { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("company")]
        public string? Company { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("username")]
        public string? Username { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("referenceId")]
        public string? ReferenceId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("token")]
        public string? Token { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("details")]
        public System.Collections.Generic.ICollection<Details>? Details { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CouponDividendTransactionrecordsSchema : System.Collections.ObjectModel.Collection<_0>
    {
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CouponDividendTransactionSuccessbodyResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("records")]
        public CouponDividendTransactionrecordsSchema? Records { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CouponDividendTransactionSuccessResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public CouponDividendTransactionSuccessheaderResponse? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public CouponDividendTransactionSuccessbodyResponse? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ErrorHeaderstatusSchema 
    {
        [System.Text.Json.Serialization.JsonPropertyName("result")]
        public string? Result { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("HTTP_MESSAGE")]
        public string? HTTP_MESSAGE { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string? Description { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("HTTP_CODE")]
        public string? HTTP_CODE { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("requestId")]
        public string? RequestId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("responseId")]
        public string? ResponseId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("eTag")]
        public string? ETag { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("lastModified")]
        public string? LastModified { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("details")]
        public System.Collections.Generic.ICollection<Details2>? Details { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CouponDividendTransactionErrorheaderResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("pagination")]
        public PaginationSchema? Pagination { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public AuditSchema? Audit { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public ErrorHeaderstatusSchema? Status { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("referenceId")]
        public string? ReferenceId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("token")]
        public string? Token { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("username")]
        public string? Username { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CouponDividendTransactionErrorbodyResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("items")]
        public System.Collections.Generic.ICollection<Items>? Items { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CouponDividendTransactionErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public CouponDividendTransactionErrorheaderResponse? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public object? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class _0 
    {
        /// <summary>Multifonds Transaction type code</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionType")]
        public string? TransactionType { get; set; }= default!;
    
        /// <summary>Database Link</summary>
        [System.Text.Json.Serialization.JsonPropertyName("tradeRetrievalFromExternalDatabase")]
        public string? TradeRetrievalFromExternalDatabase { get; set; }= default!;
    
        /// <summary>Currency in which the settlement would be processed.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("correspondentTransactionCurrency")]
        public string? CorrespondentTransactionCurrency { get; set; }= default!;
    
        /// <summary>Suffix number of the Conversion/Interface</summary>
        [System.Text.Json.Serialization.JsonPropertyName("conversionInterfaceSuffixNumber")]
        public string? ConversionInterfaceSuffixNumber { get; set; }= default!;
    
        /// <summary>Type of cash account for the correspondent</summary>
        [System.Text.Json.Serialization.JsonPropertyName("correspondentCashAccountType")]
        public string? CorrespondentCashAccountType { get; set; }= default!;
    
        /// <summary>Security identifier used in the transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("shareSecurityNumber")]
        public double? ShareSecurityNumber { get; set; }= default!;
    
        /// <summary>Input Trade date or Value date or accounting date. Depends on the feature that is used</summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountingDate")]
        public string? AccountingDate { get; set; }= default!;
    
        /// <summary>The ex-date, or ex-dividend date, is the date on or after which a security is traded without a previously declared dividend or distribution.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("executionDate")]
        public string? ExecutionDate { get; set; }= default!;
    
        /// <summary>Trade date of the trnsaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("tradeDate")]
        public string? TradeDate { get; set; }= default!;
    
        /// <summary>Trade Date in case of income transaction like coupon or dividend, Execution date for Dividend announcement and Corporate Action</summary>
        [System.Text.Json.Serialization.JsonPropertyName("paymentDate")]
        public string? PaymentDate { get; set; }= default!;
    
        /// <summary>Settlement date of transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("valueDate")]
        public string? ValueDate { get; set; }= default!;
    
        /// <summary>Exchange rate applied. (if Null : calculated by MF)</summary>
        [System.Text.Json.Serialization.JsonPropertyName("exchangeRateCorrespondent")]
        public double? ExchangeRateCorrespondent { get; set; }= default!;
    
        /// <summary>Amount of correspondent fees</summary>
        [System.Text.Json.Serialization.JsonPropertyName("correspondentFeesAmount")]
        public double? CorrespondentFeesAmount { get; set; }= default!;
    
        /// <summary>Amount of settlement as part of the transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("localNetAmount")]
        public double? LocalNetAmount { get; set; }= default!;
    
        /// <summary>Recoverable tax amount on Income , type 1</summary>
        [System.Text.Json.Serialization.JsonPropertyName("amountOfRecoverableTaxes")]
        public double? AmountOfRecoverableTaxes { get; set; }= default!;
    
        /// <summary>Unrecoverable tax amount on Income , type 1</summary>
        [System.Text.Json.Serialization.JsonPropertyName("unrecoverableTaxesAmount")]
        public double? UnrecoverableTaxesAmount { get; set; }= default!;
    
        /// <summary>Account manager number (fund)</summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountManagerNumber")]
        public string? AccountManagerNumber { get; set; }= default!;
    
        /// <summary>Tax lot number to identify tax lots based on acquisition date</summary>
        [System.Text.Json.Serialization.JsonPropertyName("contractNumber")]
        public string? ContractNumber { get; set; }= default!;
    
        /// <summary>Correspondent bank where the cash proceeds from the transaction would be settled</summary>
        [System.Text.Json.Serialization.JsonPropertyName("correspondentNumber")]
        public string? CorrespondentNumber { get; set; }= default!;
    
        /// <summary>Custodian where the units of the transaction would be lodged</summary>
        [System.Text.Json.Serialization.JsonPropertyName("depositaryNumber")]
        public string? DepositaryNumber { get; set; }= default!;
    
        /// <summary>Existing system entry number</summary>
        [System.Text.Json.Serialization.JsonPropertyName("externalReferenceNumber")]
        public string? ExternalReferenceNumber { get; set; }= default!;
    
        /// <summary>Existing system fund number</summary>
        [System.Text.Json.Serialization.JsonPropertyName("existingSystemFundNumber")]
        public string? ExistingSystemFundNumber { get; set; }= default!;
    
        /// <summary>Description of transaction.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("operationDescription")]
        public string? OperationDescription { get; set; }= default!;
    
        /// <summary>ID code of the CFD</summary>
        [System.Text.Json.Serialization.JsonPropertyName("cfdIdCode")]
        public string? CfdIdCode { get; set; }= default!;
    
        /// <summary>External reference number of the CFD</summary>
        [System.Text.Json.Serialization.JsonPropertyName("cfdExternalReferenceNumber")]
        public string? CfdExternalReferenceNumber { get; set; }= default!;
    
        /// <summary>Relates to Identifier codes of security,Provider,Thirdparty and industry etc</summary>
        [System.Text.Json.Serialization.JsonPropertyName("securitySourceIdentification")]
        public string? SecuritySourceIdentification { get; set; }= default!;
    
        /// <summary>The External identification code for Security like 01 for Telekurs, 03 for Sedol. Also used for other provider identifiers</summary>
        [System.Text.Json.Serialization.JsonPropertyName("externalSecurityIdentification")]
        public string? ExternalSecurityIdentification { get; set; }= default!;
    
        /// <summary>Recoverable tax percentage on Income , type 1</summary>
        [System.Text.Json.Serialization.JsonPropertyName("prectax")]
        public double? Prectax { get; set; }= default!;
    
        /// <summary>Unrecoverable tax percentage on Income , type 1</summary>
        [System.Text.Json.Serialization.JsonPropertyName("unrecoverableTaxesPercentage")]
        public double? UnrecoverableTaxesPercentage { get; set; }= default!;
    
        /// <summary>Recoverable tax percentage on Income , type 2</summary>
        [System.Text.Json.Serialization.JsonPropertyName("prectax2")]
        public double? Prectax2 { get; set; }= default!;
    
        /// <summary>Unrecoverable tax percentage on Income , type 2</summary>
        [System.Text.Json.Serialization.JsonPropertyName("unrecoverableTaxesPercentage2")]
        public double? UnrecoverableTaxesPercentage2 { get; set; }= default!;
    
        /// <summary>Global amount for pik bonds</summary>
        [System.Text.Json.Serialization.JsonPropertyName("pikBondsGlobalAmount")]
        public double? PikBondsGlobalAmount { get; set; }= default!;
    
        /// <summary>Correspondent commission amount</summary>
        [System.Text.Json.Serialization.JsonPropertyName("correspondentCommissionAmount")]
        public double? CorrespondentCommissionAmount { get; set; }= default!;
    
        /// <summary>Factor for PIK security</summary>
        [System.Text.Json.Serialization.JsonPropertyName("pikFactor")]
        public double? PikFactor { get; set; }= default!;
    
        /// <summary>The commission percentage of the income is defined</summary>
        [System.Text.Json.Serialization.JsonPropertyName("correspondentCommissionPercentage")]
        public double? CorrespondentCommissionPercentage { get; set; }= default!;
    
        /// <summary>PIK Interest Rate</summary>
        [System.Text.Json.Serialization.JsonPropertyName("percentOfPikTaxes")]
        public double? PercentOfPikTaxes { get; set; }= default!;
    
        /// <summary>Recoverable tax amount on Income , type 2</summary>
        [System.Text.Json.Serialization.JsonPropertyName("amountOfRecoverableTaxes2")]
        public double? AmountOfRecoverableTaxes2 { get; set; }= default!;
    
        /// <summary>Unrecoverable tax amount on Income , type 2</summary>
        [System.Text.Json.Serialization.JsonPropertyName("unrecoverableTaxesAmount2")]
        public double? UnrecoverableTaxesAmount2 { get; set; }= default!;
    
        /// <summary>Net amount of pik</summary>
        [System.Text.Json.Serialization.JsonPropertyName("netPikAmount")]
        public double? NetPikAmount { get; set; }= default!;
    
        /// <summary>Unit amount of Tax , Type 1. This is also used for KEST , which is a witholding tax on German income payments to foreign investment funds</summary>
        [System.Text.Json.Serialization.JsonPropertyName("kestAmount")]
        public double? KestAmount { get; set; }= default!;
    
        /// <summary>Unit amount of Tax , Type 2. This is also used for KOST , which is a witholding tax on German income payments to foreign investment funds</summary>
        [System.Text.Json.Serialization.JsonPropertyName("kostAmount")]
        public double? KostAmount { get; set; }= default!;
    
        /// <summary>Denotes the per unit amount in the security currency or the quoted currency</summary>
        [System.Text.Json.Serialization.JsonPropertyName("unitAmountInSecurityCurrency")]
        public double? UnitAmountInSecurityCurrency { get; set; }= default!;
    
        /// <summary>Payable tax amount 1</summary>
        [System.Text.Json.Serialization.JsonPropertyName("switchPurchasedAmount")]
        public double? SwitchPurchasedAmount { get; set; }= default!;
    
        /// <summary>Payable tax amount 2</summary>
        [System.Text.Json.Serialization.JsonPropertyName("switchSoldAmount")]
        public double? SwitchSoldAmount { get; set; }= default!;
    
        /// <summary>Gain\Loss amount</summary>
        [System.Text.Json.Serialization.JsonPropertyName("gainLossAmount")]
        public double? GainLossAmount { get; set; }= default!;
    
        /// <summary>Necritur information of settlement transaction.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("settlementEntryNumber")]
        public string? SettlementEntryNumber { get; set; }= default!;
    
        /// <summary>Payable tax percent 1</summary>
        [System.Text.Json.Serialization.JsonPropertyName("fundFixedRate")]
        public double? FundFixedRate { get; set; }= default!;
    
        /// <summary>Payable tax percent 2</summary>
        [System.Text.Json.Serialization.JsonPropertyName("correspondentsFixedRate")]
        public double? CorrespondentsFixedRate { get; set; }= default!;
    
        /// <summary>Underlying security number</summary>
        [System.Text.Json.Serialization.JsonPropertyName("underlyingSecurityInternalMfIdentification")]
        public double? UnderlyingSecurityInternalMfIdentification { get; set; }= default!;
    
        /// <summary>Additional operation description</summary>
        [System.Text.Json.Serialization.JsonPropertyName("operationDescriptionExtension")]
        public string? OperationDescriptionExtension { get; set; }= default!;
    
        /// <summary>Coefficient Corporate Action %age</summary>
        [System.Text.Json.Serialization.JsonPropertyName("coefficientCorporateActionPercentage")]
        public double? CoefficientCorporateActionPercentage { get; set; }= default!;
    
        /// <summary>Quotation place</summary>
        [System.Text.Json.Serialization.JsonPropertyName("securityQuotationPlace")]
        public string? SecurityQuotationPlace { get; set; }= default!;
    
        /// <summary>Domicile of correspondent</summary>
        [System.Text.Json.Serialization.JsonPropertyName("securityIssuedCountryCode")]
        public string? SecurityIssuedCountryCode { get; set; }= default!;
    
        /// <summary>Interest start date</summary>
        [System.Text.Json.Serialization.JsonPropertyName("interestStartDate")]
        public string? InterestStartDate { get; set; }= default!;
    
        /// <summary>The unit price of an instrument which is being transacted.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("securityPrice")]
        public double? SecurityPrice { get; set; }= default!;
    
        /// <summary>Franked tax percentage on the dividend income</summary>
        [System.Text.Json.Serialization.JsonPropertyName("percentageTaxOnFrankedDividend")]
        public double? PercentageTaxOnFrankedDividend { get; set; }= default!;
    
        /// <summary>Franking credit Amount booked on the income</summary>
        [System.Text.Json.Serialization.JsonPropertyName("frankingCredits")]
        public double? FrankingCredits { get; set; }= default!;
    
        /// <summary>The Gross amount 1 of the income</summary>
        [System.Text.Json.Serialization.JsonPropertyName("grossAmount")]
        public double? GrossAmount { get; set; }= default!;
    
        /// <summary>Conduit Foreign Income percentage. CFI is ultimately received by a foreign resident through one or more interposed Australian corporate tax entities</summary>
        [System.Text.Json.Serialization.JsonPropertyName("conduitForeignIncome")]
        public double? ConduitForeignIncome { get; set; }= default!;
    
        /// <summary>Conduit Foreign Income Amount. CFI is ultimately received by a foreign resident through one or more interposed Australian corporate tax entities</summary>
        [System.Text.Json.Serialization.JsonPropertyName("conduitForeignIncomeAmount")]
        public double? ConduitForeignIncomeAmount { get; set; }= default!;
    
        /// <summary>Determines the percentage of Franked income for Franking credit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("percentageFrankedIncome")]
        public double? PercentageFrankedIncome { get; set; }= default!;
    
        /// <summary>Security lending tax percentage on the income</summary>
        [System.Text.Json.Serialization.JsonPropertyName("percentageTaxOnSeclen")]
        public double? PercentageTaxOnSeclen { get; set; }= default!;
    
        /// <summary>Rate of Fees charged on Income , type of fee 1</summary>
        [System.Text.Json.Serialization.JsonPropertyName("fees1")]
        public double? Fees1 { get; set; }= default!;
    
        /// <summary>Percentage of Fees charged on Income , type of fee 2</summary>
        [System.Text.Json.Serialization.JsonPropertyName("fees2")]
        public double? Fees2 { get; set; }= default!;
    
        /// <summary>Charges</summary>
        [System.Text.Json.Serialization.JsonPropertyName("charges")]
        public double? Charges { get; set; }= default!;
    
        /// <summary>Amount of Tax payable on the income , type of tax 1</summary>
        [System.Text.Json.Serialization.JsonPropertyName("amountOfTaxes1")]
        public double? AmountOfTaxes1 { get; set; }= default!;
    
        /// <summary>Amount of Tax payable on the income , type of tax 2</summary>
        [System.Text.Json.Serialization.JsonPropertyName("amountOfTaxes2")]
        public double? AmountOfTaxes2 { get; set; }= default!;
    
        /// <summary>Rate of FATCA Tax payable on the income. FATCA is taxation based on US residence</summary>
        [System.Text.Json.Serialization.JsonPropertyName("percentOfFatcaTaxes1")]
        public double? PercentOfFatcaTaxes1 { get; set; }= default!;
    
        /// <summary>Fee amount on the transaction creation</summary>
        [System.Text.Json.Serialization.JsonPropertyName("creationTransactionFees")]
        public double? CreationTransactionFees { get; set; }= default!;
    
        /// <summary>Rate of FATCA Tax recoverable on the income. FATCA is taxation based on US residence</summary>
        [System.Text.Json.Serialization.JsonPropertyName("percentageTaxOnFatca2")]
        public double? PercentageTaxOnFatca2 { get; set; }= default!;
    
        /// <summary>This field denotes the fee amount of the transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionFeesAmount")]
        public double? TransactionFeesAmount { get; set; }= default!;
    
        /// <summary>Flag to denote whether the security is in a defaulted status</summary>
        [System.Text.Json.Serialization.JsonPropertyName("flgNonAccStatus")]
        public string? FlgNonAccStatus { get; set; }= default!;
    
        /// <summary>Flag to denote if a security ( Trans Tasman security) needs to be included in 45 Day reporting whose ccy is different than AUD.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("flg45Day")]
        public string? Flg45Day { get; set; }= default!;
    
        /// <summary>Flag to determine if the provision on a security lending transaction should be accrued in the NAV</summary>
        [System.Text.Json.Serialization.JsonPropertyName("mortgageManualSettlementFlag")]
        public string? MortgageManualSettlementFlag { get; set; }= default!;
    
        /// <summary>Transaction Quantity</summary>
        [System.Text.Json.Serialization.JsonPropertyName("quantity")]
        public double? Quantity { get; set; }= default!;
    
        /// <summary>Message ID</summary>
        [System.Text.Json.Serialization.JsonPropertyName("msgId")]
        public string? MsgId { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Body 
    {
        [System.Text.Json.Serialization.JsonPropertyName("couponDividendTransactions")]
        public System.Collections.Generic.ICollection<_0>? CouponDividendTransactions { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Details 
    {
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Details2 
    {
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Items 
    {
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016