//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using Shared.Models;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"

namespace FundAdministration.GlobalAccounting.Holding.FundShareTransactions
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface IFundShareTransactionService
    {
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Creates and manges fund shareholder transactions (subscription, redemption, etc.)</summary>
        /// <param name="payload">fundSharetransaction Payload</param>
        /// <param name="referenceId">uniqueId for security purpose</param>
        /// <param name="token">unique token</param>
        /// <param name="username">username</param>
        /// <param name="company">company name</param>
        /// <param name="command">API operations like INVOKE, VALIDATE, PROCESS can be set or by default PROCESS is set</param>
        /// <returns>fundSharetransaction Success Response</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<FundSharetransactionSuccessResponse> FundSharetransactionAsync(_0BULKPayload payload, string? referenceId = null, string? token = null, string? username = null, string? company = null, string? command = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class _0BULKPayload 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public object? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public Body? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PaginationSchema 
    {
        [System.Text.Json.Serialization.JsonPropertyName("page")]
        public string? Page { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("size")]
        public string? Size { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("count")]
        public string? Count { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("total")]
        public string? Total { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class AuditSchema 
    {
        [System.Text.Json.Serialization.JsonPropertyName("startTime")]
        public string? StartTime { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("endTime")]
        public string? EndTime { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("processTime")]
        public string? ProcessTime { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SuccessHeaderstatusSchema 
    {
        [System.Text.Json.Serialization.JsonPropertyName("result")]
        public string? Result { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("HTTP_MESSAGE")]
        public string? HTTP_MESSAGE { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string? Description { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("HTTP_CODE")]
        public string? HTTP_CODE { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("requestId")]
        public string? RequestId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("responseId")]
        public string? ResponseId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("eTag")]
        public string? ETag { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("lastModified")]
        public string? LastModified { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class FundSharetransactionSuccessheaderResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("pagination")]
        public PaginationSchema? Pagination { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public AuditSchema? Audit { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public SuccessHeaderstatusSchema? Status { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("company")]
        public string? Company { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("username")]
        public string? Username { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("referenceId")]
        public string? ReferenceId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("token")]
        public string? Token { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("details")]
        public System.Collections.Generic.ICollection<Details>? Details { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class FundSharetransactionrecordsSchema : System.Collections.ObjectModel.Collection<_0>
    {
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class FundSharetransactionSuccessbodyResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("records")]
        public FundSharetransactionrecordsSchema? Records { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class FundSharetransactionSuccessResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public FundSharetransactionSuccessheaderResponse? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public FundSharetransactionSuccessbodyResponse? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ErrorHeaderstatusSchema 
    {
        [System.Text.Json.Serialization.JsonPropertyName("result")]
        public string? Result { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("HTTP_MESSAGE")]
        public string? HTTP_MESSAGE { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string? Description { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("HTTP_CODE")]
        public string? HTTP_CODE { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("requestId")]
        public string? RequestId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("responseId")]
        public string? ResponseId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("eTag")]
        public string? ETag { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("lastModified")]
        public string? LastModified { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("details")]
        public System.Collections.Generic.ICollection<Details2>? Details { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class FundSharetransactionErrorheaderResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("pagination")]
        public PaginationSchema? Pagination { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public AuditSchema? Audit { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public ErrorHeaderstatusSchema? Status { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("referenceId")]
        public string? ReferenceId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("token")]
        public string? Token { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("username")]
        public string? Username { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class FundSharetransactionErrorbodyResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("items")]
        public System.Collections.Generic.ICollection<Items>? Items { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class FundSharetransactionErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public FundSharetransactionErrorheaderResponse? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public object? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class _0 
    {
        /// <summary>Multifonds Transaction type code</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionType")]
        public string? TransactionType { get; set; }= default!;
    
        /// <summary>Database Link</summary>
        [System.Text.Json.Serialization.JsonPropertyName("tradeRetrievalFromExternalDatabase")]
        public string? TradeRetrievalFromExternalDatabase { get; set; }= default!;
    
        /// <summary>Existing system fund number</summary>
        [System.Text.Json.Serialization.JsonPropertyName("existingSystemFundNumber")]
        public string? ExistingSystemFundNumber { get; set; }= default!;
    
        /// <summary>Existing system entry number</summary>
        [System.Text.Json.Serialization.JsonPropertyName("externalReferenceNumber")]
        public string? ExternalReferenceNumber { get; set; }= default!;
    
        /// <summary>Unit holder against whom the share class units are lodged.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("shareholderNumber")]
        public string? ShareholderNumber { get; set; }= default!;
    
        /// <summary>Security identifier used in the transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("shareSecurityNumber")]
        public double? ShareSecurityNumber { get; set; }= default!;
    
        /// <summary>Type of fund share</summary>
        [System.Text.Json.Serialization.JsonPropertyName("shareType")]
        public string? ShareType { get; set; }= default!;
    
        /// <summary>Description of transaction.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("operationDescription")]
        public string? OperationDescription { get; set; }= default!;
    
        /// <summary>Input Trade date or Value date or accounting date. Depends on the feature that is used</summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountingDate")]
        public string? AccountingDate { get; set; }= default!;
    
        /// <summary>Trade date of the trnsaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("tradeDate")]
        public string? TradeDate { get; set; }= default!;
    
        /// <summary>Settlement date of transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("valueDate")]
        public string? ValueDate { get; set; }= default!;
    
        /// <summary>Reversal date</summary>
        [System.Text.Json.Serialization.JsonPropertyName("reversalDate")]
        public string? ReversalDate { get; set; }= default!;
    
        /// <summary>Transaction Quantity</summary>
        [System.Text.Json.Serialization.JsonPropertyName("quantity")]
        public double? Quantity { get; set; }= default!;
    
        /// <summary>Share price</summary>
        [System.Text.Json.Serialization.JsonPropertyName("sharePrice")]
        public double? SharePrice { get; set; }= default!;
    
        /// <summary>Currency of the gross amount of the operation</summary>
        [System.Text.Json.Serialization.JsonPropertyName("grossAmountCurrency")]
        public string? GrossAmountCurrency { get; set; }= default!;
    
        /// <summary>Gross amount of the transaction which is quantity multiplied by price</summary>
        [System.Text.Json.Serialization.JsonPropertyName("grossAmount")]
        public double? GrossAmount { get; set; }= default!;
    
        /// <summary>Gross amount if the commissions accruing to the bank, else net amount if they accrue to the fund</summary>
        [System.Text.Json.Serialization.JsonPropertyName("grossAmountPerShare")]
        public double? GrossAmountPerShare { get; set; }= default!;
    
        /// <summary>Currency of the net amount of the operation</summary>
        [System.Text.Json.Serialization.JsonPropertyName("netAmountCurrency")]
        public string? NetAmountCurrency { get; set; }= default!;
    
        /// <summary>Net amount of transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("netAmount")]
        public double? NetAmount { get; set; }= default!;
    
        /// <summary>Correspondent bank where the cash proceeds from the transaction would be settled</summary>
        [System.Text.Json.Serialization.JsonPropertyName("correspondentNumber")]
        public string? CorrespondentNumber { get; set; }= default!;
    
        /// <summary>Type of cash account for the correspondent</summary>
        [System.Text.Json.Serialization.JsonPropertyName("correspondentCashAccountType")]
        public string? CorrespondentCashAccountType { get; set; }= default!;
    
        /// <summary>Currency in which the settlement would be processed.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("correspondentTransactionCurrency")]
        public string? CorrespondentTransactionCurrency { get; set; }= default!;
    
        /// <summary>Exchange rate of the corresp. (If Null: calculated by MF)</summary>
        [System.Text.Json.Serialization.JsonPropertyName("exchangeRateCorrespondent")]
        public double? ExchangeRateCorrespondent { get; set; }= default!;
    
        /// <summary>Amount of settlement as part of the transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("correspondentNetAmount")]
        public double? CorrespondentNetAmount { get; set; }= default!;
    
        /// <summary>amount of the fees charged</summary>
        [System.Text.Json.Serialization.JsonPropertyName("feeAmount")]
        public double? FeeAmount { get; set; }= default!;
    
        /// <summary>Fees code for booking transaction fees</summary>
        [System.Text.Json.Serialization.JsonPropertyName("feesCode")]
        public string? FeesCode { get; set; }= default!;
    
        /// <summary>Percentage of transaction fees</summary>
        [System.Text.Json.Serialization.JsonPropertyName("taxCom")]
        public double? TaxCom { get; set; }= default!;
    
        /// <summary>Fees amount in settlement currency</summary>
        [System.Text.Json.Serialization.JsonPropertyName("rebookingFeesAmount")]
        public double? RebookingFeesAmount { get; set; }= default!;
    
        /// <summary>The currency in which the fees are denoted in a transaction.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("upfrontSettlementCurrencyCode")]
        public string? UpfrontSettlementCurrencyCode { get; set; }= default!;
    
        /// <summary>Relates to Identifier codes of security,Provider,Thirdparty and industry etc</summary>
        [System.Text.Json.Serialization.JsonPropertyName("securityIdentifier")]
        public string? SecurityIdentifier { get; set; }= default!;
    
        /// <summary>The External identification code for Security like 01 for Telekurs, 03 for Sedol. Also used for other provider identifiers</summary>
        [System.Text.Json.Serialization.JsonPropertyName("externalSecurityIdentification")]
        public string? ExternalSecurityIdentification { get; set; }= default!;
    
        /// <summary>Quotation place</summary>
        [System.Text.Json.Serialization.JsonPropertyName("securityQuotationPlace")]
        public string? SecurityQuotationPlace { get; set; }= default!;
    
        /// <summary>Domicile of correspondent</summary>
        [System.Text.Json.Serialization.JsonPropertyName("securityIssuedCountryCode")]
        public string? SecurityIssuedCountryCode { get; set; }= default!;
    
        /// <summary>Suffix number of the conversion/interfaceType of fund share</summary>
        [System.Text.Json.Serialization.JsonPropertyName("conversionInterfaceSuffixNumber")]
        public string? ConversionInterfaceSuffixNumber { get; set; }= default!;
    
        /// <summary>Necritur information of Settlement transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("settlementEntryNumber")]
        public string? SettlementEntryNumber { get; set; }= default!;
    
        /// <summary>Recoverable tax amount on Income , type 2</summary>
        [System.Text.Json.Serialization.JsonPropertyName("amountOfRecoverableTaxes2")]
        public double? AmountOfRecoverableTaxes2 { get; set; }= default!;
    
        /// <summary>Commission type for lending/borrowing transactions</summary>
        [System.Text.Json.Serialization.JsonPropertyName("commissionType")]
        public string? CommissionType { get; set; }= default!;
    
        /// <summary>Usance code for security lending commission calculation</summary>
        [System.Text.Json.Serialization.JsonPropertyName("lendingUsanceCode")]
        public string? LendingUsanceCode { get; set; }= default!;
    
        /// <summary>Flag to automatically block the security lent position in the portfolio</summary>
        [System.Text.Json.Serialization.JsonPropertyName("blockSecurityFlag")]
        public string? BlockSecurityFlag { get; set; }= default!;
    
        /// <summary>Officer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("interestRateType")]
        public string? InterestRateType { get; set; }= default!;
    
        /// <summary>Manager for subscription and redemption</summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountManagerNumber")]
        public string? AccountManagerNumber { get; set; }= default!;
    
        /// <summary>Perf fees Nominal Amount for Correspondent</summary>
        [System.Text.Json.Serialization.JsonPropertyName("bookingAmount")]
        public double? BookingAmount { get; set; }= default!;
    
        /// <summary>Time stamp of the trade execution in the market.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("execTimestamp")]
        public string? ExecTimestamp { get; set; }= default!;
    
        /// <summary>RNI Amount</summary>
        [System.Text.Json.Serialization.JsonPropertyName("incomeequalisationAmount")]
        public double? IncomeequalisationAmount { get; set; }= default!;
    
        /// <summary>Price in share ccy</summary>
        [System.Text.Json.Serialization.JsonPropertyName("foreignCcySharePrice")]
        public double? ForeignCcySharePrice { get; set; }= default!;
    
        /// <summary>Ccy Share</summary>
        [System.Text.Json.Serialization.JsonPropertyName("foreignCcy")]
        public string? ForeignCcy { get; set; }= default!;
    
        /// <summary>Net Amount Foreign Ccy</summary>
        [System.Text.Json.Serialization.JsonPropertyName("netAmountForeignCcy")]
        public double? NetAmountForeignCcy { get; set; }= default!;
    
        /// <summary>The flag to denote if an increase/decrease on pool units need to be impact other funds or only stanalone.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("flgAutoOutStandalone")]
        public string? FlgAutoOutStandalone { get; set; }= default!;
    
        /// <summary>UDF Code</summary>
        [System.Text.Json.Serialization.JsonPropertyName("udfCode")]
        public string? UdfCode { get; set; }= default!;
    
        /// <summary>Short Code</summary>
        [System.Text.Json.Serialization.JsonPropertyName("shortCode")]
        public string? ShortCode { get; set; }= default!;
    
        /// <summary>Long desc</summary>
        [System.Text.Json.Serialization.JsonPropertyName("longDesc")]
        public string? LongDesc { get; set; }= default!;
    
        /// <summary>Chk Data</summary>
        [System.Text.Json.Serialization.JsonPropertyName("chkData")]
        public string? ChkData { get; set; }= default!;
    
        /// <summary>Message Id</summary>
        [System.Text.Json.Serialization.JsonPropertyName("msgId")]
        public string? MsgId { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Body 
    {
        [System.Text.Json.Serialization.JsonPropertyName("fundSharetransactions")]
        public System.Collections.Generic.ICollection<_0>? FundSharetransactions { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Details 
    {
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Details2 
    {
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Items 
    {
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016