//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using Shared.Models;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"

namespace DataHub.OperationalDataStore.Order.SweepAccountDetails
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface ISweepAccountDetailsService
    {
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves the account sweep details set for credit</summary>
        /// <param name="creditAccount">Identifier of the creditAccounts.</param>
        /// <returns>getSweepCreditAccountDetailsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<GetSweepCreditAccountDetailsResponse> GetSweepCreditAccountDetailsAsync(string creditAccount, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves the account sweep details set for debit</summary>
        /// <param name="debitAccount">Refers to the account which will be debited and funds moved out.</param>
        /// <returns>getSweepDebitAccountDetailsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<GetSweepDebitAccountDetailsResponse> GetSweepDebitAccountDetailsAsync(string debitAccount, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
    }

    /// <summary>getSweepCreditAccountDetailsResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetSweepCreditAccountDetailsResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("data")]
        public GetSweepCreditAccountDetailsResponseBody? Data { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetSweepCreditAccountDetailsResponseBody 
    {
        /// <summary>Helps to create a link between accounts for a sweep to occour</summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountLine")]
        public System.Collections.Generic.ICollection<AccountLine>? AccountLine { get; set; }= default!;
    
    
    }
    
    /// <summary>getSweepDebitAccountDetailsResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetSweepDebitAccountDetailsResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("data")]
        public GetSweepDebitAccountDetailsResponseBody? Data { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetSweepDebitAccountDetailsResponseBody 
    {
        /// <summary>Helps to create a link between accounts for a sweep to occour</summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountLine")]
        public System.Collections.Generic.ICollection<AccountLine2>? AccountLine { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class AccountLine 
    {
        /// <summary>Unique identifier of an entity</summary>
        [System.Text.Json.Serialization.JsonPropertyName("recordId")]
        public string? RecordId { get; set; }= default!;
    
        /// <summary>Sweep types defined to the user</summary>
        [System.Text.Json.Serialization.JsonPropertyName("sweepType")]
        public string? SweepType { get; set; }= default!;
    
        /// <summary> Refers to the account which will be debited and funds moved out.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("debitAccount")]
        public DebitAccount? DebitAccount { get; set; }= default!;
    
        /// <summary>Account Number to which the outstanding balance is to be transferred</summary>
        [System.Text.Json.Serialization.JsonPropertyName("creditAccount")]
        public CreditAccount? CreditAccount { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class AccountLine2 
    {
        /// <summary>Unique identifier of an entity</summary>
        [System.Text.Json.Serialization.JsonPropertyName("recordId")]
        public string? RecordId { get; set; }= default!;
    
        /// <summary>Sweep types defined to the user</summary>
        [System.Text.Json.Serialization.JsonPropertyName("sweepType")]
        public string? SweepType { get; set; }= default!;
    
        /// <summary> Refers to the account which will be debited and funds moved out.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("debitAccount")]
        public DebitAccount2? DebitAccount { get; set; }= default!;
    
        /// <summary>Account Number to which the outstanding balance is to be transferred</summary>
        [System.Text.Json.Serialization.JsonPropertyName("creditAccount")]
        public CreditAccount2? CreditAccount { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DebitAccount 
    {
        /// <summary>Is the currency of the account which funds will be transferred from.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("fromAccountCurrency")]
        public string? FromAccountCurrency { get; set; }= default!;
    
        /// <summary> Refers to the account which will be debited and funds moved out.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("debitAccount")]
        public string? DebitAccount1 { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CreditAccount 
    {
        /// <summary>For Surplus sweep this refers to the account which will be debited and funds moved out. For maintenance sweep, this will be the account where funds are credited to maintain the account.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("toAccountCurrency")]
        public string? ToAccountCurrency { get; set; }= default!;
    
        /// <summary>Account Number to which the outstanding balance is to be transferred</summary>
        [System.Text.Json.Serialization.JsonPropertyName("creditAccount")]
        public string? CreditAccount1 { get; set; }= default!;
    
        /// <summary>The maximum account balance allowed.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("maximumAmount")]
        public string? MaximumAmount { get; set; }= default!;
    
        /// <summary>The minimum account balance required.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("minimumAmount")]
        public string? MinimumAmount { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DebitAccount2 
    {
        /// <summary>Is the currency of the account which funds will be transferred from.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("fromAccountCurrency")]
        public string? FromAccountCurrency { get; set; }= default!;
    
        /// <summary> Refers to the account which will be debited and funds moved out.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("debitAccount")]
        public string? DebitAccount { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CreditAccount2 
    {
        /// <summary>For Surplus sweep this refers to the account which will be debited and funds moved out. For maintenance sweep, this will be the account where funds are credited to maintain the account.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("toAccountCurrency")]
        public string? ToAccountCurrency { get; set; }= default!;
    
        /// <summary>Account Number to which the outstanding balance is to be transferred</summary>
        [System.Text.Json.Serialization.JsonPropertyName("creditAccount")]
        public string? CreditAccount { get; set; }= default!;
    
        /// <summary>The maximum account balance allowed.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("maximumAmount")]
        public string? MaximumAmount { get; set; }= default!;
    
        /// <summary>The minimum account balance required.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("minimumAmount")]
        public string? MinimumAmount { get; set; }= default!;
    
    
    }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016