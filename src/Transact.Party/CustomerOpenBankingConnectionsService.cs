//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using Shared.Models;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"

namespace Transact.Party.CustomerOpenBankingConnections
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface ICustomerOpenBankingConnectionsService
    {
        /// <summary>Initiate a request to map a new external account into customer profile</summary>
        /// <param name="connectionId">Contains the id associated to the connect reference respective to a transaction of the account</param>
        /// <param name="payload">body Payload</param>
        /// <param name="validate_only">The identifier to indicate if it is set to only validate or not.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <returns>OpenBankingConnectionResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<OpenBankingConnectionResponse> CreateOpenBankingConnectionAsync(string connectionId, OpenBankingConnection payload, bool? validate_only, string? credentials, string? companyId, string? deviceId, string? userRole);
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Initiate a request to map a new external account into customer profile</summary>
        /// <param name="connectionId">Contains the id associated to the connect reference respective to a transaction of the account</param>
        /// <param name="payload">body Payload</param>
        /// <param name="validate_only">The identifier to indicate if it is set to only validate or not.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <returns>OpenBankingConnectionResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<OpenBankingConnectionResponse> CreateOpenBankingConnectionAsync(string connectionId, OpenBankingConnection payload, bool? validate_only, string? credentials, string? companyId, string? deviceId, string? userRole, System.Threading.CancellationToken cancellationToken);
    
        /// <summary>Revoke the access of existing external accounts for a customer</summary>
        /// <param name="connectionId">Contains the id associated to the connect reference respective to a transaction of the account</param>
        /// <param name="payload">body Payload</param>
        /// <param name="validate_only">The identifier to indicate if it is set to only validate or not.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <returns>OpenBankingConnectionResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<OpenBankingConnectionResponse1> RemoveOpenBankingConnectionAsync(string connectionId, OpenBankingConnection1 payload, bool? validate_only, string? credentials, string? companyId, string? deviceId, string? userRole);
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Revoke the access of existing external accounts for a customer</summary>
        /// <param name="connectionId">Contains the id associated to the connect reference respective to a transaction of the account</param>
        /// <param name="payload">body Payload</param>
        /// <param name="validate_only">The identifier to indicate if it is set to only validate or not.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <returns>OpenBankingConnectionResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<OpenBankingConnectionResponse1> RemoveOpenBankingConnectionAsync(string connectionId, OpenBankingConnection1 payload, bool? validate_only, string? credentials, string? companyId, string? deviceId, string? userRole, System.Threading.CancellationToken cancellationToken);
    
        /// <summary>Renew the access of existing external accounts for a customer</summary>
        /// <param name="connectionId">Contains the id associated to the connect reference respective to a transaction of the account</param>
        /// <param name="payload">body Payload</param>
        /// <param name="validate_only">The identifier to indicate if it is set to only validate or not.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <returns>OpenBankingConnectionResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<OpenBankingConnectionResponse> ReconnectOpenBankingConnectionAsync(string connectionId, OpenBankingConnection payload, bool? validate_only, string? credentials, string? companyId, string? deviceId, string? userRole);
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Renew the access of existing external accounts for a customer</summary>
        /// <param name="connectionId">Contains the id associated to the connect reference respective to a transaction of the account</param>
        /// <param name="payload">body Payload</param>
        /// <param name="validate_only">The identifier to indicate if it is set to only validate or not.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <returns>OpenBankingConnectionResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<OpenBankingConnectionResponse> ReconnectOpenBankingConnectionAsync(string connectionId, OpenBankingConnection payload, bool? validate_only, string? credentials, string? companyId, string? deviceId, string? userRole, System.Threading.CancellationToken cancellationToken);
    
        /// <summary>Refresh the existing external accounts to get the up to date details</summary>
        /// <param name="connectionId">Contains the id associated to the connect reference respective to a transaction of the account</param>
        /// <param name="payload">body Payload</param>
        /// <param name="validate_only">The identifier to indicate if it is set to only validate or not.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <returns>OpenBankingConnectionResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<OpenBankingConnectionResponse2> RefreshOpenBankingConnectionAsync(string connectionId, OpenBankingConnection2 payload, bool? validate_only, string? credentials, string? companyId, string? deviceId, string? userRole);
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Refresh the existing external accounts to get the up to date details</summary>
        /// <param name="connectionId">Contains the id associated to the connect reference respective to a transaction of the account</param>
        /// <param name="payload">body Payload</param>
        /// <param name="validate_only">The identifier to indicate if it is set to only validate or not.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <returns>OpenBankingConnectionResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<OpenBankingConnectionResponse2> RefreshOpenBankingConnectionAsync(string connectionId, OpenBankingConnection2 payload, bool? validate_only, string? credentials, string? companyId, string? deviceId, string? userRole, System.Threading.CancellationToken cancellationToken);
    
        /// <summary>Retrieves the list of details on third parties, banks and customers</summary>
        /// <param name="connectionId">Contains the id associated to the connect reference respective to a transaction of the account</param>
        /// <param name="customerId">Identifier of the customer</param>
        /// <param name="currentState">Contains the current state of the transaction</param>
        /// <param name="connectionStatus">Contains the connection status of the transaction</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from Transact on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>ThirdPartyProviderConsentsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ThirdPartyProviderConsentsResponse> GetThirdPartyProviderConsentsAsync(string? connectionId, string? customerId, string? currentState, string? connectionStatus, int? page_size, int? page_start, string? page_token, string? credentials, string? companyId, string? deviceId, string? userRole, bool? disablePagination);
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves the list of details on third parties, banks and customers</summary>
        /// <param name="connectionId">Contains the id associated to the connect reference respective to a transaction of the account</param>
        /// <param name="customerId">Identifier of the customer</param>
        /// <param name="currentState">Contains the current state of the transaction</param>
        /// <param name="connectionStatus">Contains the connection status of the transaction</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from Transact on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>ThirdPartyProviderConsentsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ThirdPartyProviderConsentsResponse> GetThirdPartyProviderConsentsAsync(string? connectionId, string? customerId, string? currentState, string? connectionStatus, int? page_size, int? page_start, string? page_token, string? credentials, string? companyId, string? deviceId, string? userRole, bool? disablePagination, System.Threading.CancellationToken cancellationToken);
    
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PayloadHeader 
    {
        [System.Text.Json.Serialization.JsonPropertyName("override")]
        public Override? Override { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public Audit? Audit { get; set; }= default!;
    
    
    }
    
    /// <summary>OpenBankingConnection</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OpenBankingConnection 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public PayloadHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public OpenBankingConnectionBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OpenBankingConnectionBody 
    {
        /// <summary>Contains the different consent types in other banks</summary>
        [System.Text.Json.Serialization.JsonPropertyName("otherBankConsentTypes")]
        public System.Collections.Generic.ICollection<OtherBankConsentTypes>? OtherBankConsentTypes { get; set; }= default!;
    
        /// <summary>This field indicates if Ordering customer has provided consent for this payment order to be initiated</summary>
        [System.Text.Json.Serialization.JsonPropertyName("consents")]
        public System.Collections.Generic.ICollection<Consents>? Consents { get; set; }= default!;
    
        /// <summary>Identifier of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerId")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? CustomerId { get; set; }= default!;
    
        /// <summary>Contains the identifier of the bank with which the transaction is performed</summary>
        [System.Text.Json.Serialization.JsonPropertyName("bankId")]
        [System.ComponentModel.DataAnnotations.StringLength(6)]
        public string? BankId { get; set; }= default!;
    
        /// <summary>The name of the bank being referred to.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("bankName")]
        [System.ComponentModel.DataAnnotations.StringLength(8)]
        public string? BankName { get; set; }= default!;
    
        /// <summary>Contains the code of the bank with which the transaction is performed</summary>
        [System.Text.Json.Serialization.JsonPropertyName("bankCode")]
        [System.ComponentModel.DataAnnotations.StringLength(8)]
        public string? BankCode { get; set; }= default!;
    
        /// <summary>ISO country code of the financial institution. </summary>
        [System.Text.Json.Serialization.JsonPropertyName("countryId")]
        [System.ComponentModel.DataAnnotations.StringLength(15)]
        public string? CountryId { get; set; }= default!;
    
        /// <summary>Denotes the  consent period identifier of the other bank</summary>
        [System.Text.Json.Serialization.JsonPropertyName("obcpId")]
        [System.ComponentModel.DataAnnotations.StringLength(6)]
        public string? ObcpId { get; set; }= default!;
    
        /// <summary>Denotes the  consent period connection identifier of the other bank</summary>
        [System.Text.Json.Serialization.JsonPropertyName("obcpConnectionId")]
        [System.ComponentModel.DataAnnotations.StringLength(16)]
        public string? ObcpConnectionId { get; set; }= default!;
    
        /// <summary>Contains the connection status of the transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("connectionStatus")]
        [System.ComponentModel.DataAnnotations.StringLength(16)]
        public string? ConnectionStatus { get; set; }= default!;
    
        /// <summary>Contains the sub status of the transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("subStatus")]
        [System.ComponentModel.DataAnnotations.StringLength(9)]
        public string? SubStatus { get; set; }= default!;
    
        /// <summary>Contains the current state of the transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("currentState")]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        public string? CurrentState { get; set; }= default!;
    
        /// <summary>Contains the latest token of the ongoing transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("latestToken")]
        [System.ComponentModel.DataAnnotations.StringLength(11)]
        public string? LatestToken { get; set; }= default!;
    
        /// <summary>Contains the latest redirected URL of the ongoing transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("latestRedirectUrl")]
        [System.ComponentModel.DataAnnotations.StringLength(17)]
        public string? LatestRedirectUrl { get; set; }= default!;
    
        /// <summary>Denotes the identifier of the default consent arrangement</summary>
        [System.Text.Json.Serialization.JsonPropertyName("defaultConsentArrangementId")]
        [System.ComponentModel.DataAnnotations.StringLength(27)]
        public string? DefaultConsentArrangementId { get; set; }= default!;
    
        /// <summary>Contains the consent period token of the other banks</summary>
        [System.Text.Json.Serialization.JsonPropertyName("obcpToken")]
        [System.ComponentModel.DataAnnotations.StringLength(9)]
        public string? ObcpToken { get; set; }= default!;
    
        /// <summary>Contains the consent period redirected URL of the other banks</summary>
        [System.Text.Json.Serialization.JsonPropertyName("obcpRedirectUrl")]
        [System.ComponentModel.DataAnnotations.StringLength(15)]
        public string? ObcpRedirectUrl { get; set; }= default!;
    
        /// <summary>Contains the number of days in the consent period of the other banks </summary>
        [System.Text.Json.Serialization.JsonPropertyName("otherBankConsentPeriodDays")]
        [System.ComponentModel.DataAnnotations.StringLength(26)]
        public string? OtherBankConsentPeriodDays { get; set; }= default!;
    
        /// <summary>Contains the date/time at which the other banks consent period starts</summary>
        [System.Text.Json.Serialization.JsonPropertyName("otherBankConsentGivenAt")]
        [System.ComponentModel.DataAnnotations.StringLength(23)]
        public string? OtherBankConsentGivenAt { get; set; }= default!;
    
        /// <summary>Contains the date/time at which the other banks consent period expires</summary>
        [System.Text.Json.Serialization.JsonPropertyName("otherBankConsentExpiresAt")]
        [System.ComponentModel.DataAnnotations.StringLength(25)]
        public string? OtherBankConsentExpiresAt { get; set; }= default!;
    
        /// <summary>Contains the date/time at which at which the Consent was given</summary>
        [System.Text.Json.Serialization.JsonPropertyName("consentGivenAt")]
        [System.ComponentModel.DataAnnotations.StringLength(14)]
        public string? ConsentGivenAt { get; set; }= default!;
    
        /// <summary>Defines whether the user has accepted the Terms and Conditions first displayed when the user logs in to the system for the very first time.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("termsAccepted")]
        [System.ComponentModel.DataAnnotations.StringLength(13)]
        public string? TermsAccepted { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ScreenHeader 
    {
        /// <summary>The Identifier of the record created</summary>
        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public string? Id { get; set; }= default!;
    
        /// <summary>Status of the API(success/failed)</summary>
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public string? Status { get; set; }= default!;
    
        /// <summary>The status of the transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionStatus")]
        public string? TransactionStatus { get; set; }= default!;
    
        /// <summary>The unique identifier/Message Reference of the record created.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("uniqueIdentifier")]
        public string? UniqueIdentifier { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public Audit2? Audit { get; set; }= default!;
    
    
    }
    
    /// <summary>OpenBankingConnectionResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OpenBankingConnectionResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ScreenHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public OpenBankingConnectionResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OpenBankingConnectionResponseBody 
    {
        /// <summary>Contains the different consent types in other banks</summary>
        [System.Text.Json.Serialization.JsonPropertyName("otherBankConsentTypes")]
        public System.Collections.Generic.ICollection<OtherBankConsentTypes2>? OtherBankConsentTypes { get; set; }= default!;
    
        /// <summary>This field indicates if Ordering customer has provided consent for this payment order to be initiated</summary>
        [System.Text.Json.Serialization.JsonPropertyName("consents")]
        public System.Collections.Generic.ICollection<Consents2>? Consents { get; set; }= default!;
    
        /// <summary>Identifier of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerId")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? CustomerId { get; set; }= default!;
    
        /// <summary>Contains the identifier of the bank with which the transaction is performed</summary>
        [System.Text.Json.Serialization.JsonPropertyName("bankId")]
        [System.ComponentModel.DataAnnotations.StringLength(6)]
        public string? BankId { get; set; }= default!;
    
        /// <summary>The name of the bank being referred to.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("bankName")]
        [System.ComponentModel.DataAnnotations.StringLength(8)]
        public string? BankName { get; set; }= default!;
    
        /// <summary>Contains the code of the bank with which the transaction is performed</summary>
        [System.Text.Json.Serialization.JsonPropertyName("bankCode")]
        [System.ComponentModel.DataAnnotations.StringLength(8)]
        public string? BankCode { get; set; }= default!;
    
        /// <summary>ISO country code of the financial institution. </summary>
        [System.Text.Json.Serialization.JsonPropertyName("countryId")]
        [System.ComponentModel.DataAnnotations.StringLength(15)]
        public string? CountryId { get; set; }= default!;
    
        /// <summary>Denotes the  consent period identifier of the other bank</summary>
        [System.Text.Json.Serialization.JsonPropertyName("obcpId")]
        [System.ComponentModel.DataAnnotations.StringLength(6)]
        public string? ObcpId { get; set; }= default!;
    
        /// <summary>Denotes the  consent period connection identifier of the other bank</summary>
        [System.Text.Json.Serialization.JsonPropertyName("obcpConnectionId")]
        [System.ComponentModel.DataAnnotations.StringLength(16)]
        public string? ObcpConnectionId { get; set; }= default!;
    
        /// <summary>Contains the connection status of the transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("connectionStatus")]
        [System.ComponentModel.DataAnnotations.StringLength(16)]
        public string? ConnectionStatus { get; set; }= default!;
    
        /// <summary>Contains the sub status of the transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("subStatus")]
        [System.ComponentModel.DataAnnotations.StringLength(9)]
        public string? SubStatus { get; set; }= default!;
    
        /// <summary>Contains the current state of the transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("currentState")]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        public string? CurrentState { get; set; }= default!;
    
        /// <summary>Contains the latest token of the ongoing transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("latestToken")]
        [System.ComponentModel.DataAnnotations.StringLength(11)]
        public string? LatestToken { get; set; }= default!;
    
        /// <summary>Contains the latest redirected URL of the ongoing transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("latestRedirectUrl")]
        [System.ComponentModel.DataAnnotations.StringLength(17)]
        public string? LatestRedirectUrl { get; set; }= default!;
    
        /// <summary>Denotes the identifier of the default consent arrangement</summary>
        [System.Text.Json.Serialization.JsonPropertyName("defaultConsentArrangementId")]
        [System.ComponentModel.DataAnnotations.StringLength(27)]
        public string? DefaultConsentArrangementId { get; set; }= default!;
    
        /// <summary>Contains the consent period token of the other banks</summary>
        [System.Text.Json.Serialization.JsonPropertyName("obcpToken")]
        [System.ComponentModel.DataAnnotations.StringLength(9)]
        public string? ObcpToken { get; set; }= default!;
    
        /// <summary>Contains the consent period redirected URL of the other banks</summary>
        [System.Text.Json.Serialization.JsonPropertyName("obcpRedirectUrl")]
        [System.ComponentModel.DataAnnotations.StringLength(15)]
        public string? ObcpRedirectUrl { get; set; }= default!;
    
        /// <summary>Contains the number of days in the consent period of the other banks </summary>
        [System.Text.Json.Serialization.JsonPropertyName("otherBankConsentPeriodDays")]
        [System.ComponentModel.DataAnnotations.StringLength(26)]
        public string? OtherBankConsentPeriodDays { get; set; }= default!;
    
        /// <summary>Contains the date/time at which the other banks consent period starts</summary>
        [System.Text.Json.Serialization.JsonPropertyName("otherBankConsentGivenAt")]
        [System.ComponentModel.DataAnnotations.StringLength(23)]
        public string? OtherBankConsentGivenAt { get; set; }= default!;
    
        /// <summary>Contains the date/time at which the other banks consent period expires</summary>
        [System.Text.Json.Serialization.JsonPropertyName("otherBankConsentExpiresAt")]
        [System.ComponentModel.DataAnnotations.StringLength(25)]
        public string? OtherBankConsentExpiresAt { get; set; }= default!;
    
        /// <summary>Contains the date/time at which at which the Consent was given</summary>
        [System.Text.Json.Serialization.JsonPropertyName("consentGivenAt")]
        [System.ComponentModel.DataAnnotations.StringLength(14)]
        public string? ConsentGivenAt { get; set; }= default!;
    
        /// <summary>Defines whether the user has accepted the Terms and Conditions first displayed when the user logs in to the system for the very first time.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("termsAccepted")]
        [System.ComponentModel.DataAnnotations.StringLength(13)]
        public string? TermsAccepted { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OverrideBody 
    {
        [System.Text.Json.Serialization.JsonPropertyName("overrideDetails")]
        public System.Collections.Generic.ICollection<OverrideDetails>? OverrideDetails { get; set; }= default!;
    
    
    }
    
    /// <summary>ScreenErrorResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ScreenErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ErrorHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("error")]
        public ScreenErrorResponseBody? Error { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("override")]
        public OverrideBody? Override { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ScreenErrorResponseBody 
    {
        [System.Text.Json.Serialization.JsonPropertyName("errorDetails")]
        public System.Collections.Generic.ICollection<ErrorDetails>? ErrorDetails { get; set; }= default!;
    
        /// <summary>The identifier of error type: </summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    /// <summary>BusinessScreenErrorResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BusinessScreenErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ErrorHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("error")]
        public BusinessScreenErrorResponseBody? Error { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("override")]
        public OverrideBody? Override { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BusinessScreenErrorResponseBody 
    {
        [System.Text.Json.Serialization.JsonPropertyName("errorDetails")]
        public System.Collections.Generic.ICollection<ErrorDetails2>? ErrorDetails { get; set; }= default!;
    
        /// <summary>The identifier of error type: Business</summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    /// <summary>SystemScreenErrorResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SystemScreenErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ErrorHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("error")]
        public SystemScreenErrorResponseBody? Error { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("override")]
        public OverrideBody? Override { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SystemScreenErrorResponseBody 
    {
        [System.Text.Json.Serialization.JsonPropertyName("errorDetails")]
        public System.Collections.Generic.ICollection<ErrorDetails3>? ErrorDetails { get; set; }= default!;
    
        /// <summary>The identifier of error type: System</summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    /// <summary>OpenBankingConnection1</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OpenBankingConnection1 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public PayloadHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public OpenBankingConnection1Body? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OpenBankingConnection1Body 
    {
        /// <summary>Contains the different consent types in other banks</summary>
        [System.Text.Json.Serialization.JsonPropertyName("otherBankConsentTypes")]
        public System.Collections.Generic.ICollection<OtherBankConsentTypes3>? OtherBankConsentTypes { get; set; }= default!;
    
        /// <summary>This field indicates if Ordering customer has provided consent for this payment order to be initiated</summary>
        [System.Text.Json.Serialization.JsonPropertyName("consents")]
        public System.Collections.Generic.ICollection<Consents3>? Consents { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("obcp")]
        public System.Collections.Generic.ICollection<Obcp>? Obcp { get; set; }= default!;
    
        /// <summary>Identifier of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerId")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? CustomerId { get; set; }= default!;
    
        /// <summary>Contains the identifier of the bank with which the transaction is performed</summary>
        [System.Text.Json.Serialization.JsonPropertyName("bankId")]
        [System.ComponentModel.DataAnnotations.StringLength(6)]
        public string? BankId { get; set; }= default!;
    
        /// <summary>Contains the code of the bank with which the transaction is performed</summary>
        [System.Text.Json.Serialization.JsonPropertyName("bankCode")]
        [System.ComponentModel.DataAnnotations.StringLength(8)]
        public string? BankCode { get; set; }= default!;
    
        /// <summary>The name of the bank being referred to.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("bankName")]
        [System.ComponentModel.DataAnnotations.StringLength(8)]
        public string? BankName { get; set; }= default!;
    
        /// <summary>ISO country code of the financial institution. </summary>
        [System.Text.Json.Serialization.JsonPropertyName("countryId")]
        [System.ComponentModel.DataAnnotations.StringLength(15)]
        public string? CountryId { get; set; }= default!;
    
        /// <summary>Denotes the  consent period identifier of the other bank</summary>
        [System.Text.Json.Serialization.JsonPropertyName("obcpId")]
        [System.ComponentModel.DataAnnotations.StringLength(6)]
        public string? ObcpId { get; set; }= default!;
    
        /// <summary>Denotes the  consent period connection identifier of the other bank</summary>
        [System.Text.Json.Serialization.JsonPropertyName("obcpConnectionId")]
        [System.ComponentModel.DataAnnotations.StringLength(16)]
        public string? ObcpConnectionId { get; set; }= default!;
    
        /// <summary>Denotes the identifier of the other bank</summary>
        [System.Text.Json.Serialization.JsonPropertyName("obcpBankId")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? ObcpBankId { get; set; }= default!;
    
        /// <summary>Contains the identifier of the customer in other bank</summary>
        [System.Text.Json.Serialization.JsonPropertyName("obcpCustomerId")]
        [System.ComponentModel.DataAnnotations.StringLength(14)]
        public string? ObcpCustomerId { get; set; }= default!;
    
        /// <summary>Contains the connection status of the transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("connectionStatus")]
        [System.ComponentModel.DataAnnotations.StringLength(16)]
        public string? ConnectionStatus { get; set; }= default!;
    
        /// <summary>Contains the sub status of the transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("subStatus")]
        [System.ComponentModel.DataAnnotations.StringLength(9)]
        public string? SubStatus { get; set; }= default!;
    
        /// <summary>Contains the current state of the transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("currentState")]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        public string? CurrentState { get; set; }= default!;
    
        /// <summary>Contains the latest token of the ongoing transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("latestToken")]
        [System.ComponentModel.DataAnnotations.StringLength(11)]
        public string? LatestToken { get; set; }= default!;
    
        /// <summary>Contains the latest redirected URL of the ongoing transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("latestRedirectUrl")]
        [System.ComponentModel.DataAnnotations.StringLength(17)]
        public string? LatestRedirectUrl { get; set; }= default!;
    
        /// <summary>Denotes the identifier of the default consent arrangement</summary>
        [System.Text.Json.Serialization.JsonPropertyName("defaultConsentArrangementId")]
        [System.ComponentModel.DataAnnotations.StringLength(27)]
        public string? DefaultConsentArrangementId { get; set; }= default!;
    
        /// <summary>Contains the consent period token of the other banks</summary>
        [System.Text.Json.Serialization.JsonPropertyName("obcpToken")]
        [System.ComponentModel.DataAnnotations.StringLength(9)]
        public string? ObcpToken { get; set; }= default!;
    
        /// <summary>Contains the consent period redirected URL of the other banks</summary>
        [System.Text.Json.Serialization.JsonPropertyName("obcpRedirectUrl")]
        [System.ComponentModel.DataAnnotations.StringLength(15)]
        public string? ObcpRedirectUrl { get; set; }= default!;
    
        /// <summary>Contains the time at which the arrangement was created</summary>
        [System.Text.Json.Serialization.JsonPropertyName("createdAt")]
        [System.ComponentModel.DataAnnotations.StringLength(9)]
        public string? CreatedAt { get; set; }= default!;
    
        /// <summary>Contains the time at which the arrangement was updated</summary>
        [System.Text.Json.Serialization.JsonPropertyName("updatedAt")]
        [System.ComponentModel.DataAnnotations.StringLength(9)]
        public string? UpdatedAt { get; set; }= default!;
    
        /// <summary>Contains the time of the latest success</summary>
        [System.Text.Json.Serialization.JsonPropertyName("lastSuccessAt")]
        [System.ComponentModel.DataAnnotations.StringLength(13)]
        public string? LastSuccessAt { get; set; }= default!;
    
        /// <summary>Contains the number of days in the consent period of the other banks </summary>
        [System.Text.Json.Serialization.JsonPropertyName("otherBankConsentPeriodDays")]
        [System.ComponentModel.DataAnnotations.StringLength(26)]
        public string? OtherBankConsentPeriodDays { get; set; }= default!;
    
        /// <summary>Contains the date/time at which the other banks consent period starts</summary>
        [System.Text.Json.Serialization.JsonPropertyName("otherBankConsentGivenAt")]
        [System.ComponentModel.DataAnnotations.StringLength(23)]
        public string? OtherBankConsentGivenAt { get; set; }= default!;
    
        /// <summary>Contains the date/time at which the other banks consent period expires</summary>
        [System.Text.Json.Serialization.JsonPropertyName("otherBankConsentExpiresAt")]
        [System.ComponentModel.DataAnnotations.StringLength(25)]
        public string? OtherBankConsentExpiresAt { get; set; }= default!;
    
        /// <summary>Contains the date/time at which at which the Consent was given</summary>
        [System.Text.Json.Serialization.JsonPropertyName("consentGivenAt")]
        [System.ComponentModel.DataAnnotations.StringLength(14)]
        public string? ConsentGivenAt { get; set; }= default!;
    
        /// <summary>Id of the (digital) channel</summary>
        [System.Text.Json.Serialization.JsonPropertyName("channelId")]
        [System.ComponentModel.DataAnnotations.StringLength(14)]
        public string? ChannelId { get; set; }= default!;
    
        /// <summary>Defines whether the user has accepted the Terms and Conditions first displayed when the user logs in to the system for the very first time.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("termsAccepted")]
        [System.ComponentModel.DataAnnotations.StringLength(13)]
        public string? TermsAccepted { get; set; }= default!;
    
    
    }
    
    /// <summary>OpenBankingConnectionResponse1</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OpenBankingConnectionResponse1 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ScreenHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public OpenBankingConnectionResponse1Body? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OpenBankingConnectionResponse1Body 
    {
        /// <summary>Contains the different consent types in other banks</summary>
        [System.Text.Json.Serialization.JsonPropertyName("otherBankConsentTypes")]
        public System.Collections.Generic.ICollection<OtherBankConsentTypes4>? OtherBankConsentTypes { get; set; }= default!;
    
        /// <summary>This field indicates if Ordering customer has provided consent for this payment order to be initiated</summary>
        [System.Text.Json.Serialization.JsonPropertyName("consents")]
        public System.Collections.Generic.ICollection<Consents4>? Consents { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("obcp")]
        public System.Collections.Generic.ICollection<Obcp2>? Obcp { get; set; }= default!;
    
        /// <summary>Identifier of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerId")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? CustomerId { get; set; }= default!;
    
        /// <summary>Contains the identifier of the bank with which the transaction is performed</summary>
        [System.Text.Json.Serialization.JsonPropertyName("bankId")]
        [System.ComponentModel.DataAnnotations.StringLength(6)]
        public string? BankId { get; set; }= default!;
    
        /// <summary>Contains the code of the bank with which the transaction is performed</summary>
        [System.Text.Json.Serialization.JsonPropertyName("bankCode")]
        [System.ComponentModel.DataAnnotations.StringLength(8)]
        public string? BankCode { get; set; }= default!;
    
        /// <summary>The name of the bank being referred to.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("bankName")]
        [System.ComponentModel.DataAnnotations.StringLength(8)]
        public string? BankName { get; set; }= default!;
    
        /// <summary>ISO country code of the financial institution. </summary>
        [System.Text.Json.Serialization.JsonPropertyName("countryId")]
        [System.ComponentModel.DataAnnotations.StringLength(15)]
        public string? CountryId { get; set; }= default!;
    
        /// <summary>Denotes the  consent period identifier of the other bank</summary>
        [System.Text.Json.Serialization.JsonPropertyName("obcpId")]
        [System.ComponentModel.DataAnnotations.StringLength(6)]
        public string? ObcpId { get; set; }= default!;
    
        /// <summary>Denotes the  consent period connection identifier of the other bank</summary>
        [System.Text.Json.Serialization.JsonPropertyName("obcpConnectionId")]
        [System.ComponentModel.DataAnnotations.StringLength(16)]
        public string? ObcpConnectionId { get; set; }= default!;
    
        /// <summary>Denotes the identifier of the other bank</summary>
        [System.Text.Json.Serialization.JsonPropertyName("obcpBankId")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? ObcpBankId { get; set; }= default!;
    
        /// <summary>Contains the identifier of the customer in other bank</summary>
        [System.Text.Json.Serialization.JsonPropertyName("obcpCustomerId")]
        [System.ComponentModel.DataAnnotations.StringLength(14)]
        public string? ObcpCustomerId { get; set; }= default!;
    
        /// <summary>Contains the connection status of the transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("connectionStatus")]
        [System.ComponentModel.DataAnnotations.StringLength(16)]
        public string? ConnectionStatus { get; set; }= default!;
    
        /// <summary>Contains the sub status of the transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("subStatus")]
        [System.ComponentModel.DataAnnotations.StringLength(9)]
        public string? SubStatus { get; set; }= default!;
    
        /// <summary>Contains the current state of the transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("currentState")]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        public string? CurrentState { get; set; }= default!;
    
        /// <summary>Contains the latest token of the ongoing transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("latestToken")]
        [System.ComponentModel.DataAnnotations.StringLength(11)]
        public string? LatestToken { get; set; }= default!;
    
        /// <summary>Contains the latest redirected URL of the ongoing transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("latestRedirectUrl")]
        [System.ComponentModel.DataAnnotations.StringLength(17)]
        public string? LatestRedirectUrl { get; set; }= default!;
    
        /// <summary>Denotes the identifier of the default consent arrangement</summary>
        [System.Text.Json.Serialization.JsonPropertyName("defaultConsentArrangementId")]
        [System.ComponentModel.DataAnnotations.StringLength(27)]
        public string? DefaultConsentArrangementId { get; set; }= default!;
    
        /// <summary>Contains the consent period token of the other banks</summary>
        [System.Text.Json.Serialization.JsonPropertyName("obcpToken")]
        [System.ComponentModel.DataAnnotations.StringLength(9)]
        public string? ObcpToken { get; set; }= default!;
    
        /// <summary>Contains the consent period redirected URL of the other banks</summary>
        [System.Text.Json.Serialization.JsonPropertyName("obcpRedirectUrl")]
        [System.ComponentModel.DataAnnotations.StringLength(15)]
        public string? ObcpRedirectUrl { get; set; }= default!;
    
        /// <summary>Contains the time at which the arrangement was created</summary>
        [System.Text.Json.Serialization.JsonPropertyName("createdAt")]
        [System.ComponentModel.DataAnnotations.StringLength(9)]
        public string? CreatedAt { get; set; }= default!;
    
        /// <summary>Contains the time at which the arrangement was updated</summary>
        [System.Text.Json.Serialization.JsonPropertyName("updatedAt")]
        [System.ComponentModel.DataAnnotations.StringLength(9)]
        public string? UpdatedAt { get; set; }= default!;
    
        /// <summary>Contains the time of the latest success</summary>
        [System.Text.Json.Serialization.JsonPropertyName("lastSuccessAt")]
        [System.ComponentModel.DataAnnotations.StringLength(13)]
        public string? LastSuccessAt { get; set; }= default!;
    
        /// <summary>Contains the number of days in the consent period of the other banks </summary>
        [System.Text.Json.Serialization.JsonPropertyName("otherBankConsentPeriodDays")]
        [System.ComponentModel.DataAnnotations.StringLength(26)]
        public string? OtherBankConsentPeriodDays { get; set; }= default!;
    
        /// <summary>Contains the date/time at which the other banks consent period starts</summary>
        [System.Text.Json.Serialization.JsonPropertyName("otherBankConsentGivenAt")]
        [System.ComponentModel.DataAnnotations.StringLength(23)]
        public string? OtherBankConsentGivenAt { get; set; }= default!;
    
        /// <summary>Contains the date/time at which the other banks consent period expires</summary>
        [System.Text.Json.Serialization.JsonPropertyName("otherBankConsentExpiresAt")]
        [System.ComponentModel.DataAnnotations.StringLength(25)]
        public string? OtherBankConsentExpiresAt { get; set; }= default!;
    
        /// <summary>Contains the date/time at which at which the Consent was given</summary>
        [System.Text.Json.Serialization.JsonPropertyName("consentGivenAt")]
        [System.ComponentModel.DataAnnotations.StringLength(14)]
        public string? ConsentGivenAt { get; set; }= default!;
    
        /// <summary>Id of the (digital) channel</summary>
        [System.Text.Json.Serialization.JsonPropertyName("channelId")]
        [System.ComponentModel.DataAnnotations.StringLength(14)]
        public string? ChannelId { get; set; }= default!;
    
        /// <summary>Defines whether the user has accepted the Terms and Conditions first displayed when the user logs in to the system for the very first time.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("termsAccepted")]
        [System.ComponentModel.DataAnnotations.StringLength(13)]
        public string? TermsAccepted { get; set; }= default!;
    
    
    }
    
    /// <summary>OpenBankingConnection2</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OpenBankingConnection2 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public PayloadHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public OpenBankingConnection2Body? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OpenBankingConnection2Body 
    {
        /// <summary>Identifier of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerId")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? CustomerId { get; set; }= default!;
    
        /// <summary>Denotes the identifier of the default consent arrangement</summary>
        [System.Text.Json.Serialization.JsonPropertyName("defaultConsentArrangementId")]
        [System.ComponentModel.DataAnnotations.StringLength(27)]
        public string? DefaultConsentArrangementId { get; set; }= default!;
    
        /// <summary>Contains the connection status of the transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("connectionStatus")]
        [System.ComponentModel.DataAnnotations.StringLength(16)]
        public string? ConnectionStatus { get; set; }= default!;
    
        /// <summary>Contains the sub status of the transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("subStatus")]
        [System.ComponentModel.DataAnnotations.StringLength(9)]
        public string? SubStatus { get; set; }= default!;
    
        /// <summary>Contains the current state of the transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("currentState")]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        public string? CurrentState { get; set; }= default!;
    
        /// <summary>Contains the time at which the arrangement was updated</summary>
        [System.Text.Json.Serialization.JsonPropertyName("updatedAt")]
        [System.ComponentModel.DataAnnotations.StringLength(9)]
        public string? UpdatedAt { get; set; }= default!;
    
    
    }
    
    /// <summary>OpenBankingConnectionResponse2</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OpenBankingConnectionResponse2 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ScreenHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public OpenBankingConnectionResponse2Body? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OpenBankingConnectionResponse2Body 
    {
        /// <summary>Identifier of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerId")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? CustomerId { get; set; }= default!;
    
        /// <summary>Denotes the identifier of the default consent arrangement</summary>
        [System.Text.Json.Serialization.JsonPropertyName("defaultConsentArrangementId")]
        [System.ComponentModel.DataAnnotations.StringLength(27)]
        public string? DefaultConsentArrangementId { get; set; }= default!;
    
        /// <summary>Contains the connection status of the transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("connectionStatus")]
        [System.ComponentModel.DataAnnotations.StringLength(16)]
        public string? ConnectionStatus { get; set; }= default!;
    
        /// <summary>Contains the sub status of the transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("subStatus")]
        [System.ComponentModel.DataAnnotations.StringLength(9)]
        public string? SubStatus { get; set; }= default!;
    
        /// <summary>Contains the current state of the transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("currentState")]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        public string? CurrentState { get; set; }= default!;
    
        /// <summary>Contains the time at which the arrangement was updated</summary>
        [System.Text.Json.Serialization.JsonPropertyName("updatedAt")]
        [System.ComponentModel.DataAnnotations.StringLength(9)]
        public string? UpdatedAt { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class QueryHeader 
    {
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public Audit4? Audit { get; set; }= default!;
    
        /// <summary>Status of the API(success/failed)</summary>
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public string? Status { get; set; }= default!;
    
        /// <summary>The total number of records per page</summary>
        [System.Text.Json.Serialization.JsonPropertyName("page_size")]
        public int? Page_size { get; set; }= default!;
    
        /// <summary>The record from which the response should be displayed</summary>
        [System.Text.Json.Serialization.JsonPropertyName("page_start")]
        public int? Page_start { get; set; }= default!;
    
        /// <summary>The total number of records present</summary>
        [System.Text.Json.Serialization.JsonPropertyName("total_size")]
        public int? Total_size { get; set; }= default!;
    
        /// <summary>Unique id expected to get as part of response from Transact on every enquiry request</summary>
        [System.Text.Json.Serialization.JsonPropertyName("page_token")]
        public string? Page_token { get; set; }= default!;
    
    
    }
    
    /// <summary>ThirdPartyProviderConsentsResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ThirdPartyProviderConsentsResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public ThirdPartyProviderConsentsResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ThirdPartyProviderConsentsResponseBody : System.Collections.ObjectModel.Collection<Anonymous>
    {
    
    }
    
    /// <summary>BusinessQueryErrorResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BusinessQueryErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ErrorHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("error")]
        public BusinessQueryErrorResponseBody? Error { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BusinessQueryErrorResponseBody 
    {
        /// <summary>The identifier of the error message</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The actual Transact error message for bad requests</summary>
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
        /// <summary>The identifier of error type: Business</summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    /// <summary>SystemQueryErrorResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SystemQueryErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ErrorHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("error")]
        public SystemQueryErrorResponseBody? Error { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SystemQueryErrorResponseBody 
    {
        /// <summary>The identifier of the error message</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The actual Transact error message caused by server</summary>
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
        /// <summary>The identifier of error type: System</summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Override 
    {
        [System.Text.Json.Serialization.JsonPropertyName("overrideDetails")]
        public System.Collections.Generic.ICollection<OverrideDetails2>? OverrideDetails { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OtherBankConsentTypes 
    {
        /// <summary>Contains the different consent types in other banks</summary>
        [System.Text.Json.Serialization.JsonPropertyName("otherBankConsentType")]
        [System.ComponentModel.DataAnnotations.StringLength(20)]
        public string? OtherBankConsentType { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Consents 
    {
        /// <summary>Consent Type for which the consent is given</summary>
        [System.Text.Json.Serialization.JsonPropertyName("consentType")]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        public string? ConsentType { get; set; }= default!;
    
        /// <summary>Time at which the consent starts</summary>
        [System.Text.Json.Serialization.JsonPropertyName("consentStartAt")]
        [System.ComponentModel.DataAnnotations.StringLength(14)]
        public string? ConsentStartAt { get; set; }= default!;
    
        /// <summary>Time at which the consent expires</summary>
        [System.Text.Json.Serialization.JsonPropertyName("consentExpiryAt")]
        [System.ComponentModel.DataAnnotations.StringLength(15)]
        public string? ConsentExpiryAt { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Audit2 
    {
        /// <summary>Time taken to response by Transact</summary>
        [System.Text.Json.Serialization.JsonPropertyName("T24_time")]
        public int? T24_time { get; set; }= default!;
    
        /// <summary>The CURR.NO. of the record</summary>
        [System.Text.Json.Serialization.JsonPropertyName("versionNumber")]
        public string? VersionNumber { get; set; }= default!;
    
        /// <summary>Time taken to parse the request by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("requestParse_time")]
        public double? RequestParse_time { get; set; }= default!;
    
        /// <summary>Time taken to parse the response by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("responseParse_time")]
        public double? ResponseParse_time { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OtherBankConsentTypes2 
    {
        /// <summary>Contains the different consent types in other banks</summary>
        [System.Text.Json.Serialization.JsonPropertyName("otherBankConsentType")]
        [System.ComponentModel.DataAnnotations.StringLength(20)]
        public string? OtherBankConsentType { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Consents2 
    {
        /// <summary>Consent Type for which the consent is given</summary>
        [System.Text.Json.Serialization.JsonPropertyName("consentType")]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        public string? ConsentType { get; set; }= default!;
    
        /// <summary>Time at which the consent starts</summary>
        [System.Text.Json.Serialization.JsonPropertyName("consentStartAt")]
        [System.ComponentModel.DataAnnotations.StringLength(14)]
        public string? ConsentStartAt { get; set; }= default!;
    
        /// <summary>Time at which the consent expires</summary>
        [System.Text.Json.Serialization.JsonPropertyName("consentExpiryAt")]
        [System.ComponentModel.DataAnnotations.StringLength(15)]
        public string? ConsentExpiryAt { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Audit3 
    {
        /// <summary>Time taken to response by Transact</summary>
        [System.Text.Json.Serialization.JsonPropertyName("T24_time")]
        public int? T24_time { get; set; }= default!;
    
        /// <summary>The CURR.NO. of the record</summary>
        [System.Text.Json.Serialization.JsonPropertyName("versionNumber")]
        public string? VersionNumber { get; set; }= default!;
    
        /// <summary>Time taken to parse the request by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("requestParse_time")]
        public double? RequestParse_time { get; set; }= default!;
    
        /// <summary>Time taken to parse the response by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("responseParse_time")]
        public double? ResponseParse_time { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OverrideDetails 
    {
        /// <summary>The identifier of the override.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public string? Id { get; set; }= default!;
    
        /// <summary>The actual override message.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string? Description { get; set; }= default!;
    
        /// <summary>The code related to override message.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The usable options for the override.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("options")]
        public System.Collections.Generic.ICollection<string>? Options { get; set; }= default!;
    
        /// <summary>The type of the override.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ErrorDetails 
    {
        /// <summary>The name of the field</summary>
        [System.Text.Json.Serialization.JsonPropertyName("fieldName")]
        public string? FieldName { get; set; }= default!;
    
        /// <summary>The identifier of the error message</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The actual Transact error message </summary>
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ErrorDetails2 
    {
        /// <summary>The name of the field</summary>
        [System.Text.Json.Serialization.JsonPropertyName("fieldName")]
        public string? FieldName { get; set; }= default!;
    
        /// <summary>The identifier of the error message</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The actual Transact error message for bad requests</summary>
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ErrorDetails3 
    {
        /// <summary>The name of the field</summary>
        [System.Text.Json.Serialization.JsonPropertyName("fieldName")]
        public string? FieldName { get; set; }= default!;
    
        /// <summary>The identifier of the error message</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The actual Transact error message caused by server</summary>
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OtherBankConsentTypes3 
    {
        /// <summary>Contains the different consent types in other banks</summary>
        [System.Text.Json.Serialization.JsonPropertyName("otherBankConsentType")]
        [System.ComponentModel.DataAnnotations.StringLength(20)]
        public string? OtherBankConsentType { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Consents3 
    {
        /// <summary>Consent Type for which the consent is given</summary>
        [System.Text.Json.Serialization.JsonPropertyName("consentType")]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        public string? ConsentType { get; set; }= default!;
    
        /// <summary>Time at which the consent starts</summary>
        [System.Text.Json.Serialization.JsonPropertyName("consentStartAt")]
        [System.ComponentModel.DataAnnotations.StringLength(14)]
        public string? ConsentStartAt { get; set; }= default!;
    
        /// <summary>Time at which the consent expires</summary>
        [System.Text.Json.Serialization.JsonPropertyName("consentExpiryAt")]
        [System.ComponentModel.DataAnnotations.StringLength(15)]
        public string? ConsentExpiryAt { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Obcp 
    {
        /// <summary>Indicates an unique identifier of an account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("arrangementId")]
        [System.ComponentModel.DataAnnotations.StringLength(13)]
        public string? ArrangementId { get; set; }= default!;
    
        /// <summary>Denotes the Account Id of Other Banks Consent Period.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("obcpAccountId")]
        [System.ComponentModel.DataAnnotations.StringLength(13)]
        public string? ObcpAccountId { get; set; }= default!;
    
        /// <summary>Contains the status of the  consent period in other banks</summary>
        [System.Text.Json.Serialization.JsonPropertyName("obcpStatus")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? ObcpStatus { get; set; }= default!;
    
        /// <summary>Contains the last updated balances details</summary>
        [System.Text.Json.Serialization.JsonPropertyName("balancesLastUpdated")]
        [System.ComponentModel.DataAnnotations.StringLength(21)]
        public string? BalancesLastUpdated { get; set; }= default!;
    
        /// <summary>Contains the list of last updated transactions</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionsLastUpdated")]
        [System.ComponentModel.DataAnnotations.StringLength(25)]
        public string? TransactionsLastUpdated { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OtherBankConsentTypes4 
    {
        /// <summary>Contains the different consent types in other banks</summary>
        [System.Text.Json.Serialization.JsonPropertyName("otherBankConsentType")]
        [System.ComponentModel.DataAnnotations.StringLength(20)]
        public string? OtherBankConsentType { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Consents4 
    {
        /// <summary>Consent Type for which the consent is given</summary>
        [System.Text.Json.Serialization.JsonPropertyName("consentType")]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        public string? ConsentType { get; set; }= default!;
    
        /// <summary>Time at which the consent starts</summary>
        [System.Text.Json.Serialization.JsonPropertyName("consentStartAt")]
        [System.ComponentModel.DataAnnotations.StringLength(14)]
        public string? ConsentStartAt { get; set; }= default!;
    
        /// <summary>Time at which the consent expires</summary>
        [System.Text.Json.Serialization.JsonPropertyName("consentExpiryAt")]
        [System.ComponentModel.DataAnnotations.StringLength(15)]
        public string? ConsentExpiryAt { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Obcp2 
    {
        /// <summary>Indicates an unique identifier of an account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("arrangementId")]
        [System.ComponentModel.DataAnnotations.StringLength(13)]
        public string? ArrangementId { get; set; }= default!;
    
        /// <summary>Denotes the Account Id of Other Banks Consent Period.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("obcpAccountId")]
        [System.ComponentModel.DataAnnotations.StringLength(13)]
        public string? ObcpAccountId { get; set; }= default!;
    
        /// <summary>Contains the status of the  consent period in other banks</summary>
        [System.Text.Json.Serialization.JsonPropertyName("obcpStatus")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? ObcpStatus { get; set; }= default!;
    
        /// <summary>Contains the last updated balances details</summary>
        [System.Text.Json.Serialization.JsonPropertyName("balancesLastUpdated")]
        [System.ComponentModel.DataAnnotations.StringLength(21)]
        public string? BalancesLastUpdated { get; set; }= default!;
    
        /// <summary>Contains the list of last updated transactions</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionsLastUpdated")]
        [System.ComponentModel.DataAnnotations.StringLength(25)]
        public string? TransactionsLastUpdated { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Audit4 
    {
        /// <summary>Time taken to response by Transact</summary>
        [System.Text.Json.Serialization.JsonPropertyName("T24_time")]
        public int? T24_time { get; set; }= default!;
    
        /// <summary>The CURR.NO. of the record</summary>
        [System.Text.Json.Serialization.JsonPropertyName("versionNumber")]
        public string? VersionNumber { get; set; }= default!;
    
        /// <summary>Time taken to parse the request by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("requestParse_time")]
        public double? RequestParse_time { get; set; }= default!;
    
        /// <summary>Time taken to parse the response by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("responseParse_time")]
        public double? ResponseParse_time { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous 
    {
        /// <summary>Contains the different consent types in other banks</summary>
        [System.Text.Json.Serialization.JsonPropertyName("otherBankConsentTypes")]
        public System.Collections.Generic.ICollection<OtherBankConsentTypes5>? OtherBankConsentTypes { get; set; }= default!;
    
        /// <summary>This field indicates if Ordering customer has provided consent for this payment order to be initiated</summary>
        [System.Text.Json.Serialization.JsonPropertyName("consents")]
        public System.Collections.Generic.ICollection<Consents5>? Consents { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("obcp")]
        public System.Collections.Generic.ICollection<Obcp3>? Obcp { get; set; }= default!;
    
        /// <summary>Denotes the identifier of the next page in the transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionNextPageIds")]
        public System.Collections.Generic.ICollection<TransactionNextPageIds>? TransactionNextPageIds { get; set; }= default!;
    
        /// <summary>Contains the details of transaction received</summary>
        [System.Text.Json.Serialization.JsonPropertyName("allTransactionsReceived")]
        public System.Collections.Generic.ICollection<AllTransactionsReceived>? AllTransactionsReceived { get; set; }= default!;
    
        /// <summary>Contains the id associated to the connect reference respective to a transaction of the account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("connectionId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? ConnectionId { get; set; }= default!;
    
        /// <summary>Identifier of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerId")]
        [System.ComponentModel.DataAnnotations.StringLength(65)]
        public string? CustomerId { get; set; }= default!;
    
        /// <summary>Contains the identifier of the bank with which the transaction is performed</summary>
        [System.Text.Json.Serialization.JsonPropertyName("bankId")]
        [System.ComponentModel.DataAnnotations.StringLength(65)]
        public string? BankId { get; set; }= default!;
    
        /// <summary>The name of the bank being referred to.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("bankName")]
        [System.ComponentModel.DataAnnotations.StringLength(65)]
        public string? BankName { get; set; }= default!;
    
        /// <summary>ISO country code of the financial institution. </summary>
        [System.Text.Json.Serialization.JsonPropertyName("countryId")]
        [System.ComponentModel.DataAnnotations.StringLength(65)]
        public string? CountryId { get; set; }= default!;
    
        /// <summary>Denotes the  consent period identifier of the other bank</summary>
        [System.Text.Json.Serialization.JsonPropertyName("obcpId")]
        [System.ComponentModel.DataAnnotations.StringLength(65)]
        public string? ObcpId { get; set; }= default!;
    
        /// <summary>Denotes the  consent period connection identifier of the other bank</summary>
        [System.Text.Json.Serialization.JsonPropertyName("obcpConnectionId")]
        [System.ComponentModel.DataAnnotations.StringLength(65)]
        public string? ObcpConnectionId { get; set; }= default!;
    
        /// <summary>Denotes the identifier of the other bank</summary>
        [System.Text.Json.Serialization.JsonPropertyName("obcpBankId")]
        [System.ComponentModel.DataAnnotations.StringLength(65)]
        public string? ObcpBankId { get; set; }= default!;
    
        /// <summary>Contains the identifier of the customer in other bank</summary>
        [System.Text.Json.Serialization.JsonPropertyName("obcpCustomerId")]
        [System.ComponentModel.DataAnnotations.StringLength(65)]
        public string? ObcpCustomerId { get; set; }= default!;
    
        /// <summary>Contains the connection status of the transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("connectionStatus")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? ConnectionStatus { get; set; }= default!;
    
        /// <summary>Contains the sub status of the transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("subStatus")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? SubStatus { get; set; }= default!;
    
        /// <summary>Contains the current state of the transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("currentState")]
        [System.ComponentModel.DataAnnotations.StringLength(65)]
        public string? CurrentState { get; set; }= default!;
    
        /// <summary>Contains the time at which the arrangement was created</summary>
        [System.Text.Json.Serialization.JsonPropertyName("createdAt")]
        [System.ComponentModel.DataAnnotations.StringLength(65)]
        public string? CreatedAt { get; set; }= default!;
    
        /// <summary>Contains the latest token of the ongoing transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("latestToken")]
        [System.ComponentModel.DataAnnotations.StringLength(65)]
        public string? LatestToken { get; set; }= default!;
    
        /// <summary>Contains the latest redirected URL of the ongoing transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("latestRedirectUrl")]
        [System.ComponentModel.DataAnnotations.StringLength(65)]
        public string? LatestRedirectUrl { get; set; }= default!;
    
        /// <summary>Denotes the identifier of the default consent arrangement</summary>
        [System.Text.Json.Serialization.JsonPropertyName("defaultConsentArrangementId")]
        [System.ComponentModel.DataAnnotations.StringLength(65)]
        public string? DefaultConsentArrangementId { get; set; }= default!;
    
        /// <summary>Contains the consent period token of the other banks</summary>
        [System.Text.Json.Serialization.JsonPropertyName("obcpToken")]
        [System.ComponentModel.DataAnnotations.StringLength(65)]
        public string? ObcpToken { get; set; }= default!;
    
        /// <summary>Contains the consent period redirected URL of the other banks</summary>
        [System.Text.Json.Serialization.JsonPropertyName("obcpRedirectUrl")]
        [System.ComponentModel.DataAnnotations.StringLength(65)]
        public string? ObcpRedirectUrl { get; set; }= default!;
    
        /// <summary>Contains the number of days in the consent period of the other banks </summary>
        [System.Text.Json.Serialization.JsonPropertyName("otherBankConsentPeriodDays")]
        [System.ComponentModel.DataAnnotations.StringLength(65)]
        public string? OtherBankConsentPeriodDays { get; set; }= default!;
    
        /// <summary>Contains the date/time at which the other banks consent period starts</summary>
        [System.Text.Json.Serialization.JsonPropertyName("otherBankConsentGivenAt")]
        [System.ComponentModel.DataAnnotations.StringLength(65)]
        public string? OtherBankConsentGivenAt { get; set; }= default!;
    
        /// <summary>Contains the date/time at which the other banks consent period expires</summary>
        [System.Text.Json.Serialization.JsonPropertyName("otherBankConsentExpiresAt")]
        [System.ComponentModel.DataAnnotations.StringLength(65)]
        public string? OtherBankConsentExpiresAt { get; set; }= default!;
    
        /// <summary>Id of the (digital) channel</summary>
        [System.Text.Json.Serialization.JsonPropertyName("channelId")]
        [System.ComponentModel.DataAnnotations.StringLength(70)]
        public string? ChannelId { get; set; }= default!;
    
        /// <summary>Contains the code of the bank with which the transaction is performed</summary>
        [System.Text.Json.Serialization.JsonPropertyName("bankCode")]
        [System.ComponentModel.DataAnnotations.StringLength(65)]
        public string? BankCode { get; set; }= default!;
    
        /// <summary>Current number of the record</summary>
        [System.Text.Json.Serialization.JsonPropertyName("versionNumber")]
        [System.ComponentModel.DataAnnotations.StringLength(4)]
        public string? VersionNumber { get; set; }= default!;
    
        /// <summary>Denotes the next refresh time</summary>
        [System.Text.Json.Serialization.JsonPropertyName("nextRefreshAvailableAt")]
        [System.ComponentModel.DataAnnotations.StringLength(65)]
        public string? NextRefreshAvailableAt { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OverrideDetails2 
    {
        /// <summary>The identifier of the override.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public string? Id { get; set; }= default!;
    
        /// <summary>The actual override message.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string? Description { get; set; }= default!;
    
        /// <summary>The code related to override message.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The user input to accept/reject the override.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("responseCode")]
        public string? ResponseCode { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OtherBankConsentTypes5 
    {
        /// <summary>Contains the different consent types in other banks</summary>
        [System.Text.Json.Serialization.JsonPropertyName("otherBankConsentType")]
        [System.ComponentModel.DataAnnotations.StringLength(65)]
        public string? OtherBankConsentType { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Consents5 
    {
        /// <summary>Consent Type for which the consent is given</summary>
        [System.Text.Json.Serialization.JsonPropertyName("consentType")]
        [System.ComponentModel.DataAnnotations.StringLength(65)]
        public string? ConsentType { get; set; }= default!;
    
        /// <summary>Contains the date/time at which at which the Consent was given</summary>
        [System.Text.Json.Serialization.JsonPropertyName("consentGivenAt")]
        [System.ComponentModel.DataAnnotations.StringLength(65)]
        public string? ConsentGivenAt { get; set; }= default!;
    
        /// <summary>Time at which the consent starts</summary>
        [System.Text.Json.Serialization.JsonPropertyName("consentStartsAt")]
        [System.ComponentModel.DataAnnotations.StringLength(65)]
        public string? ConsentStartsAt { get; set; }= default!;
    
        /// <summary>Time at which the consent expires</summary>
        [System.Text.Json.Serialization.JsonPropertyName("consentExpiryAt")]
        [System.ComponentModel.DataAnnotations.StringLength(65)]
        public string? ConsentExpiryAt { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Obcp3 
    {
        /// <summary>Indicates an unique identifier of an account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("arrangementId")]
        [System.ComponentModel.DataAnnotations.StringLength(65)]
        public string? ArrangementId { get; set; }= default!;
    
        /// <summary>Denotes the Account Id of Other Banks Consent Period.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("obcpAccountId")]
        [System.ComponentModel.DataAnnotations.StringLength(65)]
        public string? ObcpAccountId { get; set; }= default!;
    
        /// <summary>Contains the status of the  consent period in other banks</summary>
        [System.Text.Json.Serialization.JsonPropertyName("obcpStatus")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? ObcpStatus { get; set; }= default!;
    
        /// <summary>Contains the last updated balances details</summary>
        [System.Text.Json.Serialization.JsonPropertyName("balancesLastUpdated")]
        [System.ComponentModel.DataAnnotations.StringLength(65)]
        public string? BalancesLastUpdated { get; set; }= default!;
    
        /// <summary>Contains the list of last updated transactions</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionsLastUpdated")]
        [System.ComponentModel.DataAnnotations.StringLength(65)]
        public string? TransactionsLastUpdated { get; set; }= default!;
    
        /// <summary>Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN &amp; BBAN</summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountId")]
        public string? AccountId { get; set; }= default!;
    
        /// <summary>Short title given to the name of the arrangement</summary>
        [System.Text.Json.Serialization.JsonPropertyName("shortTitle")]
        public string? ShortTitle { get; set; }= default!;
    
        /// <summary>Contains bank sort code or iban branch identifier for the account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("sortCode")]
        public string? SortCode { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class TransactionNextPageIds 
    {
        /// <summary>Denotes the identifier of the next page in the transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionNextPageId")]
        [System.ComponentModel.DataAnnotations.StringLength(65)]
        public string? TransactionNextPageId { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class AllTransactionsReceived 
    {
        /// <summary>Contains the details of transaction received</summary>
        [System.Text.Json.Serialization.JsonPropertyName("allTransactionReceived")]
        [System.ComponentModel.DataAnnotations.StringLength(65)]
        public string? AllTransactionReceived { get; set; }= default!;
    
    
    }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016