//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using Shared.Models;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"

namespace Transact.Party.CustomersContactHistory
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface ICustomersContactHistoryService
    {
        /// <param name="payload">body Payload</param>
        /// <param name="validate_only">The identifier to indicate if it is set to only validate or not.</param>
        /// <returns>CustomerContactLogResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<CustomerContactLogResponse> CreateCustomerContactLogAsync(CustomerContactLog payload, bool? validate_only, string? credentials, string? companyId);
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <param name="payload">body Payload</param>
        /// <param name="validate_only">The identifier to indicate if it is set to only validate or not.</param>
        /// <returns>CustomerContactLogResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<CustomerContactLogResponse> CreateCustomerContactLogAsync(CustomerContactLog payload, bool? validate_only, string? credentials, string? companyId, System.Threading.CancellationToken cancellationToken);
    
        /// <returns>CustomerContactLogResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<CustomerContactLogResponse> GetCustomerContactLogAsync(string contactHistoryId, string? credentials, string? companyId);
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>CustomerContactLogResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<CustomerContactLogResponse> GetCustomerContactLogAsync(string contactHistoryId, string? credentials, string? companyId, System.Threading.CancellationToken cancellationToken);
    
        /// <param name="payload">body Payload</param>
        /// <param name="validate_only">The identifier to indicate if it is set to only validate or not.</param>
        /// <returns>CustomerContactLogResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<CustomerContactLogResponse> UpdateCustomerContactLogAsync(string contactHistoryId, CustomerContactLog payload, bool? validate_only, string? credentials, string? companyId);
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <param name="payload">body Payload</param>
        /// <param name="validate_only">The identifier to indicate if it is set to only validate or not.</param>
        /// <returns>CustomerContactLogResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<CustomerContactLogResponse> UpdateCustomerContactLogAsync(string contactHistoryId, CustomerContactLog payload, bool? validate_only, string? credentials, string? companyId, System.Threading.CancellationToken cancellationToken);
    
        /// <param name="customerId">The identifier of the customer</param>
        /// <param name="type">Activity Type</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <returns>CustomerContactHistoryResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<CustomerContactHistoryResponse> GetCustomerContactHistoryAsync(string customerId, string? staffId, string? date, string? type, int? page_size, int? page_start, string? page_token, string? credentials, string? companyId);
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <param name="customerId">The identifier of the customer</param>
        /// <param name="type">Activity Type</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <returns>CustomerContactHistoryResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<CustomerContactHistoryResponse> GetCustomerContactHistoryAsync(string customerId, string? staffId, string? date, string? type, int? page_size, int? page_start, string? page_token, string? credentials, string? companyId, System.Threading.CancellationToken cancellationToken);
    
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PayloadHeader 
    {
        [System.Text.Json.Serialization.JsonPropertyName("override")]
        public Override? Override { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public Audit? Audit { get; set; }= default!;
    
    
    }
    
    /// <summary>CustomerContactLog</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerContactLog 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public PayloadHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public CustomerContactLogBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerContactLogBody 
    {
        [System.Text.Json.Serialization.JsonPropertyName("notes")]
        public System.Collections.Generic.ICollection<Notes>? Notes { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("staffs")]
        public System.Collections.Generic.ICollection<Staffs>? Staffs { get; set; }= default!;
    
        /// <summary>Records the override messages generated during processing of an activity. </summary>
        [System.Text.Json.Serialization.JsonPropertyName("overrides")]
        public System.Collections.Generic.ICollection<Overrides>? Overrides { get; set; }= default!;
    
        /// <summary>The identifier of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerId")]
        public string? CustomerId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("contactType")]
        public string? ContactType { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("contactStatus")]
        public string? ContactStatus { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("contactDescription")]
        public string? ContactDescription { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("contactChannel")]
        public string? ContactChannel { get; set; }= default!;
    
        /// <summary>Date that first contact was made with the Customer.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("contactDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? ContactDate { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("contactTime")]
        public string? ContactTime { get; set; }= default!;
    
        /// <summary>The identifier of the company, following the format CCGGGLLLL, where: CC is the country code, GGG is Company Group Code and LLLL is the Local Code. Country Code must be a valid countryCode, Company Group Code must be 3 numeric characters in the range 001-999 and must be a valid companyGroup. The Local Code is 4 numeric characters in the range 0001-9999, e.g. GB0010001</summary>
        [System.Text.Json.Serialization.JsonPropertyName("companyId")]
        public string? CompanyId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("contactDirection")]
        public string? ContactDirection { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("customerMood")]
        public string? CustomerMood { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("isWalkInCustomer")]
        public string? IsWalkInCustomer { get; set; }= default!;
    
        /// <summary>Current Number which indicates how many times the record is modified</summary>
        [System.Text.Json.Serialization.JsonPropertyName("currNo")]
        public string? CurrNo { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ScreenHeader 
    {
        /// <summary>The Identifier of the record created</summary>
        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public string? Id { get; set; }= default!;
    
        /// <summary>The status of the record</summary>
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public string? Status { get; set; }= default!;
    
        /// <summary>The status of the transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionStatus")]
        public string? TransactionStatus { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public Audit2? Audit { get; set; }= default!;
    
    
    }
    
    /// <summary>CustomerContactLogResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerContactLogResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ScreenHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public CustomerContactLogResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerContactLogResponseBody 
    {
        [System.Text.Json.Serialization.JsonPropertyName("notes")]
        public System.Collections.Generic.ICollection<Notes2>? Notes { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("staffs")]
        public System.Collections.Generic.ICollection<Staffs2>? Staffs { get; set; }= default!;
    
        /// <summary>Records the override messages generated during processing of an activity. </summary>
        [System.Text.Json.Serialization.JsonPropertyName("overrides")]
        public System.Collections.Generic.ICollection<Overrides2>? Overrides { get; set; }= default!;
    
        /// <summary>The identifier of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerId")]
        public string? CustomerId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("contactType")]
        public string? ContactType { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("contactStatus")]
        public string? ContactStatus { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("contactDescription")]
        public string? ContactDescription { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("contactChannel")]
        public string? ContactChannel { get; set; }= default!;
    
        /// <summary>Date that first contact was made with the Customer.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("contactDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? ContactDate { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("contactTime")]
        public string? ContactTime { get; set; }= default!;
    
        /// <summary>The identifier of the company, following the format CCGGGLLLL, where: CC is the country code, GGG is Company Group Code and LLLL is the Local Code. Country Code must be a valid countryCode, Company Group Code must be 3 numeric characters in the range 001-999 and must be a valid companyGroup. The Local Code is 4 numeric characters in the range 0001-9999, e.g. GB0010001</summary>
        [System.Text.Json.Serialization.JsonPropertyName("companyId")]
        public string? CompanyId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("contactDirection")]
        public string? ContactDirection { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("customerMood")]
        public string? CustomerMood { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("isWalkInCustomer")]
        public string? IsWalkInCustomer { get; set; }= default!;
    
        /// <summary>Current Number which indicates how many times the record is modified</summary>
        [System.Text.Json.Serialization.JsonPropertyName("currNo")]
        public string? CurrNo { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OverrideBody 
    {
        [System.Text.Json.Serialization.JsonPropertyName("overrideDetails")]
        public System.Collections.Generic.ICollection<OverrideDetails>? OverrideDetails { get; set; }= default!;
    
    
    }
    
    /// <summary>ScreenErrorResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ScreenErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ErrorHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("error")]
        public ScreenErrorResponseBody? Error { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("override")]
        public OverrideBody? Override { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ScreenErrorResponseBody 
    {
        [System.Text.Json.Serialization.JsonPropertyName("errorDetails")]
        public System.Collections.Generic.ICollection<ErrorDetails>? ErrorDetails { get; set; }= default!;
    
        /// <summary>The identifier of error type</summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class QueryHeader 
    {
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public Audit4? Audit { get; set; }= default!;
    
        /// <summary>The total number of records per page</summary>
        [System.Text.Json.Serialization.JsonPropertyName("page_size")]
        public int? Page_size { get; set; }= default!;
    
        /// <summary>The record from which the response should be displayed</summary>
        [System.Text.Json.Serialization.JsonPropertyName("page_start")]
        public int? Page_start { get; set; }= default!;
    
        /// <summary>The total number of records present</summary>
        [System.Text.Json.Serialization.JsonPropertyName("total_size")]
        public int? Total_size { get; set; }= default!;
    
        /// <summary>Unique id expected to get as part of response from t24 on every enquiry request</summary>
        [System.Text.Json.Serialization.JsonPropertyName("page_token")]
        public string? Page_token { get; set; }= default!;
    
    
    }
    
    /// <summary>CustomerContactHistoryResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerContactHistoryResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public CustomerContactHistoryResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerContactHistoryResponseBody : System.Collections.ObjectModel.Collection<Anonymous>
    {
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Override 
    {
        [System.Text.Json.Serialization.JsonPropertyName("overrideDetails")]
        public System.Collections.Generic.ICollection<OverrideDetails2>? OverrideDetails { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Notes 
    {
        [System.Text.Json.Serialization.JsonPropertyName("contactNote")]
        public string? ContactNote { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Staffs 
    {
        [System.Text.Json.Serialization.JsonPropertyName("contactStaff")]
        public string? ContactStaff { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Overrides 
    {
        /// <summary>Records the override messages generated during processing of an activity. </summary>
        [System.Text.Json.Serialization.JsonPropertyName("override")]
        public string? Override { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Audit2 
    {
        /// <summary>Time taken to response by T24</summary>
        [System.Text.Json.Serialization.JsonPropertyName("T24_time")]
        public int? T24_time { get; set; }= default!;
    
        /// <summary>The CURR.NO. of the record</summary>
        [System.Text.Json.Serialization.JsonPropertyName("versionNumber")]
        public string? VersionNumber { get; set; }= default!;
    
        /// <summary>Time taken to parse the response by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("parse_time")]
        public int? Parse_time { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Notes2 
    {
        [System.Text.Json.Serialization.JsonPropertyName("contactNote")]
        public string? ContactNote { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Staffs2 
    {
        [System.Text.Json.Serialization.JsonPropertyName("contactStaff")]
        public string? ContactStaff { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Overrides2 
    {
        /// <summary>Records the override messages generated during processing of an activity. </summary>
        [System.Text.Json.Serialization.JsonPropertyName("override")]
        public string? Override { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Audit3 
    {
        /// <summary>Time taken to response by T24</summary>
        [System.Text.Json.Serialization.JsonPropertyName("T24_time")]
        public int? T24_time { get; set; }= default!;
    
        /// <summary>The CURR.NO. of the record</summary>
        [System.Text.Json.Serialization.JsonPropertyName("versionNumber")]
        public string? VersionNumber { get; set; }= default!;
    
        /// <summary>Time taken to parse the response by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("parse_time")]
        public int? Parse_time { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OverrideDetails 
    {
        /// <summary>The identifier of the override</summary>
        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public string? Id { get; set; }= default!;
    
        /// <summary>The actual override message</summary>
        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string? Description { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ErrorDetails 
    {
        /// <summary>The name of the field</summary>
        [System.Text.Json.Serialization.JsonPropertyName("fieldName")]
        public string? FieldName { get; set; }= default!;
    
        /// <summary>The identifier of the error message</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The actual t24 error message</summary>
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Audit4 
    {
        /// <summary>Time taken to response by T24</summary>
        [System.Text.Json.Serialization.JsonPropertyName("T24_time")]
        public int? T24_time { get; set; }= default!;
    
        /// <summary>The CURR.NO. of the record</summary>
        [System.Text.Json.Serialization.JsonPropertyName("versionNumber")]
        public string? VersionNumber { get; set; }= default!;
    
        /// <summary>Time taken to parse the response by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("parse_time")]
        public int? Parse_time { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous 
    {
        [System.Text.Json.Serialization.JsonPropertyName("notes")]
        public System.Collections.Generic.ICollection<Notes3>? Notes { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("staffs")]
        public System.Collections.Generic.ICollection<Staffs3>? Staffs { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("contactHistoryId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? ContactHistoryId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("customerShortName")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? CustomerShortName { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("contactType")]
        [System.ComponentModel.DataAnnotations.StringLength(20)]
        public string? ContactType { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("contactStatus")]
        [System.ComponentModel.DataAnnotations.StringLength(20)]
        public string? ContactStatus { get; set; }= default!;
    
        /// <summary>The name used for display purposes</summary>
        [System.Text.Json.Serialization.JsonPropertyName("displayName")]
        [System.ComponentModel.DataAnnotations.StringLength(45)]
        public string? DisplayName { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("contactChannel")]
        [System.ComponentModel.DataAnnotations.StringLength(20)]
        public string? ContactChannel { get; set; }= default!;
    
        /// <summary>Date that first contact was made with the Customer.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("contactDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? ContactDate { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("contactTime")]
        [System.ComponentModel.DataAnnotations.StringLength(5)]
        public string? ContactTime { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("isWalkInCustomer")]
        [System.ComponentModel.DataAnnotations.StringLength(5)]
        public string? IsWalkInCustomer { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("customerMood")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? CustomerMood { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OverrideDetails2 
    {
        /// <summary>The identifier of the override</summary>
        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public string? Id { get; set; }= default!;
    
        /// <summary>The actual override message</summary>
        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string? Description { get; set; }= default!;
    
        /// <summary>The user input to accept/reject the override.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("responseCode")]
        public string? ResponseCode { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Notes3 
    {
        [System.Text.Json.Serialization.JsonPropertyName("note")]
        [System.ComponentModel.DataAnnotations.StringLength(40)]
        public string? Note { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Staffs3 
    {
        [System.Text.Json.Serialization.JsonPropertyName("contactStaff")]
        [System.ComponentModel.DataAnnotations.StringLength(40)]
        public string? ContactStaff { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal class DateFormatConverter : Newtonsoft.Json.Converters.IsoDateTimeConverter
    {
        public DateFormatConverter()
        {
            DateTimeFormat = "yyyy-MM-dd";
        }
    }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016