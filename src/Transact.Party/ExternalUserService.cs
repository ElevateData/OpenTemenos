//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using Shared.Models;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"

namespace Transact.Party.ExternalUsers
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface IExternalUserService
    {
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves the external user details</summary>
        /// <param name="channelId">Id of the (digital) channel</param>
        /// <param name="arrangementId">Indicates an unique identifier of an account</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from Transact on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>ExternalUserProfileResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ExternalUserProfileResponse> GetExternalUserProfileAsync(string? channelId = null, string? arrangementId = null, int? page_size = null, int? page_start = null, string? page_token = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, bool? disablePagination = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves the external user preferences</summary>
        /// <param name="externalUserPreferencesId">Denotes the preference identifier for the external user</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from Transact on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>ExternalUserPreferencesResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ExternalUserPreferencesResponse> GetExternalUserPreferencesAsync(string? externalUserPreferencesId = null, string? externalUserPreferencesIdBW = null, int? page_size = null, int? page_start = null, string? page_token = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, bool? disablePagination = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Update external user status</summary>
        /// <param name="externalUserId">Contains the external user identifier for which the consent is created.</param>
        /// <param name="payload">body Payload</param>
        /// <param name="validate_only">The identifier to indicate if it is set to only validate or not.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <returns>ExternalUserStatusResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ExternalUserStatusResponse> UpdateExternalUserStatusAsync(string externalUserId, ExternalUserStatus payload, bool? validate_only = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Create new external user preferences</summary>
        /// <param name="externalUserPreferencesId">Denotes the preference identifier for the external user</param>
        /// <param name="payload">body Payload</param>
        /// <param name="validate_only">The identifier to indicate if it is set to only validate or not.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <returns>ExternalUserPreferenceResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ExternalUserPreferenceResponse> CreateExternalUserPreferenceAsync(string externalUserPreferencesId, ExternalUserPreference payload, bool? validate_only = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Update the external user preferences</summary>
        /// <param name="externalUserPreferencesId">Denotes the preference identifier for the external user</param>
        /// <param name="payload">body Payload</param>
        /// <param name="validate_only">The identifier to indicate if it is set to only validate or not.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <returns>ExternalUserPreferenceResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ExternalUserPreferenceResponse> UpdateExternalUserPreferenceAsync(string externalUserPreferencesId, ExternalUserPreference payload, bool? validate_only = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Remove external user preferences</summary>
        /// <param name="externalUserPreferencesId">Denotes the preference identifier for the external user</param>
        /// <param name="payload">body Payload</param>
        /// <param name="validate_only">The identifier to indicate if it is set to only validate or not.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <returns>ExternalUserPreferenceResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ExternalUserPreferenceResponse> DeleteExternalUserPreferenceAsync(string externalUserPreferencesId, ExternalUserPreferenceDelete? payload = null, bool? validate_only = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Overview of external user preferences</summary>
        /// <param name="externalUserPreferencesId">Denotes the preference identifier for the external user</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <returns>ExternalUserPreferenceResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ExternalUserPreferenceResponse> GetExternalUserPreferenceAsync(string externalUserPreferencesId, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class QueryHeader 
    {
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public Audit? Audit { get; set; }= default!;
    
        /// <summary>Status of the API(success/failed)</summary>
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public string? Status { get; set; }= default!;
    
        /// <summary>The total number of records per page</summary>
        [System.Text.Json.Serialization.JsonPropertyName("page_size")]
        public int? Page_size { get; set; }= default!;
    
        /// <summary>The record from which the response should be displayed</summary>
        [System.Text.Json.Serialization.JsonPropertyName("page_start")]
        public int? Page_start { get; set; }= default!;
    
        /// <summary>The total number of records present</summary>
        [System.Text.Json.Serialization.JsonPropertyName("total_size")]
        public int? Total_size { get; set; }= default!;
    
        /// <summary>Unique id expected to get as part of response from Transact on every enquiry request</summary>
        [System.Text.Json.Serialization.JsonPropertyName("page_token")]
        public string? Page_token { get; set; }= default!;
    
    
    }
    
    /// <summary>ExternalUserProfileResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ExternalUserProfileResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public ExternalUserProfileResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ExternalUserProfileResponseBody : System.Collections.ObjectModel.Collection<Anonymous>
    {
    
    }
    
    /// <summary>BusinessQueryErrorResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BusinessQueryErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ErrorHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("error")]
        public BusinessQueryErrorResponseBody? Error { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BusinessQueryErrorResponseBody 
    {
        /// <summary>The identifier of the error message</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The actual Transact error message for bad requests</summary>
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
        /// <summary>The identifier of error type: Business</summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    /// <summary>SystemQueryErrorResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SystemQueryErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ErrorHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("error")]
        public SystemQueryErrorResponseBody? Error { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SystemQueryErrorResponseBody 
    {
        /// <summary>The identifier of the error message</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The actual Transact error message caused by server</summary>
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
        /// <summary>The identifier of error type: System</summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    /// <summary>ExternalUserPreferencesResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ExternalUserPreferencesResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public ExternalUserPreferencesResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ExternalUserPreferencesResponseBody : System.Collections.ObjectModel.Collection<Anonymous2>
    {
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PayloadHeader 
    {
        [System.Text.Json.Serialization.JsonPropertyName("override")]
        public Override? Override { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public Audit3? Audit { get; set; }= default!;
    
    
    }
    
    /// <summary>ExternalUserStatus</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ExternalUserStatus 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public PayloadHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public ExternalUserStatusBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ExternalUserStatusBody 
    {
        /// <summary>Contains the channel in which the activity was performed. If pricing is not determined based on channel, then this is not significant</summary>
        [System.Text.Json.Serialization.JsonPropertyName("channels")]
        public System.Collections.Generic.ICollection<Channels>? Channels { get; set; }= default!;
    
        /// <summary>Represents the language code of the underlying Entity/Company/Branch.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("languageId")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? LanguageId { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ScreenHeader 
    {
        /// <summary>The Identifier of the record created</summary>
        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public string? Id { get; set; }= default!;
    
        /// <summary>Status of the API(success/failed)</summary>
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public string? Status { get; set; }= default!;
    
        /// <summary>The status of the transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionStatus")]
        public string? TransactionStatus { get; set; }= default!;
    
        /// <summary>The unique identifier/Message Reference of the record created.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("uniqueIdentifier")]
        public string? UniqueIdentifier { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public Audit4? Audit { get; set; }= default!;
    
    
    }
    
    /// <summary>ExternalUserStatusResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ExternalUserStatusResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ScreenHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public ExternalUserStatusResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ExternalUserStatusResponseBody 
    {
        /// <summary>Contains the channel in which the activity was performed. If pricing is not determined based on channel, then this is not significant</summary>
        [System.Text.Json.Serialization.JsonPropertyName("channels")]
        public System.Collections.Generic.ICollection<Channels2>? Channels { get; set; }= default!;
    
        /// <summary>Represents the language code of the underlying Entity/Company/Branch.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("languageId")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? LanguageId { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OverrideBody 
    {
        [System.Text.Json.Serialization.JsonPropertyName("overrideDetails")]
        public System.Collections.Generic.ICollection<OverrideDetails>? OverrideDetails { get; set; }= default!;
    
    
    }
    
    /// <summary>ScreenErrorResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ScreenErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ErrorHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("error")]
        public ScreenErrorResponseBody? Error { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("override")]
        public OverrideBody? Override { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ScreenErrorResponseBody 
    {
        [System.Text.Json.Serialization.JsonPropertyName("errorDetails")]
        public System.Collections.Generic.ICollection<ErrorDetails>? ErrorDetails { get; set; }= default!;
    
        /// <summary>The identifier of error type: </summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    /// <summary>BusinessScreenErrorResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BusinessScreenErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ErrorHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("error")]
        public BusinessScreenErrorResponseBody? Error { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("override")]
        public OverrideBody? Override { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BusinessScreenErrorResponseBody 
    {
        [System.Text.Json.Serialization.JsonPropertyName("errorDetails")]
        public System.Collections.Generic.ICollection<ErrorDetails2>? ErrorDetails { get; set; }= default!;
    
        /// <summary>The identifier of error type: Business</summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    /// <summary>SystemScreenErrorResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SystemScreenErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ErrorHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("error")]
        public SystemScreenErrorResponseBody? Error { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("override")]
        public OverrideBody? Override { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SystemScreenErrorResponseBody 
    {
        [System.Text.Json.Serialization.JsonPropertyName("errorDetails")]
        public System.Collections.Generic.ICollection<ErrorDetails3>? ErrorDetails { get; set; }= default!;
    
        /// <summary>The identifier of error type: System</summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    /// <summary>ExternalUserPreference</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ExternalUserPreference 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public PayloadHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public ExternalUserPreferenceBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ExternalUserPreferenceBody 
    {
        /// <summary>Identifier of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customers")]
        public System.Collections.Generic.ICollection<Customers>? Customers { get; set; }= default!;
    
        /// <summary>View the balance of customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("balanceCustomers")]
        public System.Collections.Generic.ICollection<BalanceCustomers>? BalanceCustomers { get; set; }= default!;
    
        /// <summary>The service related to an arrangement</summary>
        [System.Text.Json.Serialization.JsonPropertyName("serviceNames")]
        public System.Collections.Generic.ICollection<ServiceNames>? ServiceNames { get; set; }= default!;
    
        /// <summary>The name that is displayed for the group</summary>
        [System.Text.Json.Serialization.JsonPropertyName("groupName")]
        [System.ComponentModel.DataAnnotations.StringLength(45)]
        public string? GroupName { get; set; }= default!;
    
        /// <summary>Display the details of group name</summary>
        [System.Text.Json.Serialization.JsonPropertyName("groupDisplayName")]
        [System.ComponentModel.DataAnnotations.StringLength(45)]
        public string? GroupDisplayName { get; set; }= default!;
    
        /// <summary>Group position</summary>
        [System.Text.Json.Serialization.JsonPropertyName("groupPosition")]
        [System.ComponentModel.DataAnnotations.StringLength(45)]
        public string? GroupPosition { get; set; }= default!;
    
        /// <summary>Favourite group</summary>
        [System.Text.Json.Serialization.JsonPropertyName("favouriteGroup")]
        [System.ComponentModel.DataAnnotations.StringLength(45)]
        public string? FavouriteGroup { get; set; }= default!;
    
    
    }
    
    /// <summary>ExternalUserPreferenceResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ExternalUserPreferenceResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ScreenHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public ExternalUserPreferenceResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ExternalUserPreferenceResponseBody 
    {
        /// <summary>Identifier of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customers")]
        public System.Collections.Generic.ICollection<Customers2>? Customers { get; set; }= default!;
    
        /// <summary>View the balance of customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("balanceCustomers")]
        public System.Collections.Generic.ICollection<BalanceCustomers2>? BalanceCustomers { get; set; }= default!;
    
        /// <summary>The service related to an arrangement</summary>
        [System.Text.Json.Serialization.JsonPropertyName("serviceNames")]
        public System.Collections.Generic.ICollection<ServiceNames2>? ServiceNames { get; set; }= default!;
    
        /// <summary>The name that is displayed for the group</summary>
        [System.Text.Json.Serialization.JsonPropertyName("groupName")]
        [System.ComponentModel.DataAnnotations.StringLength(45)]
        public string? GroupName { get; set; }= default!;
    
        /// <summary>Display the details of group name</summary>
        [System.Text.Json.Serialization.JsonPropertyName("groupDisplayName")]
        [System.ComponentModel.DataAnnotations.StringLength(45)]
        public string? GroupDisplayName { get; set; }= default!;
    
        /// <summary>Group position</summary>
        [System.Text.Json.Serialization.JsonPropertyName("groupPosition")]
        [System.ComponentModel.DataAnnotations.StringLength(45)]
        public string? GroupPosition { get; set; }= default!;
    
        /// <summary>Favourite group</summary>
        [System.Text.Json.Serialization.JsonPropertyName("favouriteGroup")]
        [System.ComponentModel.DataAnnotations.StringLength(45)]
        public string? FavouriteGroup { get; set; }= default!;
    
    
    }
    
    /// <summary>ExternalUserPreferenceDelete</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ExternalUserPreferenceDelete 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public PayloadHeader? Header { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous 
    {
        [System.Text.Json.Serialization.JsonPropertyName("supportedModules")]
        public System.Collections.Generic.ICollection<SupportedModules>? SupportedModules { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("extSmsServices")]
        public System.Collections.Generic.ICollection<ExtSmsServices>? ExtSmsServices { get; set; }= default!;
    
        /// <summary>Contains the channel in which the activity was performed. If pricing is not determined based on channel, then this is not significant</summary>
        [System.Text.Json.Serialization.JsonPropertyName("channels")]
        public System.Collections.Generic.ICollection<Channels3>? Channels { get; set; }= default!;
    
        /// <summary>Contains the contact details</summary>
        [System.Text.Json.Serialization.JsonPropertyName("contactDetails")]
        public System.Collections.Generic.ICollection<ContactDetails>? ContactDetails { get; set; }= default!;
    
        /// <summary>Home screen details</summary>
        [System.Text.Json.Serialization.JsonPropertyName("homeScreen")]
        public string? HomeScreen { get; set; }= default!;
    
        /// <summary>Customer external message details</summary>
        [System.Text.Json.Serialization.JsonPropertyName("extSmsCustomers")]
        public string? ExtSmsCustomers { get; set; }= default!;
    
        /// <summary>Enable the privilege check options</summary>
        [System.Text.Json.Serialization.JsonPropertyName("privilegesCheckEnabled")]
        public string? PrivilegesCheckEnabled { get; set; }= default!;
    
        /// <summary>The ISO code (3 letters) for the institution's local currency.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("localCurrencyId")]
        public string? LocalCurrencyId { get; set; }= default!;
    
        /// <summary>ISO country code of the financial institution. </summary>
        [System.Text.Json.Serialization.JsonPropertyName("countryId")]
        public string? CountryId { get; set; }= default!;
    
        /// <summary>Date of the current business day for all online activities in the selected Company. This field is updated automatically with the date from 'nextWorkingDay' during the Close of Business processing.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("currentWorkingDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? CurrentWorkingDate { get; set; }= default!;
    
        /// <summary>Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("companyId")]
        public string? CompanyId { get; set; }= default!;
    
        /// <summary>View the no of arrangement details</summary>
        [System.Text.Json.Serialization.JsonPropertyName("noOfArrangements")]
        public string? NoOfArrangements { get; set; }= default!;
    
        /// <summary>External or Digital Channel User Name</summary>
        [System.Text.Json.Serialization.JsonPropertyName("externalUserName")]
        public string? ExternalUserName { get; set; }= default!;
    
        /// <summary>External user sign in channels details</summary>
        [System.Text.Json.Serialization.JsonPropertyName("externalUserSignMethod")]
        public string? ExternalUserSignMethod { get; set; }= default!;
    
        /// <summary>Represents the language code of the underlying Entity/Company/Branch.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("languageId")]
        public string? LanguageId { get; set; }= default!;
    
        /// <summary>Identifier of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerId")]
        public string? CustomerId { get; set; }= default!;
    
        /// <summary>Name of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerName")]
        public string? CustomerName { get; set; }= default!;
    
        /// <summary>Gender of the Individual Customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("gender")]
        public string? Gender { get; set; }= default!;
    
        /// <summary>Available account details for a customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("holdingsAvailable")]
        public string? HoldingsAvailable { get; set; }= default!;
    
        /// <summary>Current number of the record</summary>
        [System.Text.Json.Serialization.JsonPropertyName("versionNumber")]
        public string? VersionNumber { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Audit2 
    {
        /// <summary>Time taken to response by Transact</summary>
        [System.Text.Json.Serialization.JsonPropertyName("T24_time")]
        public int? T24_time { get; set; }= default!;
    
        /// <summary>The CURR.NO. of the record</summary>
        [System.Text.Json.Serialization.JsonPropertyName("versionNumber")]
        public string? VersionNumber { get; set; }= default!;
    
        /// <summary>Time taken to parse the request by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("requestParse_time")]
        public double? RequestParse_time { get; set; }= default!;
    
        /// <summary>Time taken to parse the response by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("responseParse_time")]
        public double? ResponseParse_time { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous2 
    {
        /// <summary>Id of the product line (e.g. DEPOSITS), which is used in the calculation of the total balance.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("balanceProductLines")]
        public System.Collections.Generic.ICollection<BalanceProductLines>? BalanceProductLines { get; set; }= default!;
    
        /// <summary>The service related to an arrangement</summary>
        [System.Text.Json.Serialization.JsonPropertyName("serviceNames")]
        public System.Collections.Generic.ICollection<ServiceNames3>? ServiceNames { get; set; }= default!;
    
        /// <summary>The identifier of the external user's preferences</summary>
        [System.Text.Json.Serialization.JsonPropertyName("externalUserPreferenceId")]
        [System.ComponentModel.DataAnnotations.StringLength(110)]
        public string? ExternalUserPreferenceId { get; set; }= default!;
    
        /// <summary>The name that is displayed for the group</summary>
        [System.Text.Json.Serialization.JsonPropertyName("groupName")]
        [System.ComponentModel.DataAnnotations.StringLength(25)]
        public string? GroupName { get; set; }= default!;
    
        /// <summary>Display the details of group name</summary>
        [System.Text.Json.Serialization.JsonPropertyName("groupDisplayName")]
        [System.ComponentModel.DataAnnotations.StringLength(40)]
        public string? GroupDisplayName { get; set; }= default!;
    
        /// <summary>Group position</summary>
        [System.Text.Json.Serialization.JsonPropertyName("groupPosition")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? GroupPosition { get; set; }= default!;
    
        /// <summary>Favourite group</summary>
        [System.Text.Json.Serialization.JsonPropertyName("favouriteGroup")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? FavouriteGroup { get; set; }= default!;
    
        /// <summary>Current number of the record</summary>
        [System.Text.Json.Serialization.JsonPropertyName("versionNumber")]
        [System.ComponentModel.DataAnnotations.StringLength(4)]
        public string? VersionNumber { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Override 
    {
        [System.Text.Json.Serialization.JsonPropertyName("overrideDetails")]
        public System.Collections.Generic.ICollection<OverrideDetails2>? OverrideDetails { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Audit3 
    {
        /// <summary>The CURR.NO. of the record</summary>
        [System.Text.Json.Serialization.JsonPropertyName("versionNumber")]
        public string? VersionNumber { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Channels 
    {
        /// <summary>External User Access status. Can be Active,  Inactive, Barred, Initiated</summary>
        [System.Text.Json.Serialization.JsonPropertyName("externalUserStatus")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? ExternalUserStatus { get; set; }= default!;
    
        /// <summary>Defines whether the user has accepted the Terms and Conditions first displayed when the user logs in to the system for the very first time.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("termsAccepted")]
        [System.ComponentModel.DataAnnotations.StringLength(25)]
        public string? TermsAccepted { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Audit4 
    {
        /// <summary>Time taken to response by Transact</summary>
        [System.Text.Json.Serialization.JsonPropertyName("T24_time")]
        public int? T24_time { get; set; }= default!;
    
        /// <summary>The CURR.NO. of the record</summary>
        [System.Text.Json.Serialization.JsonPropertyName("versionNumber")]
        public string? VersionNumber { get; set; }= default!;
    
        /// <summary>Time taken to parse the request by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("requestParse_time")]
        public double? RequestParse_time { get; set; }= default!;
    
        /// <summary>Time taken to parse the response by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("responseParse_time")]
        public double? ResponseParse_time { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Channels2 
    {
        /// <summary>External User Access status. Can be Active,  Inactive, Barred, Initiated</summary>
        [System.Text.Json.Serialization.JsonPropertyName("externalUserStatus")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? ExternalUserStatus { get; set; }= default!;
    
        /// <summary>Defines whether the user has accepted the Terms and Conditions first displayed when the user logs in to the system for the very first time.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("termsAccepted")]
        [System.ComponentModel.DataAnnotations.StringLength(25)]
        public string? TermsAccepted { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OverrideDetails 
    {
        /// <summary>The identifier of the override.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public string? Id { get; set; }= default!;
    
        /// <summary>The actual override message.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string? Description { get; set; }= default!;
    
        /// <summary>The code related to override message.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The usable options for the override.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("options")]
        public System.Collections.Generic.ICollection<string>? Options { get; set; }= default!;
    
        /// <summary>The type of the override.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ErrorDetails 
    {
        /// <summary>The name of the field</summary>
        [System.Text.Json.Serialization.JsonPropertyName("fieldName")]
        public string? FieldName { get; set; }= default!;
    
        /// <summary>The identifier of the error message</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The actual Transact error message </summary>
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ErrorDetails2 
    {
        /// <summary>The name of the field</summary>
        [System.Text.Json.Serialization.JsonPropertyName("fieldName")]
        public string? FieldName { get; set; }= default!;
    
        /// <summary>The identifier of the error message</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The actual Transact error message for bad requests</summary>
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ErrorDetails3 
    {
        /// <summary>The name of the field</summary>
        [System.Text.Json.Serialization.JsonPropertyName("fieldName")]
        public string? FieldName { get; set; }= default!;
    
        /// <summary>The identifier of the error message</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The actual Transact error message caused by server</summary>
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Customers 
    {
        /// <summary>Identifier of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerId")]
        [System.ComponentModel.DataAnnotations.StringLength(45)]
        public string? CustomerId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("products")]
        public System.Collections.Generic.ICollection<Products>? Products { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BalanceCustomers 
    {
        /// <summary>View the balance of customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("balanceCustomer")]
        [System.ComponentModel.DataAnnotations.StringLength(45)]
        public string? BalanceCustomer { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("products")]
        public System.Collections.Generic.ICollection<Products2>? Products { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ServiceNames 
    {
        /// <summary>The service related to an arrangement</summary>
        [System.Text.Json.Serialization.JsonPropertyName("serviceName")]
        [System.ComponentModel.DataAnnotations.StringLength(45)]
        public string? ServiceName { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Customers2 
    {
        /// <summary>Identifier of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerId")]
        [System.ComponentModel.DataAnnotations.StringLength(45)]
        public string? CustomerId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("products")]
        public System.Collections.Generic.ICollection<Products3>? Products { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BalanceCustomers2 
    {
        /// <summary>View the balance of customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("balanceCustomer")]
        [System.ComponentModel.DataAnnotations.StringLength(45)]
        public string? BalanceCustomer { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("products")]
        public System.Collections.Generic.ICollection<Products4>? Products { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ServiceNames2 
    {
        /// <summary>The service related to an arrangement</summary>
        [System.Text.Json.Serialization.JsonPropertyName("serviceName")]
        [System.ComponentModel.DataAnnotations.StringLength(45)]
        public string? ServiceName { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SupportedModules 
    {
        /// <summary>Updated external user profile details</summary>
        [System.Text.Json.Serialization.JsonPropertyName("supportedModule")]
        public string? SupportedModule { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ExtSmsServices 
    {
        /// <summary>External message service details</summary>
        [System.Text.Json.Serialization.JsonPropertyName("extSmsService")]
        public string? ExtSmsService { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("extSmsOperations")]
        public System.Collections.Generic.ICollection<ExtSmsOperations>? ExtSmsOperations { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Channels3 
    {
        /// <summary>Id of the (digital) channel</summary>
        [System.Text.Json.Serialization.JsonPropertyName("channelId")]
        public string? ChannelId { get; set; }= default!;
    
        /// <summary>Position details of the channel</summary>
        [System.Text.Json.Serialization.JsonPropertyName("channelPosition")]
        public string? ChannelPosition { get; set; }= default!;
    
        /// <summary>Start date of the channel</summary>
        [System.Text.Json.Serialization.JsonPropertyName("channelStartDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? ChannelStartDate { get; set; }= default!;
    
        /// <summary>Start date of the channel</summary>
        [System.Text.Json.Serialization.JsonPropertyName("channelArrangementType")]
        public string? ChannelArrangementType { get; set; }= default!;
    
        /// <summary>Indicates an unique identifier of an account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("arrangementId")]
        public string? ArrangementId { get; set; }= default!;
    
        /// <summary>Contains the unique identifier of the product, e.g. the product id of the arrangement account.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("productId")]
        public string? ProductId { get; set; }= default!;
    
        /// <summary>Product name of the bank for this account, proprietary definition.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("productName")]
        public string? ProductName { get; set; }= default!;
    
        /// <summary>Customer id details of the specific arrangement</summary>
        [System.Text.Json.Serialization.JsonPropertyName("arrangementCustomerId")]
        public string? ArrangementCustomerId { get; set; }= default!;
    
        /// <summary>Customer name details of the specific arrangement</summary>
        [System.Text.Json.Serialization.JsonPropertyName("arrangementCustomerName")]
        public string? ArrangementCustomerName { get; set; }= default!;
    
        /// <summary>The subset of Master arrangement.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("subArrangementId")]
        public string? SubArrangementId { get; set; }= default!;
    
        /// <summary>The name of the sub arrangement that is displayed.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("subArrangementName")]
        public string? SubArrangementName { get; set; }= default!;
    
        /// <summary>Status update of the channel</summary>
        [System.Text.Json.Serialization.JsonPropertyName("channelStatus")]
        public string? ChannelStatus { get; set; }= default!;
    
        /// <summary>Defines whether the user has accepted the Terms and Conditions first displayed when the user logs in to the system for the very first time.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("termsAccepted")]
        public string? TermsAccepted { get; set; }= default!;
    
        /// <summary>The type of login method e.g. password, PIN, OTP</summary>
        [System.Text.Json.Serialization.JsonPropertyName("loginMethod")]
        public string? LoginMethod { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("dateUsed")]
        public System.Collections.Generic.ICollection<DateUsed>? DateUsed { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("timeUsed")]
        public System.Collections.Generic.ICollection<TimeUsed>? TimeUsed { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ContactDetails 
    {
        /// <summary>Email Identifier of the Customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("email")]
        public string? Email { get; set; }= default!;
    
        /// <summary>The mobile SMS number of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("smsNumber")]
        public string? SmsNumber { get; set; }= default!;
    
        /// <summary>The phone number of the customer or prospect</summary>
        [System.Text.Json.Serialization.JsonPropertyName("phoneNumber")]
        public string? PhoneNumber { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BalanceProductLines 
    {
        /// <summary>Id of the product line (e.g. DEPOSITS), which is used in the calculation of the total balance.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("balanceProductLine")]
        [System.ComponentModel.DataAnnotations.StringLength(20)]
        public string? BalanceProductLine { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ServiceNames3 
    {
        /// <summary>The service related to an arrangement</summary>
        [System.Text.Json.Serialization.JsonPropertyName("serviceName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? ServiceName { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OverrideDetails2 
    {
        /// <summary>The identifier of the override.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public string? Id { get; set; }= default!;
    
        /// <summary>The actual override message.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string? Description { get; set; }= default!;
    
        /// <summary>The code related to override message.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The user input to accept/reject the override.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("responseCode")]
        public string? ResponseCode { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Products 
    {
        /// <summary>The top level product line, which the product is ultimately attached to. May be a Temenos-defined product line such as ACCOUNTS, AGENT, BUNDLE, CONSENT, DEPOSITS, LENDING, REWARDS, etc. or one defined by the institution to manage external products.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("productLineId")]
        [System.ComponentModel.DataAnnotations.StringLength(45)]
        public string? ProductLineId { get; set; }= default!;
    
        /// <summary>The group, as defined by the institution, that the product belongs to.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("productGroupId")]
        [System.ComponentModel.DataAnnotations.StringLength(45)]
        public string? ProductGroupId { get; set; }= default!;
    
        /// <summary>Specifies the list of products licensed for the institution. This will be used to set the products field in the SPF (System Parameter) table and the master company. The products in the company can only be subset of the products in the SPF table.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("product")]
        [System.ComponentModel.DataAnnotations.StringLength(45)]
        public string? Product { get; set; }= default!;
    
        /// <summary>Product name of the bank for this account, proprietary definition.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("productName")]
        [System.ComponentModel.DataAnnotations.StringLength(45)]
        public string? ProductName { get; set; }= default!;
    
        /// <summary>Update the position of product</summary>
        [System.Text.Json.Serialization.JsonPropertyName("productPosition")]
        [System.ComponentModel.DataAnnotations.StringLength(45)]
        public string? ProductPosition { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Products2 
    {
        /// <summary>Id of the product line (e.g. DEPOSITS), which is used in the calculation of the total balance.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("balanceProductLine")]
        [System.ComponentModel.DataAnnotations.StringLength(45)]
        public string? BalanceProductLine { get; set; }= default!;
    
        /// <summary>View the product group details of customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("balanceProductGroup")]
        [System.ComponentModel.DataAnnotations.StringLength(45)]
        public string? BalanceProductGroup { get; set; }= default!;
    
        /// <summary>View the balance of product</summary>
        [System.Text.Json.Serialization.JsonPropertyName("balanceProduct")]
        [System.ComponentModel.DataAnnotations.StringLength(45)]
        public string? BalanceProduct { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Products3 
    {
        /// <summary>The top level product line, which the product is ultimately attached to. May be a Temenos-defined product line such as ACCOUNTS, AGENT, BUNDLE, CONSENT, DEPOSITS, LENDING, REWARDS, etc. or one defined by the institution to manage external products.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("productLineId")]
        [System.ComponentModel.DataAnnotations.StringLength(45)]
        public string? ProductLineId { get; set; }= default!;
    
        /// <summary>The group, as defined by the institution, that the product belongs to.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("productGroupId")]
        [System.ComponentModel.DataAnnotations.StringLength(45)]
        public string? ProductGroupId { get; set; }= default!;
    
        /// <summary>Specifies the list of products licensed for the institution. This will be used to set the products field in the SPF (System Parameter) table and the master company. The products in the company can only be subset of the products in the SPF table.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("product")]
        [System.ComponentModel.DataAnnotations.StringLength(45)]
        public string? Product { get; set; }= default!;
    
        /// <summary>Product name of the bank for this account, proprietary definition.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("productName")]
        [System.ComponentModel.DataAnnotations.StringLength(45)]
        public string? ProductName { get; set; }= default!;
    
        /// <summary>Update the position of product</summary>
        [System.Text.Json.Serialization.JsonPropertyName("productPosition")]
        [System.ComponentModel.DataAnnotations.StringLength(45)]
        public string? ProductPosition { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Products4 
    {
        /// <summary>Id of the product line (e.g. DEPOSITS), which is used in the calculation of the total balance.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("balanceProductLine")]
        [System.ComponentModel.DataAnnotations.StringLength(45)]
        public string? BalanceProductLine { get; set; }= default!;
    
        /// <summary>View the product group details of customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("balanceProductGroup")]
        [System.ComponentModel.DataAnnotations.StringLength(45)]
        public string? BalanceProductGroup { get; set; }= default!;
    
        /// <summary>View the balance of product</summary>
        [System.Text.Json.Serialization.JsonPropertyName("balanceProduct")]
        [System.ComponentModel.DataAnnotations.StringLength(45)]
        public string? BalanceProduct { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ExtSmsOperations 
    {
        /// <summary>External message operation details</summary>
        [System.Text.Json.Serialization.JsonPropertyName("extSmsOperation")]
        public string? ExtSmsOperation { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DateUsed 
    {
        /// <summary>The last Date and time when the Customer logged in to the Digital Channel</summary>
        [System.Text.Json.Serialization.JsonPropertyName("dateLastUsed")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? DateLastUsed { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class TimeUsed 
    {
        /// <summary>Indicates the time stamp at which the transaction history for the account is retrieved</summary>
        [System.Text.Json.Serialization.JsonPropertyName("timeLastUsed")]
        public string? TimeLastUsed { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal class DateFormatConverter : Newtonsoft.Json.Converters.IsoDateTimeConverter
    {
        public DateFormatConverter()
        {
            DateTimeFormat = "yyyy-MM-dd";
        }
    }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016