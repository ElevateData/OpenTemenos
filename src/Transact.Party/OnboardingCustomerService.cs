//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using Shared.Models;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"

namespace Transact.Party.OnboardingCustomers
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface IOnboardingCustomerService
    {
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Customer Information for specific customer.</summary>
        /// <param name="customerId">Identifier of the customer</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <returns>OnboardingCustomerResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<OnboardingCustomerResponse> GetOnboardingCustomerAsync(string customerId, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>update the customer information</summary>
        /// <param name="customerId">Identifier of the customer</param>
        /// <param name="payload">body Payload</param>
        /// <param name="validate_only">The identifier to indicate if it is set to only validate or not.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <returns>OnboardingCustomerResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<OnboardingCustomerResponse> UpdateOnboardingCustomerAsync(string customerId, OnboardingCustomer payload, bool? validate_only = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Create the customer</summary>
        /// <param name="payload">body Payload</param>
        /// <param name="validate_only">The identifier to indicate if it is set to only validate or not.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <returns>OnboardingCustomerResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<OnboardingCustomerResponse> CreateOnboardingCustomerAsync(OnboardingCustomer payload, bool? validate_only = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ScreenHeader 
    {
        /// <summary>The Identifier of the record created</summary>
        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public string? Id { get; set; }= default!;
    
        /// <summary>Status of the API(success/failed)</summary>
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public string? Status { get; set; }= default!;
    
        /// <summary>The status of the transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionStatus")]
        public string? TransactionStatus { get; set; }= default!;
    
        /// <summary>The unique identifier/Message Reference of the record created.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("uniqueIdentifier")]
        public string? UniqueIdentifier { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public Audit? Audit { get; set; }= default!;
    
    
    }
    
    /// <summary>OnboardingCustomerResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OnboardingCustomerResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ScreenHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public OnboardingCustomerResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OnboardingCustomerResponseBody 
    {
        /// <summary>Contains the name used for display or enrichment purposes</summary>
        [System.Text.Json.Serialization.JsonPropertyName("displayNames")]
        public System.Collections.Generic.ICollection<DisplayNames>? DisplayNames { get; set; }= default!;
    
        /// <summary>Name of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerNames")]
        public System.Collections.Generic.ICollection<CustomerNames>? CustomerNames { get; set; }= default!;
    
        /// <summary>Indicates the communication details of the customer like PhoneNumber, email.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("communicationDevices")]
        public System.Collections.Generic.ICollection<CommunicationDevices>? CommunicationDevices { get; set; }= default!;
    
        /// <summary>The fax (facsimile) number of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("faxIds")]
        public System.Collections.Generic.ICollection<FaxIds>? FaxIds { get; set; }= default!;
    
        /// <summary>The office phone number of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("officePhoneNumbers")]
        public System.Collections.Generic.ICollection<OfficePhoneNumbers>? OfficePhoneNumbers { get; set; }= default!;
    
        /// <summary>Contains the first line of customer's base address, example building number, street number etc.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("streets")]
        public System.Collections.Generic.ICollection<Streets>? Streets { get; set; }= default!;
    
        /// <summary>Communication Address of the Customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("addresses")]
        public System.Collections.Generic.ICollection<Addresses>? Addresses { get; set; }= default!;
    
        /// <summary>The town and/or city component of the base address of a customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("addressCities")]
        public System.Collections.Generic.ICollection<AddressCities>? AddressCities { get; set; }= default!;
    
        /// <summary>Identifies the country of the customer.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("countries")]
        public System.Collections.Generic.ICollection<Countries>? Countries { get; set; }= default!;
    
        /// <summary>Indicates the legal document details of the Customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("legalDetails")]
        public System.Collections.Generic.ICollection<LegalDetails>? LegalDetails { get; set; }= default!;
    
        /// <summary>Other Nationality of the Customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("otherNationalityIds")]
        public System.Collections.Generic.ICollection<OtherNationalityIds>? OtherNationalityIds { get; set; }= default!;
    
        /// <summary>Indicates the employment details of Customer like Status, title, occupation.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("employDetails")]
        public System.Collections.Generic.ICollection<EmployDetails>? EmployDetails { get; set; }= default!;
    
        /// <summary>Indicates the residence details of Customer or entity like type, status, value.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("residenceDetails")]
        public System.Collections.Generic.ICollection<ResidenceDetails>? ResidenceDetails { get; set; }= default!;
    
        /// <summary>Indicates the details of Relationship maintained by the Customer or Entity</summary>
        [System.Text.Json.Serialization.JsonPropertyName("relationshipDetails")]
        public System.Collections.Generic.ICollection<RelationshipDetails>? RelationshipDetails { get; set; }= default!;
    
        /// <summary>Identifies any restrictions for posting entries that are imposed on a Customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("postingRestrictIds")]
        public System.Collections.Generic.ICollection<PostingRestrictIds>? PostingRestrictIds { get; set; }= default!;
    
        /// <summary>Holds the Customer's TAX/SSN Id.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("taxIds")]
        public System.Collections.Generic.ICollection<TaxIds>? TaxIds { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("contactTypes")]
        public System.Collections.Generic.ICollection<ContactTypes>? ContactTypes { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("externalId")]
        public System.Collections.Generic.ICollection<ExternalId>? ExternalId { get; set; }= default!;
    
        /// <summary>The language that the contents of the field are displayed in.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("language")]
        [System.ComponentModel.DataAnnotations.Range(0D, 35D)]
        public double? Language { get; set; }= default!;
    
        /// <summary>The date of birth of an individual customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("dateOfBirth")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? DateOfBirth { get; set; }= default!;
    
        /// <summary>The internal bank status of a customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerStatus")]
        [System.ComponentModel.DataAnnotations.Range(0D, 35D)]
        public double? CustomerStatus { get; set; }= default!;
    
        /// <summary>Specifies an alternative easy means of referencing the Customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerMnemonic")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? CustomerMnemonic { get; set; }= default!;
    
        /// <summary>The identifier of the nationality of a customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("nationalityId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? NationalityId { get; set; }= default!;
    
        /// <summary>The identifier of the country of residence of a customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("residenceId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? ResidenceId { get; set; }= default!;
    
        /// <summary>The identifier of the department head or specific account officer responsible for the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountOfficerId")]
        [System.ComponentModel.DataAnnotations.Range(0D, 35D)]
        public double? AccountOfficerId { get; set; }= default!;
    
        /// <summary>An institution-defined identifier of the industry in which the customer is trading, operating or is associated with</summary>
        [System.Text.Json.Serialization.JsonPropertyName("industryId")]
        [System.ComponentModel.DataAnnotations.Range(0D, 35D)]
        public double? IndustryId { get; set; }= default!;
    
        /// <summary>Specifies how the Customer is considered by the bank and how he fits in with the Account Officer's overall marketing strategy</summary>
        [System.Text.Json.Serialization.JsonPropertyName("target")]
        [System.ComponentModel.DataAnnotations.Range(0D, 35D)]
        public double? Target { get; set; }= default!;
    
        /// <summary>An institution-defined identifier of the type of customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("sectorId")]
        [System.ComponentModel.DataAnnotations.Range(0D, 35D)]
        public double? SectorId { get; set; }= default!;
    
        /// <summary>Gender of the Individual Customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("gender")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? Gender { get; set; }= default!;
    
        /// <summary>Marital status of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("maritalStatus")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? MaritalStatus { get; set; }= default!;
    
        /// <summary>Branch of the customer. Accepts the id of the COMPANY which shares customer with currently signed in company</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerCompany")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? CustomerCompany { get; set; }= default!;
    
        /// <summary>Indicates the customer consolidation number for credit grouping purposes, within the same branch/country.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerLiability")]
        [System.ComponentModel.DataAnnotations.Range(0D, 35D)]
        public double? CustomerLiability { get; set; }= default!;
    
        /// <summary>Identifies the address postal code for the customer.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("postCode")]
        [System.ComponentModel.DataAnnotations.Range(0D, 35D)]
        public double? PostCode { get; set; }= default!;
    
        /// <summary>Date that first contact was made with the Customer.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("contactDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? ContactDate { get; set; }= default!;
    
        /// <summary>Name of the person who introduced the Customer to the bank</summary>
        [System.Text.Json.Serialization.JsonPropertyName("introducer")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? Introducer { get; set; }= default!;
    
        /// <summary>Indicates the Customer Relationship details of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("kycRelationship")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? KycRelationship { get; set; }= default!;
    
        /// <summary>Whether information related to the customer has been collected and verified</summary>
        [System.Text.Json.Serialization.JsonPropertyName("isKycComplete")]
        public bool? IsKycComplete { get; set; }= default!;
    
        /// <summary>Date customer KYC information was last reviewed</summary>
        [System.Text.Json.Serialization.JsonPropertyName("kycLastReviewDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? KycLastReviewDate { get; set; }= default!;
    
        /// <summary>Date system has calculated customer should next be reviewed.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("kycNextSystemReviewDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? KycNextSystemReviewDate { get; set; }= default!;
    
        /// <summary>Next date of KYC review defined manually by the User</summary>
        [System.Text.Json.Serialization.JsonPropertyName("kycNextReviewDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? KycNextReviewDate { get; set; }= default!;
    
        /// <summary>Describe the legal controls that is required by institutions to prevent or report Anti Money Laundering activities. It can have YES, SENT or NULL values.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("amlCheck")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? AmlCheck { get; set; }= default!;
    
        /// <summary>Describe the results of Anti Money Laundering.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("amlResult")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? AmlResult { get; set; }= default!;
    
        /// <summary>The last date when Anti Money Laundering result is performed and updated</summary>
        [System.Text.Json.Serialization.JsonPropertyName("amlLastResultDate")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? AmlLastResultDate { get; set; }= default!;
    
        /// <summary>Main menu title or header which the user wants to display on the screen when requesting the display of this main menu. This field can be expanded to allow the user to enter the description of the main menu in various languages.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("title")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? Title { get; set; }= default!;
    
        /// <summary>If 'Yes', then the customer will receive a SECURE message.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("isSecureMessage")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? IsSecureMessage { get; set; }= default!;
    
        /// <summary>The last name of an individual customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("lastName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? LastName { get; set; }= default!;
    
        /// <summary>Customer's given name</summary>
        [System.Text.Json.Serialization.JsonPropertyName("givenName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? GivenName { get; set; }= default!;
    
        /// <summary>Date on which the entity is incorporated</summary>
        [System.Text.Json.Serialization.JsonPropertyName("birthIncorpDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? BirthIncorpDate { get; set; }= default!;
    
        /// <summary>Indicates country of domicile</summary>
        [System.Text.Json.Serialization.JsonPropertyName("domicile")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? Domicile { get; set; }= default!;
    
        /// <summary>Customer's risk class updated manually by the User overriding the risk class calculated by the KYC process</summary>
        [System.Text.Json.Serialization.JsonPropertyName("manualRiskClass")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? ManualRiskClass { get; set; }= default!;
    
        /// <summary>Reason for changing the customer's risk class from the calculated risk class.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("overrideReason")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? OverrideReason { get; set; }= default!;
    
        /// <summary>Specifies the number of dependents to the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("numberOfDependents")]
        [System.ComponentModel.DataAnnotations.Range(0D, 35D)]
        public double? NumberOfDependents { get; set; }= default!;
    
        /// <summary>Contains the type of customer, for example ACTIVE, PROSPECT.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerType")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? CustomerType { get; set; }= default!;
    
        /// <summary>Represents a subdivision of a country such as state, region, country</summary>
        [System.Text.Json.Serialization.JsonPropertyName("state")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? State { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OverrideBody 
    {
        [System.Text.Json.Serialization.JsonPropertyName("overrideDetails")]
        public System.Collections.Generic.ICollection<OverrideDetails>? OverrideDetails { get; set; }= default!;
    
    
    }
    
    /// <summary>ScreenErrorResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ScreenErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ErrorHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("error")]
        public ScreenErrorResponseBody? Error { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("override")]
        public OverrideBody? Override { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ScreenErrorResponseBody 
    {
        [System.Text.Json.Serialization.JsonPropertyName("errorDetails")]
        public System.Collections.Generic.ICollection<ErrorDetails>? ErrorDetails { get; set; }= default!;
    
        /// <summary>The identifier of error type: </summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    /// <summary>BusinessScreenErrorResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BusinessScreenErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ErrorHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("error")]
        public BusinessScreenErrorResponseBody? Error { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("override")]
        public OverrideBody? Override { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BusinessScreenErrorResponseBody 
    {
        [System.Text.Json.Serialization.JsonPropertyName("errorDetails")]
        public System.Collections.Generic.ICollection<ErrorDetails2>? ErrorDetails { get; set; }= default!;
    
        /// <summary>The identifier of error type: Business</summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    /// <summary>SystemScreenErrorResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SystemScreenErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ErrorHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("error")]
        public SystemScreenErrorResponseBody? Error { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("override")]
        public OverrideBody? Override { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SystemScreenErrorResponseBody 
    {
        [System.Text.Json.Serialization.JsonPropertyName("errorDetails")]
        public System.Collections.Generic.ICollection<ErrorDetails3>? ErrorDetails { get; set; }= default!;
    
        /// <summary>The identifier of error type: System</summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PayloadHeader 
    {
        [System.Text.Json.Serialization.JsonPropertyName("override")]
        public Override? Override { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public Audit3? Audit { get; set; }= default!;
    
    
    }
    
    /// <summary>OnboardingCustomer</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OnboardingCustomer 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public PayloadHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public OnboardingCustomerBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OnboardingCustomerBody 
    {
        /// <summary>Contains the name used for display or enrichment purposes</summary>
        [System.Text.Json.Serialization.JsonPropertyName("displayNames")]
        public System.Collections.Generic.ICollection<DisplayNames2>? DisplayNames { get; set; }= default!;
    
        /// <summary>Name of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerNames")]
        public System.Collections.Generic.ICollection<CustomerNames2>? CustomerNames { get; set; }= default!;
    
        /// <summary>Indicates the communication details of the customer like PhoneNumber, email.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("communicationDevices")]
        public System.Collections.Generic.ICollection<CommunicationDevices2>? CommunicationDevices { get; set; }= default!;
    
        /// <summary>The fax (facsimile) number of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("faxIds")]
        public System.Collections.Generic.ICollection<FaxIds2>? FaxIds { get; set; }= default!;
    
        /// <summary>The office phone number of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("officePhoneNumbers")]
        public System.Collections.Generic.ICollection<OfficePhoneNumbers2>? OfficePhoneNumbers { get; set; }= default!;
    
        /// <summary>Contains the first line of customer's base address, example building number, street number etc.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("streets")]
        public System.Collections.Generic.ICollection<Streets2>? Streets { get; set; }= default!;
    
        /// <summary>Communication Address of the Customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("addresses")]
        public System.Collections.Generic.ICollection<Addresses2>? Addresses { get; set; }= default!;
    
        /// <summary>The town and/or city component of the base address of a customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("addressCities")]
        public System.Collections.Generic.ICollection<AddressCities2>? AddressCities { get; set; }= default!;
    
        /// <summary>Identifies the country of the customer.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("countries")]
        public System.Collections.Generic.ICollection<Countries2>? Countries { get; set; }= default!;
    
        /// <summary>Indicates the legal document details of the Customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("legalDetails")]
        public System.Collections.Generic.ICollection<LegalDetails2>? LegalDetails { get; set; }= default!;
    
        /// <summary>Other Nationality of the Customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("otherNationalityIds")]
        public System.Collections.Generic.ICollection<OtherNationalityIds2>? OtherNationalityIds { get; set; }= default!;
    
        /// <summary>Indicates the employment details of Customer like Status, title, occupation.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("employDetails")]
        public System.Collections.Generic.ICollection<EmployDetails2>? EmployDetails { get; set; }= default!;
    
        /// <summary>Indicates the residence details of Customer or entity like type, status, value.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("residenceDetails")]
        public System.Collections.Generic.ICollection<ResidenceDetails2>? ResidenceDetails { get; set; }= default!;
    
        /// <summary>Indicates the details of Relationship maintained by the Customer or Entity</summary>
        [System.Text.Json.Serialization.JsonPropertyName("relationshipDetails")]
        public System.Collections.Generic.ICollection<RelationshipDetails2>? RelationshipDetails { get; set; }= default!;
    
        /// <summary>Identifies any restrictions for posting entries that are imposed on a Customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("postingRestrictIds")]
        public System.Collections.Generic.ICollection<PostingRestrictIds2>? PostingRestrictIds { get; set; }= default!;
    
        /// <summary>Holds the Customer's TAX/SSN Id.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("taxIds")]
        public System.Collections.Generic.ICollection<TaxIds2>? TaxIds { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("contactTypes")]
        public System.Collections.Generic.ICollection<ContactTypes2>? ContactTypes { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("externalId")]
        public System.Collections.Generic.ICollection<ExternalId2>? ExternalId { get; set; }= default!;
    
        /// <summary>The language that the contents of the field are displayed in.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("language")]
        [System.ComponentModel.DataAnnotations.Range(0D, 35D)]
        public double? Language { get; set; }= default!;
    
        /// <summary>The date of birth of an individual customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("dateOfBirth")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? DateOfBirth { get; set; }= default!;
    
        /// <summary>The internal bank status of a customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerStatus")]
        [System.ComponentModel.DataAnnotations.Range(0D, 35D)]
        public double? CustomerStatus { get; set; }= default!;
    
        /// <summary>Specifies an alternative easy means of referencing the Customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerMnemonic")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? CustomerMnemonic { get; set; }= default!;
    
        /// <summary>The identifier of the nationality of a customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("nationalityId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? NationalityId { get; set; }= default!;
    
        /// <summary>The identifier of the country of residence of a customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("residenceId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? ResidenceId { get; set; }= default!;
    
        /// <summary>The identifier of the department head or specific account officer responsible for the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountOfficerId")]
        [System.ComponentModel.DataAnnotations.Range(0D, 35D)]
        public double? AccountOfficerId { get; set; }= default!;
    
        /// <summary>An institution-defined identifier of the industry in which the customer is trading, operating or is associated with</summary>
        [System.Text.Json.Serialization.JsonPropertyName("industryId")]
        [System.ComponentModel.DataAnnotations.Range(0D, 35D)]
        public double? IndustryId { get; set; }= default!;
    
        /// <summary>Specifies how the Customer is considered by the bank and how he fits in with the Account Officer's overall marketing strategy</summary>
        [System.Text.Json.Serialization.JsonPropertyName("target")]
        [System.ComponentModel.DataAnnotations.Range(0D, 35D)]
        public double? Target { get; set; }= default!;
    
        /// <summary>An institution-defined identifier of the type of customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("sectorId")]
        [System.ComponentModel.DataAnnotations.Range(0D, 35D)]
        public double? SectorId { get; set; }= default!;
    
        /// <summary>Gender of the Individual Customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("gender")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? Gender { get; set; }= default!;
    
        /// <summary>Marital status of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("maritalStatus")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? MaritalStatus { get; set; }= default!;
    
        /// <summary>Branch of the customer. Accepts the id of the COMPANY which shares customer with currently signed in company</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerCompany")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? CustomerCompany { get; set; }= default!;
    
        /// <summary>Indicates the customer consolidation number for credit grouping purposes, within the same branch/country.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerLiability")]
        [System.ComponentModel.DataAnnotations.Range(0D, 35D)]
        public double? CustomerLiability { get; set; }= default!;
    
        /// <summary>Identifies the address postal code for the customer.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("postCode")]
        [System.ComponentModel.DataAnnotations.Range(0D, 35D)]
        public double? PostCode { get; set; }= default!;
    
        /// <summary>Date that first contact was made with the Customer.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("contactDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? ContactDate { get; set; }= default!;
    
        /// <summary>Name of the person who introduced the Customer to the bank</summary>
        [System.Text.Json.Serialization.JsonPropertyName("introducer")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? Introducer { get; set; }= default!;
    
        /// <summary>Indicates the Customer Relationship details of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("kycRelationship")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? KycRelationship { get; set; }= default!;
    
        /// <summary>Whether information related to the customer has been collected and verified</summary>
        [System.Text.Json.Serialization.JsonPropertyName("isKycComplete")]
        public bool? IsKycComplete { get; set; }= default!;
    
        /// <summary>Date customer KYC information was last reviewed</summary>
        [System.Text.Json.Serialization.JsonPropertyName("kycLastReviewDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? KycLastReviewDate { get; set; }= default!;
    
        /// <summary>Date system has calculated customer should next be reviewed.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("kycNextSystemReviewDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? KycNextSystemReviewDate { get; set; }= default!;
    
        /// <summary>Next date of KYC review defined manually by the User</summary>
        [System.Text.Json.Serialization.JsonPropertyName("kycNextReviewDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? KycNextReviewDate { get; set; }= default!;
    
        /// <summary>Describe the legal controls that is required by institutions to prevent or report Anti Money Laundering activities. It can have YES, SENT or NULL values.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("amlCheck")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? AmlCheck { get; set; }= default!;
    
        /// <summary>Describe the results of Anti Money Laundering.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("amlResult")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? AmlResult { get; set; }= default!;
    
        /// <summary>The last date when Anti Money Laundering result is performed and updated</summary>
        [System.Text.Json.Serialization.JsonPropertyName("amlLastResultDate")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? AmlLastResultDate { get; set; }= default!;
    
        /// <summary>Main menu title or header which the user wants to display on the screen when requesting the display of this main menu. This field can be expanded to allow the user to enter the description of the main menu in various languages.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("title")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? Title { get; set; }= default!;
    
        /// <summary>If 'Yes', then the customer will receive a SECURE message.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("isSecureMessage")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? IsSecureMessage { get; set; }= default!;
    
        /// <summary>The last name of an individual customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("lastName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? LastName { get; set; }= default!;
    
        /// <summary>Customer's given name</summary>
        [System.Text.Json.Serialization.JsonPropertyName("givenName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? GivenName { get; set; }= default!;
    
        /// <summary>Date on which the entity is incorporated</summary>
        [System.Text.Json.Serialization.JsonPropertyName("birthIncorpDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? BirthIncorpDate { get; set; }= default!;
    
        /// <summary>Indicates country of domicile</summary>
        [System.Text.Json.Serialization.JsonPropertyName("domicile")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? Domicile { get; set; }= default!;
    
        /// <summary>Customer's risk class updated manually by the User overriding the risk class calculated by the KYC process</summary>
        [System.Text.Json.Serialization.JsonPropertyName("manualRiskClass")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? ManualRiskClass { get; set; }= default!;
    
        /// <summary>Reason for changing the customer's risk class from the calculated risk class.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("overrideReason")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? OverrideReason { get; set; }= default!;
    
        /// <summary>Specifies the number of dependents to the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("numberOfDependents")]
        [System.ComponentModel.DataAnnotations.Range(0D, 35D)]
        public double? NumberOfDependents { get; set; }= default!;
    
        /// <summary>Contains the type of customer, for example ACTIVE, PROSPECT.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerType")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? CustomerType { get; set; }= default!;
    
        /// <summary>Represents a subdivision of a country such as state, region, country</summary>
        [System.Text.Json.Serialization.JsonPropertyName("state")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? State { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DisplayNames 
    {
        /// <summary>Contains the name used for display or enrichment purposes</summary>
        [System.Text.Json.Serialization.JsonPropertyName("displayName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? DisplayName { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerNames 
    {
        /// <summary>Name of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? CustomerName { get; set; }= default!;
    
        /// <summary>Continuation/Extension to the Customer Name.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerNameAdditional")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? CustomerNameAdditional { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CommunicationDevices 
    {
        /// <summary>The phone number of the customer or prospect</summary>
        [System.Text.Json.Serialization.JsonPropertyName("phoneNumber")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? PhoneNumber { get; set; }= default!;
    
        /// <summary>The mobile SMS number of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("smsNumber")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? SmsNumber { get; set; }= default!;
    
        /// <summary>Email Identifier of the Customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("email")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? Email { get; set; }= default!;
    
        /// <summary>Communication type to the customer, as defined by the institution. E.g. Proposal, Alert, Campaign, New Product Update, Robinson List, Statement.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("communicationType")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? CommunicationType { get; set; }= default!;
    
        /// <summary>Preferred method of contact to the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("preferredChannel")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? PreferredChannel { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class FaxIds 
    {
        /// <summary>The fax (facsimile) number of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("faxId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? FaxId { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OfficePhoneNumbers 
    {
        /// <summary>The office phone number of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("officePhoneNumber")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? OfficePhoneNumber { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Streets 
    {
        /// <summary>Contains the first line of customer's base address, example building number, street number etc.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("street")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? Street { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Addresses 
    {
        /// <summary>Communication Address of the Customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("address")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? Address { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class AddressCities 
    {
        /// <summary>The town and/or city component of the base address of a customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("addressCity")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? AddressCity { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Countries 
    {
        /// <summary>Identifies the country of the customer.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("country")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? Country { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class LegalDetails 
    {
        /// <summary>Unique reference number of the legal documents submitted as identification proof</summary>
        [System.Text.Json.Serialization.JsonPropertyName("legalId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? LegalId { get; set; }= default!;
    
        /// <summary>Name of the legal documents such as passport, driving licence etc., provided as identification proof</summary>
        [System.Text.Json.Serialization.JsonPropertyName("legalDocumentName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? LegalDocumentName { get; set; }= default!;
    
        /// <summary>Name of the account holder in the Legal Document</summary>
        [System.Text.Json.Serialization.JsonPropertyName("legalHolderName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? LegalHolderName { get; set; }= default!;
    
        /// <summary>Authority who issued the legal document</summary>
        [System.Text.Json.Serialization.JsonPropertyName("legalIssueAuthorisedDate")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? LegalIssueAuthorisedDate { get; set; }= default!;
    
        /// <summary>Date of Issue of the legal document</summary>
        [System.Text.Json.Serialization.JsonPropertyName("legalIssueDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? LegalIssueDate { get; set; }= default!;
    
        /// <summary>Expiry date of the legal document submitted as proof</summary>
        [System.Text.Json.Serialization.JsonPropertyName("legalExpiredDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? LegalExpiredDate { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OtherNationalityIds 
    {
        /// <summary>Other Nationality of the Customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("otherNationalityId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? OtherNationalityId { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class EmployDetails 
    {
        /// <summary>Employment status of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("employStatus")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? EmployStatus { get; set; }= default!;
    
        /// <summary>Occupation of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("occupation")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? Occupation { get; set; }= default!;
    
        /// <summary>Employment Job Title of the Customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("employJobTitle")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? EmployJobTitle { get; set; }= default!;
    
        /// <summary>Name of the customer's employer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("employerName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? EmployerName { get; set; }= default!;
    
        /// <summary>Starting date of the customer's employment</summary>
        [System.Text.Json.Serialization.JsonPropertyName("employStartDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? EmployStartDate { get; set; }= default!;
    
        /// <summary>Currency in which the Salary information of the customer is maintained</summary>
        [System.Text.Json.Serialization.JsonPropertyName("salaryCurrency")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? SalaryCurrency { get; set; }= default!;
    
        /// <summary>Gross Salary details of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("salaryAmount")]
        [System.ComponentModel.DataAnnotations.Range(0D, 35D)]
        public double? SalaryAmount { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ResidenceDetails 
    {
        /// <summary>Residence Status of the Customer for CRM purpose like Owner, Tenant, Householder, Nester etc.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("residenceStatus")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? ResidenceStatus { get; set; }= default!;
    
        /// <summary>The date since the user has obtained the residence.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("residenceSince")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? ResidenceSince { get; set; }= default!;
    
        /// <summary>Residence type of the customer like Farmhouse, Independent house, Residential Apartment, Serviced Apartments</summary>
        [System.Text.Json.Serialization.JsonPropertyName("residenceType")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? ResidenceType { get; set; }= default!;
    
        /// <summary>Market Value of the customer's residence</summary>
        [System.Text.Json.Serialization.JsonPropertyName("residenceValue")]
        [System.ComponentModel.DataAnnotations.Range(0D, 35D)]
        public double? ResidenceValue { get; set; }= default!;
    
        /// <summary>Mortgage value of the residence property of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("residenceMortgageValue")]
        [System.ComponentModel.DataAnnotations.Range(0D, 35D)]
        public double? ResidenceMortgageValue { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class RelationshipDetails 
    {
        /// <summary>The identifier of the relationship between joint holder and owner </summary>
        [System.Text.Json.Serialization.JsonPropertyName("jointRelationCode")]
        [System.ComponentModel.DataAnnotations.Range(0D, 35D)]
        public double? JointRelationCode { get; set; }= default!;
    
        /// <summary>Joint or related customer id</summary>
        [System.Text.Json.Serialization.JsonPropertyName("jointCustomer")]
        [System.ComponentModel.DataAnnotations.Range(0D, 35D)]
        public double? JointCustomer { get; set; }= default!;
    
        /// <summary>Relationship code for the Related Customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("reverseJointRelationCode")]
        [System.ComponentModel.DataAnnotations.Range(0D, 35D)]
        public double? ReverseJointRelationCode { get; set; }= default!;
    
        /// <summary>Role of joint customer with the main customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("jointRelationRoleId")]
        [System.ComponentModel.DataAnnotations.Range(0D, 35D)]
        public double? JointRelationRoleId { get; set; }= default!;
    
        /// <summary>Additional notes about the role</summary>
        [System.Text.Json.Serialization.JsonPropertyName("jointRelationRoleNote")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? JointRelationRoleNote { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PostingRestrictIds 
    {
        /// <summary>Identifies any restrictions for posting entries that are imposed on a Customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("postingRestrictId")]
        [System.ComponentModel.DataAnnotations.Range(0D, 35D)]
        public double? PostingRestrictId { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class TaxIds 
    {
        /// <summary>Holds the Customer's TAX/SSN Id.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("taxId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? TaxId { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ContactTypes 
    {
        /// <summary>Types of contacts available to users to communicate</summary>
        [System.Text.Json.Serialization.JsonPropertyName("contactType")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? ContactType { get; set; }= default!;
    
        /// <summary>ISO Country code, IBAN number will be generated based on the structure of this country.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("countryCode")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? CountryCode { get; set; }= default!;
    
        /// <summary>Indicates the contact data of customer used for communication such as phone or mobile or e-mail address.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("contactData")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? ContactData { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ExternalId 
    {
        /// <summary>Identifier of the external customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("externalSystemId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? ExternalSystemId { get; set; }= default!;
    
        /// <summary>Identifier of the external customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("externalCustomerId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? ExternalCustomerId { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Audit2 
    {
        /// <summary>Time taken to response by Transact</summary>
        [System.Text.Json.Serialization.JsonPropertyName("T24_time")]
        public int? T24_time { get; set; }= default!;
    
        /// <summary>The CURR.NO. of the record</summary>
        [System.Text.Json.Serialization.JsonPropertyName("versionNumber")]
        public string? VersionNumber { get; set; }= default!;
    
        /// <summary>Time taken to parse the request by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("requestParse_time")]
        public double? RequestParse_time { get; set; }= default!;
    
        /// <summary>Time taken to parse the response by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("responseParse_time")]
        public double? ResponseParse_time { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OverrideDetails 
    {
        /// <summary>The identifier of the override.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public string? Id { get; set; }= default!;
    
        /// <summary>The actual override message.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string? Description { get; set; }= default!;
    
        /// <summary>The code related to override message.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The usable options for the override.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("options")]
        public System.Collections.Generic.ICollection<string>? Options { get; set; }= default!;
    
        /// <summary>The type of the override.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ErrorDetails 
    {
        /// <summary>The name of the field</summary>
        [System.Text.Json.Serialization.JsonPropertyName("fieldName")]
        public string? FieldName { get; set; }= default!;
    
        /// <summary>The identifier of the error message</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The actual Transact error message </summary>
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ErrorDetails2 
    {
        /// <summary>The name of the field</summary>
        [System.Text.Json.Serialization.JsonPropertyName("fieldName")]
        public string? FieldName { get; set; }= default!;
    
        /// <summary>The identifier of the error message</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The actual Transact error message for bad requests</summary>
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ErrorDetails3 
    {
        /// <summary>The name of the field</summary>
        [System.Text.Json.Serialization.JsonPropertyName("fieldName")]
        public string? FieldName { get; set; }= default!;
    
        /// <summary>The identifier of the error message</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The actual Transact error message caused by server</summary>
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Override 
    {
        [System.Text.Json.Serialization.JsonPropertyName("overrideDetails")]
        public System.Collections.Generic.ICollection<OverrideDetails2>? OverrideDetails { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Audit3 
    {
        /// <summary>The CURR.NO. of the record</summary>
        [System.Text.Json.Serialization.JsonPropertyName("versionNumber")]
        public string? VersionNumber { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DisplayNames2 
    {
        /// <summary>Contains the name used for display or enrichment purposes</summary>
        [System.Text.Json.Serialization.JsonPropertyName("displayName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? DisplayName { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerNames2 
    {
        /// <summary>Name of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? CustomerName { get; set; }= default!;
    
        /// <summary>Continuation/Extension to the Customer Name.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerNameAdditional")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? CustomerNameAdditional { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CommunicationDevices2 
    {
        /// <summary>The phone number of the customer or prospect</summary>
        [System.Text.Json.Serialization.JsonPropertyName("phoneNumber")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? PhoneNumber { get; set; }= default!;
    
        /// <summary>The mobile SMS number of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("smsNumber")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? SmsNumber { get; set; }= default!;
    
        /// <summary>Email Identifier of the Customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("email")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? Email { get; set; }= default!;
    
        /// <summary>Communication type to the customer, as defined by the institution. E.g. Proposal, Alert, Campaign, New Product Update, Robinson List, Statement.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("communicationType")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? CommunicationType { get; set; }= default!;
    
        /// <summary>Preferred method of contact to the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("preferredChannel")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? PreferredChannel { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class FaxIds2 
    {
        /// <summary>The fax (facsimile) number of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("faxId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? FaxId { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OfficePhoneNumbers2 
    {
        /// <summary>The office phone number of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("officePhoneNumber")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? OfficePhoneNumber { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Streets2 
    {
        /// <summary>Contains the first line of customer's base address, example building number, street number etc.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("street")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? Street { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Addresses2 
    {
        /// <summary>Communication Address of the Customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("address")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? Address { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class AddressCities2 
    {
        /// <summary>The town and/or city component of the base address of a customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("addressCity")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? AddressCity { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Countries2 
    {
        /// <summary>Identifies the country of the customer.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("country")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? Country { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class LegalDetails2 
    {
        /// <summary>Unique reference number of the legal documents submitted as identification proof</summary>
        [System.Text.Json.Serialization.JsonPropertyName("legalId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? LegalId { get; set; }= default!;
    
        /// <summary>Name of the legal documents such as passport, driving licence etc., provided as identification proof</summary>
        [System.Text.Json.Serialization.JsonPropertyName("legalDocumentName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? LegalDocumentName { get; set; }= default!;
    
        /// <summary>Name of the account holder in the Legal Document</summary>
        [System.Text.Json.Serialization.JsonPropertyName("legalHolderName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? LegalHolderName { get; set; }= default!;
    
        /// <summary>Authority who issued the legal document</summary>
        [System.Text.Json.Serialization.JsonPropertyName("legalIssueAuthorisedDate")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? LegalIssueAuthorisedDate { get; set; }= default!;
    
        /// <summary>Date of Issue of the legal document</summary>
        [System.Text.Json.Serialization.JsonPropertyName("legalIssueDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? LegalIssueDate { get; set; }= default!;
    
        /// <summary>Expiry date of the legal document submitted as proof</summary>
        [System.Text.Json.Serialization.JsonPropertyName("legalExpiredDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? LegalExpiredDate { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OtherNationalityIds2 
    {
        /// <summary>Other Nationality of the Customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("otherNationalityId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? OtherNationalityId { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class EmployDetails2 
    {
        /// <summary>Employment status of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("employStatus")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? EmployStatus { get; set; }= default!;
    
        /// <summary>Occupation of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("occupation")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? Occupation { get; set; }= default!;
    
        /// <summary>Employment Job Title of the Customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("employJobTitle")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? EmployJobTitle { get; set; }= default!;
    
        /// <summary>Name of the customer's employer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("employerName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? EmployerName { get; set; }= default!;
    
        /// <summary>Starting date of the customer's employment</summary>
        [System.Text.Json.Serialization.JsonPropertyName("employStartDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? EmployStartDate { get; set; }= default!;
    
        /// <summary>Currency in which the Salary information of the customer is maintained</summary>
        [System.Text.Json.Serialization.JsonPropertyName("salaryCurrency")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? SalaryCurrency { get; set; }= default!;
    
        /// <summary>Gross Salary details of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("salaryAmount")]
        [System.ComponentModel.DataAnnotations.Range(0D, 35D)]
        public double? SalaryAmount { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ResidenceDetails2 
    {
        /// <summary>Residence Status of the Customer for CRM purpose like Owner, Tenant, Householder, Nester etc.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("residenceStatus")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? ResidenceStatus { get; set; }= default!;
    
        /// <summary>The date since the user has obtained the residence.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("residenceSince")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? ResidenceSince { get; set; }= default!;
    
        /// <summary>Residence type of the customer like Farmhouse, Independent house, Residential Apartment, Serviced Apartments</summary>
        [System.Text.Json.Serialization.JsonPropertyName("residenceType")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? ResidenceType { get; set; }= default!;
    
        /// <summary>Market Value of the customer's residence</summary>
        [System.Text.Json.Serialization.JsonPropertyName("residenceValue")]
        [System.ComponentModel.DataAnnotations.Range(0D, 35D)]
        public double? ResidenceValue { get; set; }= default!;
    
        /// <summary>Mortgage value of the residence property of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("residenceMortgageValue")]
        [System.ComponentModel.DataAnnotations.Range(0D, 35D)]
        public double? ResidenceMortgageValue { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class RelationshipDetails2 
    {
        /// <summary>The identifier of the relationship between joint holder and owner </summary>
        [System.Text.Json.Serialization.JsonPropertyName("jointRelationCode")]
        [System.ComponentModel.DataAnnotations.Range(0D, 35D)]
        public double? JointRelationCode { get; set; }= default!;
    
        /// <summary>Joint or related customer id</summary>
        [System.Text.Json.Serialization.JsonPropertyName("jointCustomer")]
        [System.ComponentModel.DataAnnotations.Range(0D, 35D)]
        public double? JointCustomer { get; set; }= default!;
    
        /// <summary>Relationship code for the Related Customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("reverseJointRelationCode")]
        [System.ComponentModel.DataAnnotations.Range(0D, 35D)]
        public double? ReverseJointRelationCode { get; set; }= default!;
    
        /// <summary>Role of joint customer with the main customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("jointRelationRoleId")]
        [System.ComponentModel.DataAnnotations.Range(0D, 35D)]
        public double? JointRelationRoleId { get; set; }= default!;
    
        /// <summary>Additional notes about the role</summary>
        [System.Text.Json.Serialization.JsonPropertyName("jointRelationRoleNote")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? JointRelationRoleNote { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PostingRestrictIds2 
    {
        /// <summary>Identifies any restrictions for posting entries that are imposed on a Customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("postingRestrictId")]
        [System.ComponentModel.DataAnnotations.Range(0D, 35D)]
        public double? PostingRestrictId { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class TaxIds2 
    {
        /// <summary>Holds the Customer's TAX/SSN Id.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("taxId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? TaxId { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ContactTypes2 
    {
        /// <summary>Types of contacts available to users to communicate</summary>
        [System.Text.Json.Serialization.JsonPropertyName("contactType")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? ContactType { get; set; }= default!;
    
        /// <summary>ISO Country code, IBAN number will be generated based on the structure of this country.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("countryCode")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? CountryCode { get; set; }= default!;
    
        /// <summary>Indicates the contact data of customer used for communication such as phone or mobile or e-mail address.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("contactData")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? ContactData { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ExternalId2 
    {
        /// <summary>Identifier of the external customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("externalSystemId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? ExternalSystemId { get; set; }= default!;
    
        /// <summary>Identifier of the external customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("externalCustomerId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? ExternalCustomerId { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OverrideDetails2 
    {
        /// <summary>The identifier of the override.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public string? Id { get; set; }= default!;
    
        /// <summary>The actual override message.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string? Description { get; set; }= default!;
    
        /// <summary>The code related to override message.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The user input to accept/reject the override.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("responseCode")]
        public string? ResponseCode { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal class DateFormatConverter : Newtonsoft.Json.Converters.IsoDateTimeConverter
    {
        public DateFormatConverter()
        {
            DateTimeFormat = "yyyy-MM-dd";
        }
    }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016