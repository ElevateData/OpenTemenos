//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using Shared.Models;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"

namespace Transact.Party.Beneficiaries
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface IBeneficiariesService
    {
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Update beneficiary details</summary>
        /// <param name="beneficiaryId">Indicates the reference of the financial institution that allows access to the beneficiary information</param>
        /// <param name="payload">body Payload</param>
        /// <param name="validate_only">The identifier to indicate if it is set to only validate or not.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <returns>BeneficiaryResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<BeneficiaryResponse> UpdateBeneficiaryAsync(string beneficiaryId, Beneficiary payload, bool? validate_only = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Remove beneficiary</summary>
        /// <param name="beneficiaryId">Indicates the reference of the financial institution that allows access to the beneficiary information</param>
        /// <param name="payload">body Payload</param>
        /// <param name="validate_only">The identifier to indicate if it is set to only validate or not.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <returns>BeneficiaryResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<BeneficiaryResponse> DeleteBeneficiaryAsync(string beneficiaryId, BeneficiaryDelete? payload = null, bool? validate_only = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Create beneficiary</summary>
        /// <param name="payload">body Payload</param>
        /// <param name="validate_only">The identifier to indicate if it is set to only validate or not.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <returns>BeneficiaryResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<BeneficiaryResponse> CreateBeneficiaryAsync(Beneficiary payload, bool? validate_only = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Approve beneficiary</summary>
        /// <param name="beneficiaryId">Indicates the reference of the financial institution that allows access to the beneficiary information</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <returns>BeneficiaryResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<BeneficiaryResponse> ApproveBeneficiaryAsync(string beneficiaryId, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Reject beneficiary</summary>
        /// <param name="beneficiaryId">Indicates the reference of the financial institution that allows access to the beneficiary information</param>
        /// <param name="payload">body Payload</param>
        /// <param name="validate_only">The identifier to indicate if it is set to only validate or not.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <returns>BeneficiaryResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<BeneficiaryResponse> RejectBeneficiaryAsync(string beneficiaryId, BeneficiaryDelete? payload = null, bool? validate_only = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves the list of beneficiary details for a customers</summary>
        /// <param name="customerId">Identifier of the customer</param>
        /// <param name="nickName">Nickname of the beneficiary</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>CustomerBeneficiaryResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<CustomerBeneficiaryResponse> GetCustomerBeneficiaryAsync(string customerId, string? nickName = null, int? page_size = null, int? page_start = null, string? page_token = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, bool? disablePagination = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves the list of beneficiaries details for specific customer</summary>
        /// <param name="customerId">Identifier of the customer</param>
        /// <param name="externalBeneficiaryFlag">Flag to identify if the beneficiary is external</param>
        /// <param name="paymentScheme">Payment scheme details</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>CustomerBeneficiariesResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<CustomerBeneficiariesResponse> GetCustomerBeneficiariesAsync(string customerId, string? externalBeneficiaryFlag = null, string? paymentScheme = null, int? page_size = null, int? page_start = null, string? page_token = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, bool? disablePagination = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PayloadHeader 
    {
        [System.Text.Json.Serialization.JsonPropertyName("override")]
        public Override? Override { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public Audit? Audit { get; set; }= default!;
    
    
    }
    
    /// <summary>Beneficiary</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Beneficiary 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public PayloadHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public BeneficiaryBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BeneficiaryBody 
    {
        /// <summary>Nickname of the beneficiary</summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryNickNames")]
        public System.Collections.Generic.ICollection<BeneficiaryNickNames>? BeneficiaryNickNames { get; set; }= default!;
    
        /// <summary>Contains the name of the beneficiary's BIC IBAN number</summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryBICIBANNames")]
        public System.Collections.Generic.ICollection<BeneficiaryBICIBANNames>? BeneficiaryBICIBANNames { get; set; }= default!;
    
        /// <summary>Indicates the payment details for the beneficiary to apply the payment.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("paymentDetails")]
        public System.Collections.Generic.ICollection<PaymentDetails>? PaymentDetails { get; set; }= default!;
    
        /// <summary>The override message is captured  that was generated at the time of commitment of the transaction to the database.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("overrides")]
        public System.Collections.Generic.ICollection<Overrides>? Overrides { get; set; }= default!;
    
        /// <summary>Identifies the transaction type applicable to the transaction being processed, i.e. outward or inward payment. For example: ACPX, OTPX etc.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionType")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? TransactionType { get; set; }= default!;
    
        /// <summary>Identifies the Customer who is to be the ultimate receiver of the funds transferred by the sending bank when this Beneficiary is not a bank.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryCustomerId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? BeneficiaryCustomerId { get; set; }= default!;
    
        /// <summary>The address of the Beneficiary if the customer number of the Beneficiary is not known</summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryAddress")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? BeneficiaryAddress { get; set; }= default!;
    
        /// <summary>Identifier of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? CustomerId { get; set; }= default!;
    
        /// <summary>Unique account identifier of the beneficiary account number.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryAccountId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? BeneficiaryAccountId { get; set; }= default!;
    
        /// <summary>The sort code or the national clearing code of the beneficiary bank. </summary>
        [System.Text.Json.Serialization.JsonPropertyName("bankSortCode")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? BankSortCode { get; set; }= default!;
    
        /// <summary>The reference which is provided to the beneficiary/ creditor by the originator of payment</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerReference")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? CustomerReference { get; set; }= default!;
    
        /// <summary>BIC (Bank Identifier Code) of the beneficiary customer </summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryBIC")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? BeneficiaryBIC { get; set; }= default!;
    
        /// <summary>The default narrative which will be provided on the debit and credit side of the payment. </summary>
        [System.Text.Json.Serialization.JsonPropertyName("defaultNarrative")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? DefaultNarrative { get; set; }= default!;
    
        /// <summary>For a customer defined beneficiaries, it specifies the link to bank defined beneficiaries. </summary>
        [System.Text.Json.Serialization.JsonPropertyName("linkToBeneficiaryId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? LinkToBeneficiaryId { get; set; }= default!;
    
        /// <summary>International Bank Account Number (IBAN) of the beneficiary account, required only for International transfers/payments outside the Bank. For example: GB98 MIDL07009312345678, FR7630006000011234567890189</summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryIBAN")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? BeneficiaryIBAN { get; set; }= default!;
    
        /// <summary>Beneficiary IBAN details</summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryBICIBAN")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? BeneficiaryBICIBAN { get; set; }= default!;
    
        /// <summary>Beneficiaries city details</summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryBICIBANCity")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? BeneficiaryBICIBANCity { get; set; }= default!;
    
        /// <summary>Preferred payment amount can be specified for the beneficiary. If specified, it will be populated during payment processing. </summary>
        [System.Text.Json.Serialization.JsonPropertyName("preferredPaymentAmount")]
        [System.ComponentModel.DataAnnotations.Range(0D, 35D)]
        public double? PreferredPaymentAmount { get; set; }= default!;
    
        /// <summary>Preferred payment product can be specified for Beneficiary. This will be used for defaulting the payment product for specific beneficiary. </summary>
        [System.Text.Json.Serialization.JsonPropertyName("preferredPaymentProduct")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? PreferredPaymentProduct { get; set; }= default!;
    
        /// <summary>Identifies the bank where the beneficiary maintains his account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountWithBank")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? AccountWithBank { get; set; }= default!;
    
        /// <summary>The currency of payment.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("paymentCurrencyId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? PaymentCurrencyId { get; set; }= default!;
    
        /// <summary>Indicates the bearer of the charges. For example: BEN( All transaction charges are to be borne by the beneficiary customer.), OUR (All transaction charges are to be borne by the ordering customer.), SHA (Transaction charges on the Sender's side are to be borne by the ordering customer, transaction charges on the Receiver's side are to be borne by the beneficiary customer.)</summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryOurCharges")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? BeneficiaryOurCharges { get; set; }= default!;
    
        /// <summary>The country to which a payment is sent, usually where the beneficiary resides</summary>
        [System.Text.Json.Serialization.JsonPropertyName("paymentCountry")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? PaymentCountry { get; set; }= default!;
    
        /// <summary>Bank sort code details with account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountWithBankSortCode")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? AccountWithBankSortCode { get; set; }= default!;
    
        /// <summary>Contains the name of the account, basically the short title of the account.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("shortName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? ShortName { get; set; }= default!;
    
        /// <summary>The name of the bank being referred to.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("bankName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? BankName { get; set; }= default!;
    
        /// <summary>City of the beneficiary account. For example: London, Dallas etc.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryAddressCity")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? BeneficiaryAddressCity { get; set; }= default!;
    
        /// <summary>Identifies the address postal code for the customer.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("postCode")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? PostCode { get; set; }= default!;
    
        /// <summary>Creditor country name details</summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryCountryName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? BeneficiaryCountryName { get; set; }= default!;
    
        /// <summary>General status of the record. Possible values: - null - authorised - IHLD - input, on hold - INAU - input, not authorised - INA2 - input, authorised, pending second authorisation - INAO - input, not authorised with blocking overrides - RNAU - reversed, not authorised - RNAO - reversed, not authorised with blocking overrides</summary>
        [System.Text.Json.Serialization.JsonPropertyName("recordStatus")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? RecordStatus { get; set; }= default!;
    
        /// <summary>Department identifier.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("departmentId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? DepartmentId { get; set; }= default!;
    
        /// <summary>Contains a sub-division identifier of a large organisation or building</summary>
        [System.Text.Json.Serialization.JsonPropertyName("subDepartmentId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? SubDepartmentId { get; set; }= default!;
    
        /// <summary>Identifies the building number where customer resides</summary>
        [System.Text.Json.Serialization.JsonPropertyName("buildingNumber")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? BuildingNumber { get; set; }= default!;
    
        /// <summary>Identifies the name of the building where customer resides</summary>
        [System.Text.Json.Serialization.JsonPropertyName("buildingName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? BuildingName { get; set; }= default!;
    
        /// <summary>Contains the floor number of the customer address</summary>
        [System.Text.Json.Serialization.JsonPropertyName("floorNumber")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? FloorNumber { get; set; }= default!;
    
        /// <summary>Post Office Box (POB) number that relates to financial institution</summary>
        [System.Text.Json.Serialization.JsonPropertyName("postBoxNumber")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? PostBoxNumber { get; set; }= default!;
    
        /// <summary>Identifies the apartment number of the customer address</summary>
        [System.Text.Json.Serialization.JsonPropertyName("apartmentNumber")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? ApartmentNumber { get; set; }= default!;
    
        /// <summary>The town associated with the address of Customer or Party</summary>
        [System.Text.Json.Serialization.JsonPropertyName("town")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? Town { get; set; }= default!;
    
        /// <summary>Stores the district name of the  Beneficiary Customer.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("districtName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? DistrictName { get; set; }= default!;
    
        /// <summary>Represents a subdivision of a country such as state, region, country</summary>
        [System.Text.Json.Serialization.JsonPropertyName("state")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? State { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ScreenHeader 
    {
        /// <summary>The Identifier of the record created</summary>
        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public string? Id { get; set; }= default!;
    
        /// <summary>Status of the API(success/failed)</summary>
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public string? Status { get; set; }= default!;
    
        /// <summary>The status of the transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionStatus")]
        public string? TransactionStatus { get; set; }= default!;
    
        /// <summary>The unique identifier/Message Reference of the record created.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("uniqueIdentifier")]
        public string? UniqueIdentifier { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public Audit2? Audit { get; set; }= default!;
    
    
    }
    
    /// <summary>BeneficiaryResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BeneficiaryResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ScreenHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public BeneficiaryResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BeneficiaryResponseBody 
    {
        /// <summary>Nickname of the beneficiary</summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryNickNames")]
        public System.Collections.Generic.ICollection<BeneficiaryNickNames2>? BeneficiaryNickNames { get; set; }= default!;
    
        /// <summary>Contains the name of the beneficiary's BIC IBAN number</summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryBICIBANNames")]
        public System.Collections.Generic.ICollection<BeneficiaryBICIBANNames2>? BeneficiaryBICIBANNames { get; set; }= default!;
    
        /// <summary>Indicates the payment details for the beneficiary to apply the payment.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("paymentDetails")]
        public System.Collections.Generic.ICollection<PaymentDetails2>? PaymentDetails { get; set; }= default!;
    
        /// <summary>The override message is captured  that was generated at the time of commitment of the transaction to the database.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("overrides")]
        public System.Collections.Generic.ICollection<Overrides2>? Overrides { get; set; }= default!;
    
        /// <summary>Identifies the transaction type applicable to the transaction being processed, i.e. outward or inward payment. For example: ACPX, OTPX etc.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionType")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? TransactionType { get; set; }= default!;
    
        /// <summary>Identifies the Customer who is to be the ultimate receiver of the funds transferred by the sending bank when this Beneficiary is not a bank.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryCustomerId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? BeneficiaryCustomerId { get; set; }= default!;
    
        /// <summary>The address of the Beneficiary if the customer number of the Beneficiary is not known</summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryAddress")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? BeneficiaryAddress { get; set; }= default!;
    
        /// <summary>Identifier of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? CustomerId { get; set; }= default!;
    
        /// <summary>Unique account identifier of the beneficiary account number.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryAccountId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? BeneficiaryAccountId { get; set; }= default!;
    
        /// <summary>The sort code or the national clearing code of the beneficiary bank. </summary>
        [System.Text.Json.Serialization.JsonPropertyName("bankSortCode")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? BankSortCode { get; set; }= default!;
    
        /// <summary>The reference which is provided to the beneficiary/ creditor by the originator of payment</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerReference")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? CustomerReference { get; set; }= default!;
    
        /// <summary>BIC (Bank Identifier Code) of the beneficiary customer </summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryBIC")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? BeneficiaryBIC { get; set; }= default!;
    
        /// <summary>The default narrative which will be provided on the debit and credit side of the payment. </summary>
        [System.Text.Json.Serialization.JsonPropertyName("defaultNarrative")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? DefaultNarrative { get; set; }= default!;
    
        /// <summary>For a customer defined beneficiaries, it specifies the link to bank defined beneficiaries. </summary>
        [System.Text.Json.Serialization.JsonPropertyName("linkToBeneficiaryId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? LinkToBeneficiaryId { get; set; }= default!;
    
        /// <summary>International Bank Account Number (IBAN) of the beneficiary account, required only for International transfers/payments outside the Bank. For example: GB98 MIDL07009312345678, FR7630006000011234567890189</summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryIBAN")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? BeneficiaryIBAN { get; set; }= default!;
    
        /// <summary>Beneficiary IBAN details</summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryBICIBAN")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? BeneficiaryBICIBAN { get; set; }= default!;
    
        /// <summary>Beneficiaries city details</summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryBICIBANCity")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? BeneficiaryBICIBANCity { get; set; }= default!;
    
        /// <summary>Preferred payment amount can be specified for the beneficiary. If specified, it will be populated during payment processing. </summary>
        [System.Text.Json.Serialization.JsonPropertyName("preferredPaymentAmount")]
        [System.ComponentModel.DataAnnotations.Range(0D, 35D)]
        public double? PreferredPaymentAmount { get; set; }= default!;
    
        /// <summary>Preferred payment product can be specified for Beneficiary. This will be used for defaulting the payment product for specific beneficiary. </summary>
        [System.Text.Json.Serialization.JsonPropertyName("preferredPaymentProduct")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? PreferredPaymentProduct { get; set; }= default!;
    
        /// <summary>Identifies the bank where the beneficiary maintains his account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountWithBank")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? AccountWithBank { get; set; }= default!;
    
        /// <summary>The currency of payment.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("paymentCurrencyId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? PaymentCurrencyId { get; set; }= default!;
    
        /// <summary>Indicates the bearer of the charges. For example: BEN( All transaction charges are to be borne by the beneficiary customer.), OUR (All transaction charges are to be borne by the ordering customer.), SHA (Transaction charges on the Sender's side are to be borne by the ordering customer, transaction charges on the Receiver's side are to be borne by the beneficiary customer.)</summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryOurCharges")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? BeneficiaryOurCharges { get; set; }= default!;
    
        /// <summary>The country to which a payment is sent, usually where the beneficiary resides</summary>
        [System.Text.Json.Serialization.JsonPropertyName("paymentCountry")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? PaymentCountry { get; set; }= default!;
    
        /// <summary>Bank sort code details with account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountWithBankSortCode")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? AccountWithBankSortCode { get; set; }= default!;
    
        /// <summary>Contains the name of the account, basically the short title of the account.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("shortName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? ShortName { get; set; }= default!;
    
        /// <summary>The name of the bank being referred to.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("bankName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? BankName { get; set; }= default!;
    
        /// <summary>City of the beneficiary account. For example: London, Dallas etc.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryAddressCity")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? BeneficiaryAddressCity { get; set; }= default!;
    
        /// <summary>Identifies the address postal code for the customer.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("postCode")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? PostCode { get; set; }= default!;
    
        /// <summary>Creditor country name details</summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryCountryName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? BeneficiaryCountryName { get; set; }= default!;
    
        /// <summary>General status of the record. Possible values: - null - authorised - IHLD - input, on hold - INAU - input, not authorised - INA2 - input, authorised, pending second authorisation - INAO - input, not authorised with blocking overrides - RNAU - reversed, not authorised - RNAO - reversed, not authorised with blocking overrides</summary>
        [System.Text.Json.Serialization.JsonPropertyName("recordStatus")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? RecordStatus { get; set; }= default!;
    
        /// <summary>Department identifier.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("departmentId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? DepartmentId { get; set; }= default!;
    
        /// <summary>Contains a sub-division identifier of a large organisation or building</summary>
        [System.Text.Json.Serialization.JsonPropertyName("subDepartmentId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? SubDepartmentId { get; set; }= default!;
    
        /// <summary>Identifies the building number where customer resides</summary>
        [System.Text.Json.Serialization.JsonPropertyName("buildingNumber")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? BuildingNumber { get; set; }= default!;
    
        /// <summary>Identifies the name of the building where customer resides</summary>
        [System.Text.Json.Serialization.JsonPropertyName("buildingName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? BuildingName { get; set; }= default!;
    
        /// <summary>Contains the floor number of the customer address</summary>
        [System.Text.Json.Serialization.JsonPropertyName("floorNumber")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? FloorNumber { get; set; }= default!;
    
        /// <summary>Post Office Box (POB) number that relates to financial institution</summary>
        [System.Text.Json.Serialization.JsonPropertyName("postBoxNumber")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? PostBoxNumber { get; set; }= default!;
    
        /// <summary>Identifies the apartment number of the customer address</summary>
        [System.Text.Json.Serialization.JsonPropertyName("apartmentNumber")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? ApartmentNumber { get; set; }= default!;
    
        /// <summary>The town associated with the address of Customer or Party</summary>
        [System.Text.Json.Serialization.JsonPropertyName("town")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? Town { get; set; }= default!;
    
        /// <summary>Stores the district name of the  Beneficiary Customer.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("districtName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? DistrictName { get; set; }= default!;
    
        /// <summary>Represents a subdivision of a country such as state, region, country</summary>
        [System.Text.Json.Serialization.JsonPropertyName("state")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? State { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OverrideBody 
    {
        [System.Text.Json.Serialization.JsonPropertyName("overrideDetails")]
        public System.Collections.Generic.ICollection<OverrideDetails>? OverrideDetails { get; set; }= default!;
    
    
    }
    
    /// <summary>ScreenErrorResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ScreenErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ErrorHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("error")]
        public ScreenErrorResponseBody? Error { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("override")]
        public OverrideBody? Override { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ScreenErrorResponseBody 
    {
        [System.Text.Json.Serialization.JsonPropertyName("errorDetails")]
        public System.Collections.Generic.ICollection<ErrorDetails>? ErrorDetails { get; set; }= default!;
    
        /// <summary>The identifier of error type: </summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    /// <summary>BusinessScreenErrorResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BusinessScreenErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ErrorHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("error")]
        public BusinessScreenErrorResponseBody? Error { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("override")]
        public OverrideBody? Override { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BusinessScreenErrorResponseBody 
    {
        [System.Text.Json.Serialization.JsonPropertyName("errorDetails")]
        public System.Collections.Generic.ICollection<ErrorDetails2>? ErrorDetails { get; set; }= default!;
    
        /// <summary>The identifier of error type: Business</summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    /// <summary>SystemScreenErrorResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SystemScreenErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ErrorHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("error")]
        public SystemScreenErrorResponseBody? Error { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("override")]
        public OverrideBody? Override { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SystemScreenErrorResponseBody 
    {
        [System.Text.Json.Serialization.JsonPropertyName("errorDetails")]
        public System.Collections.Generic.ICollection<ErrorDetails3>? ErrorDetails { get; set; }= default!;
    
        /// <summary>The identifier of error type: System</summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    /// <summary>BeneficiaryDelete</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BeneficiaryDelete 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public PayloadHeader? Header { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class QueryHeader 
    {
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public Audit4? Audit { get; set; }= default!;
    
        /// <summary>Status of the API(success/failed)</summary>
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public string? Status { get; set; }= default!;
    
        /// <summary>The total number of records per page</summary>
        [System.Text.Json.Serialization.JsonPropertyName("page_size")]
        public int? Page_size { get; set; }= default!;
    
        /// <summary>The record from which the response should be displayed</summary>
        [System.Text.Json.Serialization.JsonPropertyName("page_start")]
        public int? Page_start { get; set; }= default!;
    
        /// <summary>The total number of records present</summary>
        [System.Text.Json.Serialization.JsonPropertyName("total_size")]
        public int? Total_size { get; set; }= default!;
    
        /// <summary>Unique id expected to get as part of response from t24 on every enquiry request</summary>
        [System.Text.Json.Serialization.JsonPropertyName("page_token")]
        public string? Page_token { get; set; }= default!;
    
    
    }
    
    /// <summary>CustomerBeneficiaryResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerBeneficiaryResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public CustomerBeneficiaryResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerBeneficiaryResponseBody : System.Collections.ObjectModel.Collection<Anonymous>
    {
    
    }
    
    /// <summary>BusinessQueryErrorResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BusinessQueryErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ErrorHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("error")]
        public BusinessQueryErrorResponseBody? Error { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BusinessQueryErrorResponseBody 
    {
        /// <summary>The identifier of the error message</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The actual t24 error message for bad requests</summary>
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
        /// <summary>The identifier of error type: Business</summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    /// <summary>SystemQueryErrorResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SystemQueryErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ErrorHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("error")]
        public SystemQueryErrorResponseBody? Error { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SystemQueryErrorResponseBody 
    {
        /// <summary>The identifier of the error message</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The actual t24 error message caused by server</summary>
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
        /// <summary>The identifier of error type: System</summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    /// <summary>CustomerBeneficiariesResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerBeneficiariesResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public CustomerBeneficiariesResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerBeneficiariesResponseBody : System.Collections.ObjectModel.Collection<Anonymous2>
    {
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Override 
    {
        [System.Text.Json.Serialization.JsonPropertyName("overrideDetails")]
        public System.Collections.Generic.ICollection<OverrideDetails2>? OverrideDetails { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BeneficiaryNickNames 
    {
        /// <summary>Nickname of the beneficiary</summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryNickName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? BeneficiaryNickName { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BeneficiaryBICIBANNames 
    {
        /// <summary>Contains the name of the beneficiary's BIC IBAN number</summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryBICIBANName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? BeneficiaryBICIBANName { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PaymentDetails 
    {
        /// <summary>Indicates the payment details for the beneficiary to apply the payment.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("paymentDetail")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? PaymentDetail { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Overrides 
    {
        /// <summary>The override message is captured  that was generated at the time of commitment of the transaction to the database.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("override")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? Override { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Audit2 
    {
        /// <summary>Time taken to response by T24</summary>
        [System.Text.Json.Serialization.JsonPropertyName("T24_time")]
        public int? T24_time { get; set; }= default!;
    
        /// <summary>The CURR.NO. of the record</summary>
        [System.Text.Json.Serialization.JsonPropertyName("versionNumber")]
        public string? VersionNumber { get; set; }= default!;
    
        /// <summary>Time taken to parse the request by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("requestParse_time")]
        public double? RequestParse_time { get; set; }= default!;
    
        /// <summary>Time taken to parse the response by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("responseParse_time")]
        public double? ResponseParse_time { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BeneficiaryNickNames2 
    {
        /// <summary>Nickname of the beneficiary</summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryNickName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? BeneficiaryNickName { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BeneficiaryBICIBANNames2 
    {
        /// <summary>Contains the name of the beneficiary's BIC IBAN number</summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryBICIBANName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? BeneficiaryBICIBANName { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PaymentDetails2 
    {
        /// <summary>Indicates the payment details for the beneficiary to apply the payment.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("paymentDetail")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? PaymentDetail { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Overrides2 
    {
        /// <summary>The override message is captured  that was generated at the time of commitment of the transaction to the database.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("override")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? Override { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Audit3 
    {
        /// <summary>Time taken to response by T24</summary>
        [System.Text.Json.Serialization.JsonPropertyName("T24_time")]
        public int? T24_time { get; set; }= default!;
    
        /// <summary>The CURR.NO. of the record</summary>
        [System.Text.Json.Serialization.JsonPropertyName("versionNumber")]
        public string? VersionNumber { get; set; }= default!;
    
        /// <summary>Time taken to parse the request by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("requestParse_time")]
        public double? RequestParse_time { get; set; }= default!;
    
        /// <summary>Time taken to parse the response by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("responseParse_time")]
        public double? ResponseParse_time { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OverrideDetails 
    {
        /// <summary>The identifier of the override.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public string? Id { get; set; }= default!;
    
        /// <summary>The actual override message.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string? Description { get; set; }= default!;
    
        /// <summary>The code related to override message.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The usable options for the override.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("options")]
        public System.Collections.Generic.ICollection<string>? Options { get; set; }= default!;
    
        /// <summary>The type of the override.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ErrorDetails 
    {
        /// <summary>The name of the field</summary>
        [System.Text.Json.Serialization.JsonPropertyName("fieldName")]
        public string? FieldName { get; set; }= default!;
    
        /// <summary>The identifier of the error message</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The actual t24 error message </summary>
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ErrorDetails2 
    {
        /// <summary>The name of the field</summary>
        [System.Text.Json.Serialization.JsonPropertyName("fieldName")]
        public string? FieldName { get; set; }= default!;
    
        /// <summary>The identifier of the error message</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The actual t24 error message for bad requests</summary>
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ErrorDetails3 
    {
        /// <summary>The name of the field</summary>
        [System.Text.Json.Serialization.JsonPropertyName("fieldName")]
        public string? FieldName { get; set; }= default!;
    
        /// <summary>The identifier of the error message</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The actual t24 error message caused by server</summary>
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Audit4 
    {
        /// <summary>Time taken to response by T24</summary>
        [System.Text.Json.Serialization.JsonPropertyName("T24_time")]
        public int? T24_time { get; set; }= default!;
    
        /// <summary>The CURR.NO. of the record</summary>
        [System.Text.Json.Serialization.JsonPropertyName("versionNumber")]
        public string? VersionNumber { get; set; }= default!;
    
        /// <summary>Time taken to parse the request by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("requestParse_time")]
        public double? RequestParse_time { get; set; }= default!;
    
        /// <summary>Time taken to parse the response by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("responseParse_time")]
        public double? ResponseParse_time { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous 
    {
        /// <summary>Date in the format YYYYMMDD. E.g. 20191231</summary>
        [System.Text.Json.Serialization.JsonPropertyName("dates")]
        public System.Collections.Generic.ICollection<Dates>? Dates { get; set; }= default!;
    
        /// <summary>Indicates the reference of the financial institution that allows access to the beneficiary information</summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryId")]
        [System.ComponentModel.DataAnnotations.StringLength(17)]
        public string? BeneficiaryId { get; set; }= default!;
    
        /// <summary>Nickname of the beneficiary</summary>
        [System.Text.Json.Serialization.JsonPropertyName("nickName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? NickName { get; set; }= default!;
    
        /// <summary>Unique identifier associated with the product name of the account or contract. For example: For customer/counterparty accounts, the identifier would be in the range 1000 to 9999. For ledger accounts, in the range 10000 to 19999.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("categoryId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? CategoryId { get; set; }= default!;
    
        /// <summary>Unique account identifier of the beneficiary account number.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryAccountId")]
        [System.ComponentModel.DataAnnotations.StringLength(34)]
        public string? BeneficiaryAccountId { get; set; }= default!;
    
        /// <summary>Identifies the Customer who is to be the ultimate receiver of the funds transferred by the sending bank when this Beneficiary is not a bank.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryCustomerId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? BeneficiaryCustomerId { get; set; }= default!;
    
        /// <summary>Identifies the transaction type applicable to the transaction being processed, i.e. outward or inward payment. For example: ACPX, OTPX etc.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionType")]
        [System.ComponentModel.DataAnnotations.StringLength(4)]
        public string? TransactionType { get; set; }= default!;
    
        /// <summary>The sort code or the national clearing code of the beneficiary bank. </summary>
        [System.Text.Json.Serialization.JsonPropertyName("bankSortCode")]
        [System.ComponentModel.DataAnnotations.StringLength(20)]
        public string? BankSortCode { get; set; }= default!;
    
        /// <summary>The BIC code of the Beneficiary bank</summary>
        [System.Text.Json.Serialization.JsonPropertyName("BIC")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? BIC { get; set; }= default!;
    
        /// <summary>International Bank Account number, an identifier of the account. E.g. GB29 NWBK 6016 1331 9268 19</summary>
        [System.Text.Json.Serialization.JsonPropertyName("IBAN")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? IBAN { get; set; }= default!;
    
        /// <summary>The identifier of a beneficiary (defined by the institution) being linked to a customer-defined beneficiary</summary>
        [System.Text.Json.Serialization.JsonPropertyName("linkBeneficiaryId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? LinkBeneficiaryId { get; set; }= default!;
    
        /// <summary>The reference which is provided to the beneficiary/ creditor by the originator of payment</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerReference")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? CustomerReference { get; set; }= default!;
    
        /// <summary>Identifies the bank where the beneficiary maintains his account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountWithBank")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? AccountWithBank { get; set; }= default!;
    
        /// <summary>The currency of payment.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("paymentCurrencyId")]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public string? PaymentCurrencyId { get; set; }= default!;
    
        /// <summary>Preferred payment amount can be specified for the beneficiary. If specified, it will be populated during payment processing. </summary>
        [System.Text.Json.Serialization.JsonPropertyName("preferredPaymentAmount")]
        [System.ComponentModel.DataAnnotations.Range(double.MinValue, 19D)]
        public double? PreferredPaymentAmount { get; set; }= default!;
    
        /// <summary>The charge borne by the bank for providing a financial service. Possible values: -BEN -OUR -SHA</summary>
        [System.Text.Json.Serialization.JsonPropertyName("ourCharges")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? OurCharges { get; set; }= default!;
    
        /// <summary>The country to which a payment is sent, usually where the beneficiary resides</summary>
        [System.Text.Json.Serialization.JsonPropertyName("paymentCountry")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? PaymentCountry { get; set; }= default!;
    
        /// <summary>The transaction description</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionName")]
        public string? TransactionName { get; set; }= default!;
    
        /// <summary>Nickname of the beneficiary</summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryNickName")]
        public string? BeneficiaryNickName { get; set; }= default!;
    
        /// <summary>Preferred payment product can be specified for Beneficiary. This will be used for defaulting the payment product for specific beneficiary. </summary>
        [System.Text.Json.Serialization.JsonPropertyName("preferredPaymentProduct")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? PreferredPaymentProduct { get; set; }= default!;
    
        /// <summary>The default narrative which will be provided on the debit and credit side of the payment. </summary>
        [System.Text.Json.Serialization.JsonPropertyName("defaultNarrative")]
        [System.ComponentModel.DataAnnotations.StringLength(16)]
        public string? DefaultNarrative { get; set; }= default!;
    
        /// <summary>Contains the name of the account, basically the short title of the account.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("shortName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? ShortName { get; set; }= default!;
    
        /// <summary>The name of the bank being referred to.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("bankName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? BankName { get; set; }= default!;
    
        /// <summary>The address of the Beneficiary if the customer number of the Beneficiary is not known</summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryAddress")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? BeneficiaryAddress { get; set; }= default!;
    
        /// <summary>City of the beneficiary account. For example: London, Dallas etc.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryAddressCity")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? BeneficiaryAddressCity { get; set; }= default!;
    
        /// <summary>Identifies the address postal code for the customer.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("postCode")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? PostCode { get; set; }= default!;
    
        /// <summary>Creditor country name details</summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryCountryName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? BeneficiaryCountryName { get; set; }= default!;
    
        /// <summary>Current number of the record</summary>
        [System.Text.Json.Serialization.JsonPropertyName("versionNumber")]
        [System.ComponentModel.DataAnnotations.StringLength(6)]
        public string? VersionNumber { get; set; }= default!;
    
        /// <summary>Department identifier.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("departmentId")]
        [System.ComponentModel.DataAnnotations.StringLength(70)]
        public string? DepartmentId { get; set; }= default!;
    
        /// <summary>Contains a sub-division identifier of a large organisation or building</summary>
        [System.Text.Json.Serialization.JsonPropertyName("subDepartmentId")]
        [System.ComponentModel.DataAnnotations.StringLength(70)]
        public string? SubDepartmentId { get; set; }= default!;
    
        /// <summary>Identifies the building number where customer resides</summary>
        [System.Text.Json.Serialization.JsonPropertyName("buildingNumber")]
        [System.ComponentModel.DataAnnotations.StringLength(16)]
        public string? BuildingNumber { get; set; }= default!;
    
        /// <summary>Identifies the name of the building where customer resides</summary>
        [System.Text.Json.Serialization.JsonPropertyName("buildingName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? BuildingName { get; set; }= default!;
    
        /// <summary>Contains the floor number of the customer address</summary>
        [System.Text.Json.Serialization.JsonPropertyName("floorNumber")]
        [System.ComponentModel.DataAnnotations.StringLength(70)]
        public string? FloorNumber { get; set; }= default!;
    
        /// <summary>Post Office Box (POB) number that relates to financial institution</summary>
        [System.Text.Json.Serialization.JsonPropertyName("postBoxNumber")]
        [System.ComponentModel.DataAnnotations.StringLength(16)]
        public string? PostBoxNumber { get; set; }= default!;
    
        /// <summary>Identifies the apartment number of the customer address</summary>
        [System.Text.Json.Serialization.JsonPropertyName("apartmentNumber")]
        [System.ComponentModel.DataAnnotations.StringLength(70)]
        public string? ApartmentNumber { get; set; }= default!;
    
        /// <summary>The town associated with the address of Customer or Party</summary>
        [System.Text.Json.Serialization.JsonPropertyName("town")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? Town { get; set; }= default!;
    
        /// <summary>Stores the district name of the  Beneficiary Customer.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("districtName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? DistrictName { get; set; }= default!;
    
        /// <summary>Represents a subdivision of a country such as state, region, country</summary>
        [System.Text.Json.Serialization.JsonPropertyName("state")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? State { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous2 
    {
        /// <summary>Identifies the Beneficiary name and address of the Standing Order</summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaries")]
        public System.Collections.Generic.ICollection<Beneficiaries>? Beneficiaries { get; set; }= default!;
    
        /// <summary>Indicates the reference of the financial institution that allows access to the beneficiary information</summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryId")]
        public string? BeneficiaryId { get; set; }= default!;
    
        /// <summary>The company in which payment is processed</summary>
        [System.Text.Json.Serialization.JsonPropertyName("companyName")]
        public string? CompanyName { get; set; }= default!;
    
        /// <summary>Unique identifier associated with the product name of the account or contract. For example: For customer/counterparty accounts, the identifier would be in the range 1000 to 9999. For ledger accounts, in the range 10000 to 19999.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("categoryId")]
        public string? CategoryId { get; set; }= default!;
    
        /// <summary>The transaction description</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionName")]
        public string? TransactionName { get; set; }= default!;
    
        /// <summary>Identifies the transaction type applicable to the transaction being processed, i.e. outward or inward payment. For example: ACPX, OTPX etc.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionType")]
        public string? TransactionType { get; set; }= default!;
    
        /// <summary>The sort code or the national clearing code of the beneficiary bank. </summary>
        [System.Text.Json.Serialization.JsonPropertyName("bankSortCode")]
        public string? BankSortCode { get; set; }= default!;
    
        /// <summary>For a customer defined beneficiaries, it specifies the link to bank defined beneficiaries. </summary>
        [System.Text.Json.Serialization.JsonPropertyName("linkToBeneficiaryId")]
        public string? LinkToBeneficiaryId { get; set; }= default!;
    
        /// <summary>The reference which is provided to the beneficiary/ creditor by the originator of payment</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerReference")]
        public string? CustomerReference { get; set; }= default!;
    
        /// <summary>Comments added by the User</summary>
        [System.Text.Json.Serialization.JsonPropertyName("comment")]
        public string? Comment { get; set; }= default!;
    
        /// <summary>Identifies the bank where the beneficiary maintains his account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountWithBank")]
        public string? AccountWithBank { get; set; }= default!;
    
        /// <summary>The currency of payment.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("paymentCurrencyId")]
        public string? PaymentCurrencyId { get; set; }= default!;
    
        /// <summary>Preferred payment amount can be specified for the beneficiary. If specified, it will be populated during payment processing. </summary>
        [System.Text.Json.Serialization.JsonPropertyName("preferredPaymentAmount")]
        public double? PreferredPaymentAmount { get; set; }= default!;
    
        /// <summary>The country to which a payment is sent, usually where the beneficiary resides</summary>
        [System.Text.Json.Serialization.JsonPropertyName("paymentCountry")]
        public string? PaymentCountry { get; set; }= default!;
    
        /// <summary>Denotes the identifier of the preferred payment product </summary>
        [System.Text.Json.Serialization.JsonPropertyName("preferredPaymentProductId")]
        public string? PreferredPaymentProductId { get; set; }= default!;
    
        /// <summary>Bank sort code details with account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountWithBankSortCode")]
        public string? AccountWithBankSortCode { get; set; }= default!;
    
        /// <summary>Current number of the record</summary>
        [System.Text.Json.Serialization.JsonPropertyName("versionNumber")]
        public string? VersionNumber { get; set; }= default!;
    
        /// <summary>Contains the date and time separated by '-'</summary>
        [System.Text.Json.Serialization.JsonPropertyName("dateTime")]
        public string? DateTime { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OverrideDetails2 
    {
        /// <summary>The identifier of the override.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public string? Id { get; set; }= default!;
    
        /// <summary>The actual override message.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string? Description { get; set; }= default!;
    
        /// <summary>The code related to override message.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The user input to accept/reject the override.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("responseCode")]
        public string? ResponseCode { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Dates 
    {
        /// <summary>Contains the date and time separated by '-'</summary>
        [System.Text.Json.Serialization.JsonPropertyName("dateTime")]
        [System.ComponentModel.DataAnnotations.StringLength(15)]
        public string? DateTime { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Beneficiaries 
    {
        /// <summary>Unique account identifier of the beneficiary account number.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryAccountId")]
        public string? BeneficiaryAccountId { get; set; }= default!;
    
        /// <summary>Identifies the Customer who is to be the ultimate receiver of the funds transferred by the sending bank when this Beneficiary is not a bank.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryCustomerId")]
        public string? BeneficiaryCustomerId { get; set; }= default!;
    
        /// <summary>BIC (Bank Identifier Code) of the beneficiary customer </summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryBIC")]
        public string? BeneficiaryBIC { get; set; }= default!;
    
        /// <summary>International Bank Account Number (IBAN) of the beneficiary account, required only for International transfers/payments outside the Bank. For example: GB98 MIDL07009312345678, FR7630006000011234567890189</summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryIBAN")]
        public string? BeneficiaryIBAN { get; set; }= default!;
    
        /// <summary>Nickname of the beneficiary</summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryNickName")]
        public string? BeneficiaryNickName { get; set; }= default!;
    
        /// <summary>Contains the nickname of the beneficiary Customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryCustomerNickName")]
        public string? BeneficiaryCustomerNickName { get; set; }= default!;
    
        /// <summary>Indicates the bearer of the charges. For example: BEN( All transaction charges are to be borne by the beneficiary customer.), OUR (All transaction charges are to be borne by the ordering customer.), SHA (Transaction charges on the Sender's side are to be borne by the ordering customer, transaction charges on the Receiver's side are to be borne by the beneficiary customer.)</summary>
        [System.Text.Json.Serialization.JsonPropertyName("beneficiaryOurCharges")]
        public string? BeneficiaryOurCharges { get; set; }= default!;
    
    
    }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016