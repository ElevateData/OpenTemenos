//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using Shared.Models;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"

namespace DataHub.OperationalDataStore.Reference.BeneficialOwnerRules
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface IBeneficialOwnerRuleService
    {
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves the list of Beneficiary Role type definitions and the information that is mandatory for the role definition</summary>
        /// <returns>getBeneficialOwnerRulesResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<GetBeneficialOwnerRulesResponse> GetBeneficialOwnerRulesAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
    }

    /// <summary>getBeneficialOwnerRulesResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetBeneficialOwnerRulesResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("data")]
        public GetBeneficialOwnerRulesResponseBody? Data { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetBeneficialOwnerRulesResponseBody 
    {
        [System.Text.Json.Serialization.JsonPropertyName("finExemptControlParam")]
        public System.Collections.Generic.ICollection<FinExemptControlParam>? FinExemptControlParam { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class FinExemptControlParam 
    {
        /// <summary>Unique identifier of an entity</summary>
        [System.Text.Json.Serialization.JsonPropertyName("recordId")]
        public string? RecordId { get; set; }= default!;
    
        /// <summary>Capture the rule id that defines the Beneficial ownership information required for the Customer. The rule will be defined in the system based on the customer type and determines which of the beneficiary rule information like ownership, control person and certifier details are mandatory for a corporate customer type or group.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("ownershipRuleId")]
        public string? OwnershipRuleId { get; set; }= default!;
    
        /// <summary>Based on the type of corporate, FinCen regulation requires ownership, control prong and certifier information are collected for customer before opening an account. Indicates if the corporate customer requires liability information along with ownership information</summary>
        [System.Text.Json.Serialization.JsonPropertyName("ownershipProng")]
        public string? OwnershipProng { get; set; }= default!;
    
        /// <summary>Indicates if the corporate customer requires information on person who controls the corporate and will operate the corporate accounts when opened.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("controlProng")]
        public string? ControlProng { get; set; }= default!;
    
        /// <summary>Certifier of the ownership information for beneficiary customer Rules for corporate customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("certificationInfo")]
        public string? CertificationInfo { get; set; }= default!;
    
    
    }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016