//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using Shared.Models;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"

namespace Transact.Holding.Limits
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface ILimitsService
    {
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves Limit cashflow details of contract</summary>
        /// <param name="arrangementId">Indicates an unique identifier of an account</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>LimitCashflowResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<LimitCashflowResponse> GetLimitCashflowAsync(string arrangementId, int? page_size = null, int? page_start = null, string? page_token = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, bool? disablePagination = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves Limit details of Customer group</summary>
        /// <param name="customerLimitId">Limit reference of the customer</param>
        /// <param name="riskGroupId">Identifier of the CUSTOMER.GROUP that constitutes one or more related customers which would be used while arrivnig collective risk exposure of credit line liable to them either individually or shared among them.</param>
        /// <param name="liabilityNumber">Identifier of the Liability Customer to the credit limit</param>
        /// <param name="limitId">The identifier of credit limit</param>
        /// <param name="creditLineNumber">Details of the top most parent credit line plus the limit product in the hierarchy. Eg : 300/LI1701101987 where 300 is the limit product of the topmost parent and second part is the respective creditline</param>
        /// <param name="recordParent">Identifier of the immediate parent limit</param>
        /// <param name="limitProduct">Identifier of the credit limit product</param>
        /// <param name="serialNumber">A sequence reference for the limit, which when used together with other fields such as Liability Number and/or Limit Reference, provides a unique identifier for a credit line</param>
        /// <param name="limitCurrency">Currency in which the credit limit is granted</param>
        /// <param name="buisnessUnit">The identifier of the underlying Entity/Company/Branch.</param>
        /// <param name="expiryDate">The date an agreement such as an arrangement, product, credit facility or limit is due to expire</param>
        /// <param name="timeBandName">Description of the individual time code under a credit facility</param>
        /// <param name="internalAmount">Indicates the amount allocated to the Credit Limit by the Bank</param>
        /// <param name="advisedAmount">Indicates the amount advised to the Credit Limit by the bank</param>
        /// <param name="outstandingAmount">Contains the aggregate outstanding principal amount thereof after giving effect to any borrowings and prepayments or repayments of Committed Loans</param>
        /// <param name="availableAmount">The credit limit available to the customer for use</param>
        /// <param name="availableOrExcess">The available amount for the corresponding liability number and limit reference. This amount is always expressed in the currency of the limit. Calculated as the sum of the online limit, the available balance and any sub allocation taken, less any sub allocation given, any commission available, the total outstanding.</param>
        /// <param name="totalCommitment">Specifies the total available commitment amounts  specific to a credit facility</param>
        /// <param name="totalCredit">Indicates the total credit balance of the customer's account</param>
        /// <param name="totalDebit">Indicates the total debit balance of the customer's account</param>
        /// <param name="requestedCurrency">The currency the amount is requested in.</param>
        /// <param name="exchangeRate">Contains the exchange rate returned from the system. i.e. For entries over foreign currency accounts, this contains the rate which used to convert the currency amount to the local equivalent at the time of the originating transaction.</param>
        /// <param name="idlType">The INTRA.DAY.LIMIT type that is applicable for a specific credit facility of the customer</param>
        /// <param name="idlApprovedAmount">The approved amount by the bank as INTRA.DAY.LIMIT on a credit facility within a specific period of the day</param>
        /// <param name="idlAdvisedAmount">The advised amount by the bank to the customer as INTRA.DAY.LIMIT on a credit facility within a specific period of the day</param>
        /// <param name="limitType">Defines the limit type for the trade</param>
        /// <param name="relatedCustomer">Indicates the related customers of multi customer and joint limits</param>
        /// <param name="sharedLimit">Indicates whether the credit line is of shared limit structure</param>
        /// <param name="adjustAvailableAmount">Indicates to adjust the available funds to respective time bands.</param>
        /// <param name="rebuildData">Indicates to rebuild the customer exposure when enquired by user.</param>
        /// <param name="aggregateCustomerId">List of customer/person entity that are aggregated under a main customer on risk exposure view</param>
        /// <param name="aggregateCustomerRelation">Relation code that exists between the main customer and the aggregated customers</param>
        /// <param name="limitNote">Relation code that exists between the main customer and the aggregated customers</param>
        /// <param name="sessionId">Id of the T24 session where the risk exposure view executed</param>
        /// <param name="subGroup">Identifier of the sub group within a CUSTOMER.GROUP that constitues one or more related customers which would be used while arrivnig collective risk exposure of credit line liable to them either individually or shared among them.</param>
        /// <param name="originalInternalAmount">Specifies the orignal amount actually approved or authorised on a credit line by Management or the Credit Committee before any repayment made</param>
        /// <param name="originalAdvisedAmount">Specifies the original amount advised to the customer holding the credit facility before any repayment made</param>
        /// <param name="repaidAmount">Indicates the amount which was repaid from the customer</param>
        /// <param name="totalRepaidAmount">Total of the repaid amount under a credit facility</param>
        /// <param name="excessFlag">Flag to indicate the credit line has been over utilised</param>
        /// <param name="fixedOrVariable">Indicates the secured nature of limit that has been covered by a customer collateral. When FIXED the limit amount sanctioned will not have impact on changing value of collateral whereas when VARIABLE limit amount will change based on the collateral amount changes</param>
        /// <param name="securedAmount">The total amount that has been covered by the collateral underlying the credit facility</param>
        /// <param name="multiCustomerLimit">Specifies if a credit facility shall be used by multiple customers</param>
        /// <param name="groupClass">Classify the type of group, whether it is a CUSTOMER.GROUP or SUB.GROUP</param>
        /// <param name="isAggregationExists">Indicates if there exists aggregation of one or many customer exposure under a primary customer</param>
        /// <param name="mainGroupId">Identifier of the main group under which the sub group has been defined</param>
        /// <param name="creditLineProduct">Identifier of the limit product of the topmost credit facility in the hierarchy</param>
        /// <param name="gvIndicator">Indicator which specifies the graphical view of risk exposure report requested</param>
        /// <param name="onlineLimit">The Limit amount that is actually available for use.The system limit checks are performed against the online limit</param>
        /// <param name="amountInUnits">Indicates the Units of the Amounts</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>CustomerGroupLimitsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<CustomerGroupLimitsResponse> GetCustomerGroupLimitsAsync(string? customerLimitId = null, string? riskGroupId = null, string? liabilityNumber = null, string? limitId = null, string? creditLineNumber = null, string? recordParent = null, string? limitProduct = null, string? serialNumber = null, string? limitCurrency = null, string? buisnessUnit = null, string? expiryDate = null, string? timeBandName = null, string? internalAmount = null, string? advisedAmount = null, string? outstandingAmount = null, string? availableAmount = null, string? availableOrExcess = null, string? totalCommitment = null, string? totalCredit = null, string? totalDebit = null, string? requestedCurrency = null, string? exchangeRate = null, string? idlType = null, string? idlApprovedAmount = null, string? idlAdvisedAmount = null, string? limitType = null, string? relatedCustomer = null, string? sharedLimit = null, string? adjustAvailableAmount = null, string? rebuildData = null, string? aggregateCustomerId = null, string? aggregateCustomerRelation = null, string? limitNote = null, string? sessionId = null, string? subGroup = null, string? originalInternalAmount = null, string? originalAdvisedAmount = null, string? repaidAmount = null, string? totalRepaidAmount = null, string? excessFlag = null, string? fixedOrVariable = null, string? securedAmount = null, string? multiCustomerLimit = null, string? groupClass = null, string? isAggregationExists = null, string? mainGroupId = null, string? creditLineProduct = null, string? gvIndicator = null, string? onlineLimit = null, string? amountInUnits = null, int? page_size = null, int? page_start = null, string? page_token = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, bool? disablePagination = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves relations among customers</summary>
        /// <param name="customerGroupId">Identifier of the CUSTOMER.GROUP that constitues one or more related customers which would be used while arrivnig collective risk exposure of credit line liable to them either individually or shared among them</param>
        /// <param name="subGroup">Identifier of the sub group within a CUSTOMER.GROUP that constitues one or more related customers which would be used while arrivnig collective risk exposure of credit line liable to them either individually or shared among them.</param>
        /// <param name="showReverseRelation">Indicates whether reverse relations among customer or entity are required</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>CustomerGroupRelationsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<CustomerGroupRelationsResponse> GetCustomerGroupRelationsAsync(string customerGroupId, string? subGroup = null, string? showReverseRelation = null, int? page_size = null, int? page_start = null, string? page_token = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, bool? disablePagination = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves Customer Credit Limits</summary>
        /// <param name="customerId">Identifier of the customer</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>CustomerLimitsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<CustomerLimitsResponse> GetCustomerLimitsAsync(string customerId, int? page_size = null, int? page_start = null, string? page_token = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, bool? disablePagination = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves list of Credit Lines that are due for Expiry</summary>
        /// <param name="expiryDate">The date an agreement such as an arrangement, product, credit facility or limit is due to expire</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>ExpiringLimitsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ExpiringLimitsResponse> GetExpiringLimitsAsync(string? expiryDate = null, int? page_size = null, int? page_start = null, string? page_token = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, bool? disablePagination = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves summary of customer's Forex Liability</summary>
        /// <param name="liabilityNumber">Identifier of the Liability Customer to the credit limit</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>LimitsForexTradeSummaryResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<LimitsForexTradeSummaryResponse> GetLimitsForexTradeSummaryAsync(string liabilityNumber, int? page_size = null, int? page_start = null, string? page_token = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, bool? disablePagination = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves Limit Sharing group of the customer</summary>
        /// <param name="groupId">Unique ID of the group</param>
        /// <param name="customerId">Identifier of the customer</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>CustomerLimitGroupsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<CustomerLimitGroupsResponse> GetCustomerLimitGroupsAsync(string? groupId = null, string? customerId = null, int? page_size = null, int? page_start = null, string? page_token = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, bool? disablePagination = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves Limit group alloction details</summary>
        /// <param name="groupId">Unique ID of the group</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>LimitGroupAllocationsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<LimitGroupAllocationsResponse> GetLimitGroupAllocationsAsync(string groupId, int? page_size = null, int? page_start = null, string? page_token = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, bool? disablePagination = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves Limit Sharing Master Group details</summary>
        /// <param name="groupId">Unique ID of the group</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>CustomerLimitMasterGroupsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<CustomerLimitMasterGroupsResponse> GetCustomerLimitMasterGroupsAsync(string? groupId = null, int? page_size = null, int? page_start = null, string? page_token = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, bool? disablePagination = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves List of FOREX contract details available to the Limit</summary>
        /// <param name="limitId">The identifier of credit limit</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>LimitForexDealsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<LimitForexDealsResponse> GetLimitForexDealsAsync(string limitId, int? page_size = null, int? page_start = null, string? page_token = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, bool? disablePagination = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves risk Excess details of the Limits untilised by Forex contracts</summary>
        /// <param name="limitId">The identifier of credit limit</param>
        /// <param name="limitReferenceId">Limit reference identifier for the limit order.</param>
        /// <param name="serialNumber">A sequence reference for the limit, which when used together with other fields such as Liability Number and/or Limit Reference, provides a unique identifier for a credit line</param>
        /// <param name="customerNumber">Identifier of the Customer Number</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>LimitForexLiabilitiesResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<LimitForexLiabilitiesResponse> GetLimitForexLiabilitiesAsync(string limitId, string? limitReferenceId = null, string? serialNumber = null, string? customerNumber = null, int? page_size = null, int? page_start = null, string? page_token = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, bool? disablePagination = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves Limit Sharing group details</summary>
        /// <param name="groupId">Unique ID of the group</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>SharedLimitsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<SharedLimitsResponse> GetSharedLimitsAsync(string? groupId = null, int? page_size = null, int? page_start = null, string? page_token = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, bool? disablePagination = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves Limit sharing Priority</summary>
        /// <param name="customerId">Identifier of the customer</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>CustomerLimitSharingPrioritiesResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<CustomerLimitSharingPrioritiesResponse> GetCustomerLimitSharingPrioritiesAsync(string customerId, int? page_size = null, int? page_start = null, string? page_token = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, bool? disablePagination = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves details of limit sub groups</summary>
        /// <param name="masterGroupId">Identifier of the Limit Sharing Master Group</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>LimitSubGroupsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<LimitSubGroupsResponse> GetLimitSubGroupsAsync(string masterGroupId, int? page_size = null, int? page_start = null, string? page_token = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, bool? disablePagination = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves summary of Customer outstanding details</summary>
        /// <param name="limitId">The identifier of credit limit</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>LimitSummaryResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<LimitSummaryResponse> GetLimitSummaryAsync(string limitId, int? page_size = null, int? page_start = null, string? page_token = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, bool? disablePagination = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves list of overdrawn Credit Limits</summary>
        /// <param name="liabilityNumber">Identifier of the Liability Customer to the credit limit</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>CustomerOverdrawnLimitsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<CustomerOverdrawnLimitsResponse> GetCustomerOverdrawnLimitsAsync(string liabilityNumber, int? page_size = null, int? page_start = null, string? page_token = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, bool? disablePagination = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves the Credit Lines that are due for review</summary>
        /// <param name="liabilityNumber">Identifier of the Liability Customer to the credit limit</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>LimitsToReviewTodayResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<LimitsToReviewTodayResponse> GetLimitsToReviewTodayAsync(string? liabilityNumber = null, int? page_size = null, int? page_start = null, string? page_token = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, bool? disablePagination = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves Customer Sub Category Limits</summary>
        /// <param name="customerId">Identifier of the customer</param>
        /// <param name="customerGroupId">Identifier of the CUSTOMER.GROUP that constitues one or more related customers which would be used while arrivnig collective risk exposure of credit line liable to them either individually or shared among them</param>
        /// <param name="subGroup">Identifier of the sub group within a CUSTOMER.GROUP that constitues one or more related customers which would be used while arrivnig collective risk exposure of credit line liable to them either individually or shared among them.</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>SubCategoryLimitsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<SubCategoryLimitsResponse> GetSubCategoryLimitsAsync(string customerId, string customerGroupId, string? subGroup = null, int? page_size = null, int? page_start = null, string? page_token = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, bool? disablePagination = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves list of Sub groups</summary>
        /// <param name="customerGroupId">Identifier of the CUSTOMER.GROUP that constitues one or more related customers which would be used while arrivnig collective risk exposure of credit line liable to them either individually or shared among them</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>SubGroupListResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<SubGroupListResponse> GetSubGroupListAsync(string customerGroupId, int? page_size = null, int? page_start = null, string? page_token = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, bool? disablePagination = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves list of sublimits applicable for a credit line.</summary>
        /// <param name="limitId">The identifier of credit limit</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>SubLimitsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<SubLimitsResponse> GetSubLimitsAsync(string limitId, int? page_size = null, int? page_start = null, string? page_token = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, bool? disablePagination = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves list of secured credit limits</summary>
        /// <param name="liabilityNumber">Identifier of the Liability Customer to the credit limit</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>LimitCollateralsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<LimitCollateralsResponse> GetLimitCollateralsAsync(string? liabilityNumber = null, int? page_size = null, int? page_start = null, string? page_token = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, bool? disablePagination = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Creates a credit limit</summary>
        /// <param name="payload">body Payload</param>
        /// <param name="validate_only">The identifier to indicate if it is set to only validate or not.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <returns>CreditLimitsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<CreditLimitsResponse> CreateCreditLimitsAsync(CreditLimits payload, bool? validate_only = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves details of the limits</summary>
        /// <param name="limitId">The identifier of credit limit</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <returns>LimitDetailsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<LimitDetailsResponse> GetLimitDetailsAsync(string limitId, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Updates a credit limit</summary>
        /// <param name="limitId">The identifier of credit limit</param>
        /// <param name="payload">body Payload</param>
        /// <param name="validate_only">The identifier to indicate if it is set to only validate or not.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <returns>CreditLimitsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<CreditLimitsResponse> UpdateCreditLimitsAsync(string limitId, CreditLimits payload, bool? validate_only = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Deletes a credit limit</summary>
        /// <param name="limitId">The identifier of credit limit</param>
        /// <param name="payload">body Payload</param>
        /// <param name="validate_only">The identifier to indicate if it is set to only validate or not.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <returns>CreditLimitsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<CreditLimitsResponse> DeleteCreditLimitsAsync(string limitId, CreditLimitsDelete? payload = null, bool? validate_only = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class QueryHeader 
    {
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public Audit? Audit { get; set; }= default!;
    
        /// <summary>Status of the API(success/failed)</summary>
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public string? Status { get; set; }= default!;
    
        /// <summary>The total number of records per page</summary>
        [System.Text.Json.Serialization.JsonPropertyName("page_size")]
        public int? Page_size { get; set; }= default!;
    
        /// <summary>The record from which the response should be displayed</summary>
        [System.Text.Json.Serialization.JsonPropertyName("page_start")]
        public int? Page_start { get; set; }= default!;
    
        /// <summary>The total number of records present</summary>
        [System.Text.Json.Serialization.JsonPropertyName("total_size")]
        public int? Total_size { get; set; }= default!;
    
        /// <summary>Unique id expected to get as part of response from t24 on every enquiry request</summary>
        [System.Text.Json.Serialization.JsonPropertyName("page_token")]
        public string? Page_token { get; set; }= default!;
    
    
    }
    
    /// <summary>LimitCashflowResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class LimitCashflowResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public LimitCashflowResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class LimitCashflowResponseBody : System.Collections.ObjectModel.Collection<Anonymous>
    {
    
    }
    
    /// <summary>BusinessQueryErrorResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BusinessQueryErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ErrorHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("error")]
        public BusinessQueryErrorResponseBody? Error { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BusinessQueryErrorResponseBody 
    {
        /// <summary>The identifier of the error message</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The actual t24 error message for bad requests</summary>
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
        /// <summary>The identifier of error type: Business</summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    /// <summary>SystemQueryErrorResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SystemQueryErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ErrorHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("error")]
        public SystemQueryErrorResponseBody? Error { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SystemQueryErrorResponseBody 
    {
        /// <summary>The identifier of the error message</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The actual t24 error message caused by server</summary>
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
        /// <summary>The identifier of error type: System</summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    /// <summary>CustomerGroupLimitsResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerGroupLimitsResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public CustomerGroupLimitsResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerGroupLimitsResponseBody : System.Collections.ObjectModel.Collection<Anonymous2>
    {
    
    }
    
    /// <summary>CustomerGroupRelationsResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerGroupRelationsResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public CustomerGroupRelationsResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerGroupRelationsResponseBody : System.Collections.ObjectModel.Collection<Anonymous3>
    {
    
    }
    
    /// <summary>CustomerLimitsResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerLimitsResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public CustomerLimitsResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerLimitsResponseBody : System.Collections.ObjectModel.Collection<Anonymous4>
    {
    
    }
    
    /// <summary>ExpiringLimitsResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ExpiringLimitsResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public ExpiringLimitsResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ExpiringLimitsResponseBody : System.Collections.ObjectModel.Collection<Anonymous5>
    {
    
    }
    
    /// <summary>LimitsForexTradeSummaryResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class LimitsForexTradeSummaryResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public LimitsForexTradeSummaryResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class LimitsForexTradeSummaryResponseBody : System.Collections.ObjectModel.Collection<Anonymous6>
    {
    
    }
    
    /// <summary>CustomerLimitGroupsResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerLimitGroupsResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public CustomerLimitGroupsResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerLimitGroupsResponseBody : System.Collections.ObjectModel.Collection<Anonymous7>
    {
    
    }
    
    /// <summary>LimitGroupAllocationsResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class LimitGroupAllocationsResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public LimitGroupAllocationsResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class LimitGroupAllocationsResponseBody : System.Collections.ObjectModel.Collection<Anonymous8>
    {
    
    }
    
    /// <summary>CustomerLimitMasterGroupsResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerLimitMasterGroupsResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public CustomerLimitMasterGroupsResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerLimitMasterGroupsResponseBody : System.Collections.ObjectModel.Collection<Anonymous9>
    {
    
    }
    
    /// <summary>LimitForexDealsResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class LimitForexDealsResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public LimitForexDealsResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class LimitForexDealsResponseBody : System.Collections.ObjectModel.Collection<Anonymous10>
    {
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class LimitForexLiabilitiesResponseQueryHeader 
    {
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public Audit3? Audit { get; set; }= default!;
    
        /// <summary>Status of the API(success/failed)</summary>
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public string? Status { get; set; }= default!;
    
        /// <summary>The total number of records per page</summary>
        [System.Text.Json.Serialization.JsonPropertyName("page_size")]
        public int? Page_size { get; set; }= default!;
    
        /// <summary>The record from which the response should be displayed</summary>
        [System.Text.Json.Serialization.JsonPropertyName("page_start")]
        public int? Page_start { get; set; }= default!;
    
        /// <summary>The total number of records present</summary>
        [System.Text.Json.Serialization.JsonPropertyName("total_size")]
        public int? Total_size { get; set; }= default!;
    
        /// <summary>Unique id expected to get as part of response from t24 on every enquiry request</summary>
        [System.Text.Json.Serialization.JsonPropertyName("page_token")]
        public string? Page_token { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("data")]
        public Data? Data { get; set; }= default!;
    
    
    }
    
    /// <summary>LimitForexLiabilitiesResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class LimitForexLiabilitiesResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public LimitForexLiabilitiesResponseQueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public LimitForexLiabilitiesResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class LimitForexLiabilitiesResponseBody : System.Collections.ObjectModel.Collection<Anonymous11>
    {
    
    }
    
    /// <summary>SharedLimitsResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SharedLimitsResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public SharedLimitsResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SharedLimitsResponseBody : System.Collections.ObjectModel.Collection<Anonymous12>
    {
    
    }
    
    /// <summary>CustomerLimitSharingPrioritiesResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerLimitSharingPrioritiesResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public CustomerLimitSharingPrioritiesResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerLimitSharingPrioritiesResponseBody : System.Collections.ObjectModel.Collection<Anonymous13>
    {
    
    }
    
    /// <summary>LimitSubGroupsResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class LimitSubGroupsResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public LimitSubGroupsResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class LimitSubGroupsResponseBody : System.Collections.ObjectModel.Collection<Anonymous14>
    {
    
    }
    
    /// <summary>LimitSummaryResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class LimitSummaryResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public LimitSummaryResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class LimitSummaryResponseBody : System.Collections.ObjectModel.Collection<Anonymous15>
    {
    
    }
    
    /// <summary>CustomerOverdrawnLimitsResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerOverdrawnLimitsResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public CustomerOverdrawnLimitsResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerOverdrawnLimitsResponseBody : System.Collections.ObjectModel.Collection<Anonymous16>
    {
    
    }
    
    /// <summary>LimitsToReviewTodayResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class LimitsToReviewTodayResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public LimitsToReviewTodayResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class LimitsToReviewTodayResponseBody : System.Collections.ObjectModel.Collection<Anonymous17>
    {
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SubCategoryLimitsResponseQueryHeader 
    {
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public Audit4? Audit { get; set; }= default!;
    
        /// <summary>Status of the API(success/failed)</summary>
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public string? Status { get; set; }= default!;
    
        /// <summary>The total number of records per page</summary>
        [System.Text.Json.Serialization.JsonPropertyName("page_size")]
        public int? Page_size { get; set; }= default!;
    
        /// <summary>The record from which the response should be displayed</summary>
        [System.Text.Json.Serialization.JsonPropertyName("page_start")]
        public int? Page_start { get; set; }= default!;
    
        /// <summary>The total number of records present</summary>
        [System.Text.Json.Serialization.JsonPropertyName("total_size")]
        public int? Total_size { get; set; }= default!;
    
        /// <summary>Unique id expected to get as part of response from t24 on every enquiry request</summary>
        [System.Text.Json.Serialization.JsonPropertyName("page_token")]
        public string? Page_token { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("data")]
        public Data2? Data { get; set; }= default!;
    
    
    }
    
    /// <summary>SubCategoryLimitsResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SubCategoryLimitsResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public SubCategoryLimitsResponseQueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public SubCategoryLimitsResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SubCategoryLimitsResponseBody : System.Collections.ObjectModel.Collection<Anonymous18>
    {
    
    }
    
    /// <summary>SubGroupListResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SubGroupListResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public SubGroupListResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SubGroupListResponseBody : System.Collections.ObjectModel.Collection<Anonymous19>
    {
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SubLimitsResponseQueryHeader 
    {
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public Audit5? Audit { get; set; }= default!;
    
        /// <summary>Status of the API(success/failed)</summary>
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public string? Status { get; set; }= default!;
    
        /// <summary>The total number of records per page</summary>
        [System.Text.Json.Serialization.JsonPropertyName("page_size")]
        public int? Page_size { get; set; }= default!;
    
        /// <summary>The record from which the response should be displayed</summary>
        [System.Text.Json.Serialization.JsonPropertyName("page_start")]
        public int? Page_start { get; set; }= default!;
    
        /// <summary>The total number of records present</summary>
        [System.Text.Json.Serialization.JsonPropertyName("total_size")]
        public int? Total_size { get; set; }= default!;
    
        /// <summary>Unique id expected to get as part of response from t24 on every enquiry request</summary>
        [System.Text.Json.Serialization.JsonPropertyName("page_token")]
        public string? Page_token { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("data")]
        public Data3? Data { get; set; }= default!;
    
    
    }
    
    /// <summary>SubLimitsResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SubLimitsResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public SubLimitsResponseQueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public SubLimitsResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SubLimitsResponseBody : System.Collections.ObjectModel.Collection<Anonymous20>
    {
    
    }
    
    /// <summary>LimitCollateralsResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class LimitCollateralsResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public LimitCollateralsResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class LimitCollateralsResponseBody : System.Collections.ObjectModel.Collection<Anonymous21>
    {
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PayloadHeader 
    {
        [System.Text.Json.Serialization.JsonPropertyName("override")]
        public Override? Override { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public Audit6? Audit { get; set; }= default!;
    
    
    }
    
    /// <summary>CreditLimits</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CreditLimits 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public PayloadHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public CreditLimitsBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CreditLimitsBody 
    {
        /// <summary>Notes to facilitate the use of the Function.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("notes")]
        public System.Collections.Generic.ICollection<Notes>? Notes { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("limitDetails")]
        public System.Collections.Generic.ICollection<LimitDetails>? LimitDetails { get; set; }= default!;
    
        /// <summary>Identifier of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerIds")]
        public System.Collections.Generic.ICollection<CustomerIds>? CustomerIds { get; set; }= default!;
    
        /// <summary>Currency in which the credit limit is granted</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitCurrency")]
        [System.ComponentModel.DataAnnotations.StringLength(13)]
        public string? LimitCurrency { get; set; }= default!;
    
        /// <summary>Defines the date on which the credit Limit was last approved by the Credit Committee of the bank</summary>
        [System.Text.Json.Serialization.JsonPropertyName("approvalDate")]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        public string? ApprovalDate { get; set; }= default!;
    
        /// <summary>Specifies the date by which the customer must have accepted the credit limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("offeredUntilDate")]
        [System.ComponentModel.DataAnnotations.StringLength(16)]
        public string? OfferedUntilDate { get; set; }= default!;
    
        /// <summary>Specifies the next date on which the limit is reviewed</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitReviewDate")]
        [System.ComponentModel.DataAnnotations.StringLength(17)]
        public string? LimitReviewDate { get; set; }= default!;
    
        /// <summary>The date an agreement such as an arrangement, product, credit facility or limit is due to expire</summary>
        [System.Text.Json.Serialization.JsonPropertyName("expiryDate")]
        [System.ComponentModel.DataAnnotations.StringLength(11)]
        public string? ExpiryDate { get; set; }= default!;
    
        /// <summary>Date on which the limit available for use</summary>
        [System.Text.Json.Serialization.JsonPropertyName("onlineLimitDate")]
        [System.ComponentModel.DataAnnotations.StringLength(15)]
        public string? OnlineLimitDate { get; set; }= default!;
    
        /// <summary>Specifies the date until which the transaction can utilize the credit limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("lastDrawDate")]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        public string? LastDrawDate { get; set; }= default!;
    
        /// <summary>Indicates the amount allocated to the Credit Limit by the Bank</summary>
        [System.Text.Json.Serialization.JsonPropertyName("internalAmount")]
        [System.ComponentModel.DataAnnotations.StringLength(19)]
        public string? InternalAmount { get; set; }= default!;
    
        /// <summary>Indicates the amount advised to the Credit Limit by the bank</summary>
        [System.Text.Json.Serialization.JsonPropertyName("advisedAmount")]
        [System.ComponentModel.DataAnnotations.StringLength(19)]
        public string? AdvisedAmount { get; set; }= default!;
    
        /// <summary>Whether the limit available for use or not</summary>
        [System.Text.Json.Serialization.JsonPropertyName("availableMarker")]
        [System.ComponentModel.DataAnnotations.StringLength(15)]
        public string? AvailableMarker { get; set; }= default!;
    
        /// <summary>Specifies the Administrative Extension date until which the credit limit expiry could be extended and be utilized</summary>
        [System.Text.Json.Serialization.JsonPropertyName("extensionDate")]
        [System.ComponentModel.DataAnnotations.StringLength(13)]
        public string? ExtensionDate { get; set; }= default!;
    
        /// <summary>Specifies whether the maximum limit amount sanctioned has to be updated online when there is a change in linked collateral value of the limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("onlineUpdate")]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        public string? OnlineUpdate { get; set; }= default!;
    
        /// <summary>Identifier of the credit limit product</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitProduct")]
        [System.ComponentModel.DataAnnotations.StringLength(13)]
        public string? LimitProduct { get; set; }= default!;
    
        /// <summary>Identifier of the Liability Customer to the credit limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("liabilityNumber")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? LiabilityNumber { get; set; }= default!;
    
        /// <summary>Identifier of the immediate parent limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("recordParent")]
        [System.ComponentModel.DataAnnotations.StringLength(32)]
        public string? RecordParent { get; set; }= default!;
    
        /// <summary>Defines whether overrides should appear when default LIMIT records are used or defaulted</summary>
        [System.Text.Json.Serialization.JsonPropertyName("checkLimit")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? CheckLimit { get; set; }= default!;
    
        /// <summary>Whether the customer for this liability can allow netting of both credit and debit accounts</summary>
        [System.Text.Json.Serialization.JsonPropertyName("allowNetting")]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        public string? AllowNetting { get; set; }= default!;
    
        /// <summary>Defines the limit type for the trade</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitType")]
        [System.ComponentModel.DataAnnotations.StringLength(9)]
        public string? LimitType { get; set; }= default!;
    
        /// <summary>A sequence reference for the limit, which when used together with other fields such as Liability Number and/or Limit Reference, provides a unique identifier for a credit line</summary>
        [System.Text.Json.Serialization.JsonPropertyName("serialNumber")]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        public string? SerialNumber { get; set; }= default!;
    
        /// <summary>Specifies whether this is a long-term limit with one time band where all arrangements/contracts under this limit are considered long term, regardless of arrangement/contract's maturity date</summary>
        [System.Text.Json.Serialization.JsonPropertyName("singleTimeBand")]
        [System.ComponentModel.DataAnnotations.StringLength(14)]
        public string? SingleTimeBand { get; set; }= default!;
    
        /// <summary>Identifies if there is a joint liability on the limit record Allowed values: -YES -NO  </summary>
        [System.Text.Json.Serialization.JsonPropertyName("jointLiability")]
        [System.ComponentModel.DataAnnotations.StringLength(14)]
        public string? JointLiability { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ScreenHeader 
    {
        /// <summary>The Identifier of the record created</summary>
        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public string? Id { get; set; }= default!;
    
        /// <summary>Status of the API(success/failed)</summary>
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public string? Status { get; set; }= default!;
    
        /// <summary>The status of the transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionStatus")]
        public string? TransactionStatus { get; set; }= default!;
    
        /// <summary>The unique identifier/Message Reference of the record created.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("uniqueIdentifier")]
        public string? UniqueIdentifier { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public Audit7? Audit { get; set; }= default!;
    
    
    }
    
    /// <summary>CreditLimitsResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CreditLimitsResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ScreenHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public CreditLimitsResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CreditLimitsResponseBody 
    {
        /// <summary>Notes to facilitate the use of the Function.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("notes")]
        public System.Collections.Generic.ICollection<Notes2>? Notes { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("limitDetails")]
        public System.Collections.Generic.ICollection<LimitDetails2>? LimitDetails { get; set; }= default!;
    
        /// <summary>Identifier of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerIds")]
        public System.Collections.Generic.ICollection<CustomerIds2>? CustomerIds { get; set; }= default!;
    
        /// <summary>Currency in which the credit limit is granted</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitCurrency")]
        [System.ComponentModel.DataAnnotations.StringLength(13)]
        public string? LimitCurrency { get; set; }= default!;
    
        /// <summary>Defines the date on which the credit Limit was last approved by the Credit Committee of the bank</summary>
        [System.Text.Json.Serialization.JsonPropertyName("approvalDate")]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        public string? ApprovalDate { get; set; }= default!;
    
        /// <summary>Specifies the date by which the customer must have accepted the credit limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("offeredUntilDate")]
        [System.ComponentModel.DataAnnotations.StringLength(16)]
        public string? OfferedUntilDate { get; set; }= default!;
    
        /// <summary>Specifies the next date on which the limit is reviewed</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitReviewDate")]
        [System.ComponentModel.DataAnnotations.StringLength(17)]
        public string? LimitReviewDate { get; set; }= default!;
    
        /// <summary>The date an agreement such as an arrangement, product, credit facility or limit is due to expire</summary>
        [System.Text.Json.Serialization.JsonPropertyName("expiryDate")]
        [System.ComponentModel.DataAnnotations.StringLength(11)]
        public string? ExpiryDate { get; set; }= default!;
    
        /// <summary>Date on which the limit available for use</summary>
        [System.Text.Json.Serialization.JsonPropertyName("onlineLimitDate")]
        [System.ComponentModel.DataAnnotations.StringLength(15)]
        public string? OnlineLimitDate { get; set; }= default!;
    
        /// <summary>Specifies the date until which the transaction can utilize the credit limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("lastDrawDate")]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        public string? LastDrawDate { get; set; }= default!;
    
        /// <summary>Indicates the amount allocated to the Credit Limit by the Bank</summary>
        [System.Text.Json.Serialization.JsonPropertyName("internalAmount")]
        [System.ComponentModel.DataAnnotations.StringLength(19)]
        public string? InternalAmount { get; set; }= default!;
    
        /// <summary>Indicates the amount advised to the Credit Limit by the bank</summary>
        [System.Text.Json.Serialization.JsonPropertyName("advisedAmount")]
        [System.ComponentModel.DataAnnotations.StringLength(19)]
        public string? AdvisedAmount { get; set; }= default!;
    
        /// <summary>Whether the limit available for use or not</summary>
        [System.Text.Json.Serialization.JsonPropertyName("availableMarker")]
        [System.ComponentModel.DataAnnotations.StringLength(15)]
        public string? AvailableMarker { get; set; }= default!;
    
        /// <summary>Specifies the Administrative Extension date until which the credit limit expiry could be extended and be utilized</summary>
        [System.Text.Json.Serialization.JsonPropertyName("extensionDate")]
        [System.ComponentModel.DataAnnotations.StringLength(13)]
        public string? ExtensionDate { get; set; }= default!;
    
        /// <summary>Specifies whether the maximum limit amount sanctioned has to be updated online when there is a change in linked collateral value of the limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("onlineUpdate")]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        public string? OnlineUpdate { get; set; }= default!;
    
        /// <summary>Identifier of the credit limit product</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitProduct")]
        [System.ComponentModel.DataAnnotations.StringLength(13)]
        public string? LimitProduct { get; set; }= default!;
    
        /// <summary>Identifier of the Liability Customer to the credit limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("liabilityNumber")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? LiabilityNumber { get; set; }= default!;
    
        /// <summary>Identifier of the immediate parent limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("recordParent")]
        [System.ComponentModel.DataAnnotations.StringLength(32)]
        public string? RecordParent { get; set; }= default!;
    
        /// <summary>Defines whether overrides should appear when default LIMIT records are used or defaulted</summary>
        [System.Text.Json.Serialization.JsonPropertyName("checkLimit")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? CheckLimit { get; set; }= default!;
    
        /// <summary>Whether the customer for this liability can allow netting of both credit and debit accounts</summary>
        [System.Text.Json.Serialization.JsonPropertyName("allowNetting")]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        public string? AllowNetting { get; set; }= default!;
    
        /// <summary>Defines the limit type for the trade</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitType")]
        [System.ComponentModel.DataAnnotations.StringLength(9)]
        public string? LimitType { get; set; }= default!;
    
        /// <summary>A sequence reference for the limit, which when used together with other fields such as Liability Number and/or Limit Reference, provides a unique identifier for a credit line</summary>
        [System.Text.Json.Serialization.JsonPropertyName("serialNumber")]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        public string? SerialNumber { get; set; }= default!;
    
        /// <summary>Specifies whether this is a long-term limit with one time band where all arrangements/contracts under this limit are considered long term, regardless of arrangement/contract's maturity date</summary>
        [System.Text.Json.Serialization.JsonPropertyName("singleTimeBand")]
        [System.ComponentModel.DataAnnotations.StringLength(14)]
        public string? SingleTimeBand { get; set; }= default!;
    
        /// <summary>Identifies if there is a joint liability on the limit record Allowed values: -YES -NO  </summary>
        [System.Text.Json.Serialization.JsonPropertyName("jointLiability")]
        [System.ComponentModel.DataAnnotations.StringLength(14)]
        public string? JointLiability { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OverrideBody 
    {
        [System.Text.Json.Serialization.JsonPropertyName("overrideDetails")]
        public System.Collections.Generic.ICollection<OverrideDetails>? OverrideDetails { get; set; }= default!;
    
    
    }
    
    /// <summary>ScreenErrorResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ScreenErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ErrorHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("error")]
        public ScreenErrorResponseBody? Error { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("override")]
        public OverrideBody? Override { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ScreenErrorResponseBody 
    {
        [System.Text.Json.Serialization.JsonPropertyName("errorDetails")]
        public System.Collections.Generic.ICollection<ErrorDetails>? ErrorDetails { get; set; }= default!;
    
        /// <summary>The identifier of error type: </summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    /// <summary>BusinessScreenErrorResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BusinessScreenErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ErrorHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("error")]
        public BusinessScreenErrorResponseBody? Error { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("override")]
        public OverrideBody? Override { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BusinessScreenErrorResponseBody 
    {
        [System.Text.Json.Serialization.JsonPropertyName("errorDetails")]
        public System.Collections.Generic.ICollection<ErrorDetails2>? ErrorDetails { get; set; }= default!;
    
        /// <summary>The identifier of error type: Business</summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    /// <summary>SystemScreenErrorResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SystemScreenErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ErrorHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("error")]
        public SystemScreenErrorResponseBody? Error { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("override")]
        public OverrideBody? Override { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SystemScreenErrorResponseBody 
    {
        [System.Text.Json.Serialization.JsonPropertyName("errorDetails")]
        public System.Collections.Generic.ICollection<ErrorDetails3>? ErrorDetails { get; set; }= default!;
    
        /// <summary>The identifier of error type: System</summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    /// <summary>CreditLimitsDelete</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CreditLimitsDelete 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public PayloadHeader? Header { get; set; }= default!;
    
    
    }
    
    /// <summary>LimitDetailsResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class LimitDetailsResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ScreenHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public LimitDetailsResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class LimitDetailsResponseBody 
    {
        /// <summary>The Limit amount that is actually available for use. The system limit checks are preformed against the online limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitAmounts")]
        public System.Collections.Generic.ICollection<LimitAmounts>? LimitAmounts { get; set; }= default!;
    
        /// <summary>Identifier of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerIds")]
        public System.Collections.Generic.ICollection<CustomerIds3>? CustomerIds { get; set; }= default!;
    
        /// <summary>Identifier of the Limit Products</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitProductId")]
        [System.ComponentModel.DataAnnotations.StringLength(14)]
        public string? LimitProductId { get; set; }= default!;
    
        /// <summary>A sequence reference for the limit, which when used together with other fields such as Liability Number and/or Limit Reference, provides a unique identifier for a credit line</summary>
        [System.Text.Json.Serialization.JsonPropertyName("serialNumber")]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        public string? SerialNumber { get; set; }= default!;
    
        /// <summary>Currency in which the credit limit is granted</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitCurrency")]
        [System.ComponentModel.DataAnnotations.StringLength(13)]
        public string? LimitCurrency { get; set; }= default!;
    
        /// <summary>Whether the limit available for use or not</summary>
        [System.Text.Json.Serialization.JsonPropertyName("availableMarker")]
        [System.ComponentModel.DataAnnotations.StringLength(15)]
        public string? AvailableMarker { get; set; }= default!;
    
        /// <summary>The date the product is available in the catalogue for sale to customers</summary>
        [System.Text.Json.Serialization.JsonPropertyName("availableFromDate")]
        [System.ComponentModel.DataAnnotations.StringLength(17)]
        public string? AvailableFromDate { get; set; }= default!;
    
        /// <summary>The date an agreement such as an arrangement, product, credit facility or limit is due to expire</summary>
        [System.Text.Json.Serialization.JsonPropertyName("expiryDate")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? ExpiryDate { get; set; }= default!;
    
        /// <summary>Indicates if commitment is revolving or non revolving in nature</summary>
        [System.Text.Json.Serialization.JsonPropertyName("revolving")]
        [System.ComponentModel.DataAnnotations.StringLength(13)]
        public string? Revolving { get; set; }= default!;
    
        /// <summary>Identifier of the immediate parent limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("recordParent")]
        [System.ComponentModel.DataAnnotations.StringLength(13)]
        public string? RecordParent { get; set; }= default!;
    
        /// <summary>Identifies if there is a joint liability on the limit record Allowed values: -YES -NO  </summary>
        [System.Text.Json.Serialization.JsonPropertyName("jointLiability")]
        [System.ComponentModel.DataAnnotations.StringLength(14)]
        public string? JointLiability { get; set; }= default!;
    
        /// <summary>Indicates whether credit line is secured by an underlying collateral</summary>
        [System.Text.Json.Serialization.JsonPropertyName("securedLimit")]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        public string? SecuredLimit { get; set; }= default!;
    
        /// <summary>Identifier of the CUSTOMER.GROUP that constitutes one or more related customers which would be used while arrivnig collective risk exposure of credit line liable to them either individually or shared among them.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("riskGroupId")]
        [System.ComponentModel.DataAnnotations.StringLength(11)]
        public string? RiskGroupId { get; set; }= default!;
    
        /// <summary>The identifier of the underlying Entity/Company/Branch.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("businessUnit")]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        public string? BusinessUnit { get; set; }= default!;
    
        /// <summary>Defines the limit type for the trade</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitType")]
        [System.ComponentModel.DataAnnotations.StringLength(9)]
        public string? LimitType { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous 
    {
        /// <summary>It is a date on/upon which an account is considered to take effect</summary>
        [System.Text.Json.Serialization.JsonPropertyName("arrangementEffectiveDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? ArrangementEffectiveDate { get; set; }= default!;
    
        /// <summary>Contains the limit schedule amount of the given arrangement  upto the dates specified</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitSchedule")]
        public double? LimitSchedule { get; set; }= default!;
    
        /// <summary>Contains the consolidated drawings cashflow amount of the given arrangement with all respective drawings.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("consolDrawingsCashflow")]
        public double? ConsolDrawingsCashflow { get; set; }= default!;
    
        /// <summary>Contains the consolidated limit cashflow amount of the given facility arrangement upto the dates specified</summary>
        [System.Text.Json.Serialization.JsonPropertyName("consolLimitCashflow")]
        public double? ConsolLimitCashflow { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Audit2 
    {
        /// <summary>Time taken to response by T24</summary>
        [System.Text.Json.Serialization.JsonPropertyName("T24_time")]
        public int? T24_time { get; set; }= default!;
    
        /// <summary>The CURR.NO. of the record</summary>
        [System.Text.Json.Serialization.JsonPropertyName("versionNumber")]
        public string? VersionNumber { get; set; }= default!;
    
        /// <summary>Time taken to parse the request by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("requestParse_time")]
        public double? RequestParse_time { get; set; }= default!;
    
        /// <summary>Time taken to parse the response by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("responseParse_time")]
        public double? ResponseParse_time { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous2 
    {
        [System.Text.Json.Serialization.JsonPropertyName("idlDetails")]
        public System.Collections.Generic.ICollection<IdlDetails>? IdlDetails { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("relatedCustomerDetails")]
        public System.Collections.Generic.ICollection<RelatedCustomerDetails>? RelatedCustomerDetails { get; set; }= default!;
    
        /// <summary>Relation code that exists between the main customer and the aggregated customers</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitNotes")]
        public System.Collections.Generic.ICollection<LimitNotes>? LimitNotes { get; set; }= default!;
    
        /// <summary>Identifier of the sub group within a CUSTOMER.GROUP that constitues one or more related customers which would be used while arrivnig collective risk exposure of credit line liable to them either individually or shared among them.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("subGroups")]
        public System.Collections.Generic.ICollection<SubGroups>? SubGroups { get; set; }= default!;
    
        /// <summary>Limit reference of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerLimitId")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? CustomerLimitId { get; set; }= default!;
    
        /// <summary>Identifier of the CUSTOMER.GROUP that constitutes one or more related customers which would be used while arrivnig collective risk exposure of credit line liable to them either individually or shared among them.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("riskGroupId")]
        [System.ComponentModel.DataAnnotations.Range(double.MinValue, 35D)]
        public double? RiskGroupId { get; set; }= default!;
    
        /// <summary>Identifier of the Liability Customer to the credit limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("liabilityNumber")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? LiabilityNumber { get; set; }= default!;
    
        /// <summary>The identifier of credit limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? LimitId { get; set; }= default!;
    
        /// <summary>Details of the top most parent credit line plus the limit product in the hierarchy. Eg : 300/LI1701101987 where 300 is the limit product of the topmost parent and second part is the respective creditline</summary>
        [System.Text.Json.Serialization.JsonPropertyName("creditLineNumber")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? CreditLineNumber { get; set; }= default!;
    
        /// <summary>Identifier of the immediate parent limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("recordParent")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? RecordParent { get; set; }= default!;
    
        /// <summary>Identifier of the credit limit product</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitProduct")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? LimitProduct { get; set; }= default!;
    
        /// <summary>Display Name of Limit product</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitReferenceDisplayName")]
        public string? LimitReferenceDisplayName { get; set; }= default!;
    
        /// <summary>Display Short Name of Limit product</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitProductName")]
        public string? LimitProductName { get; set; }= default!;
    
        /// <summary>A sequence reference for the limit, which when used together with other fields such as Liability Number and/or Limit Reference, provides a unique identifier for a credit line</summary>
        [System.Text.Json.Serialization.JsonPropertyName("serialNumber")]
        [System.ComponentModel.DataAnnotations.Range(double.MinValue, 35D)]
        public double? SerialNumber { get; set; }= default!;
    
        /// <summary>Currency in which the credit limit is granted</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitCurrency")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? LimitCurrency { get; set; }= default!;
    
        /// <summary>The identifier of the underlying Entity/Company/Branch.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("businessUnit")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? BusinessUnit { get; set; }= default!;
    
        /// <summary>The date an agreement such as an arrangement, product, credit facility or limit is due to expire</summary>
        [System.Text.Json.Serialization.JsonPropertyName("expiryDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? ExpiryDate { get; set; }= default!;
    
        /// <summary>Description of the individual time code under a credit facility</summary>
        [System.Text.Json.Serialization.JsonPropertyName("timeBandName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? TimeBandName { get; set; }= default!;
    
        /// <summary>Indicates the amount allocated to the Credit Limit by the Bank</summary>
        [System.Text.Json.Serialization.JsonPropertyName("internalAmount")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? InternalAmount { get; set; }= default!;
    
        /// <summary>Indicates the amount advised to the Credit Limit by the bank</summary>
        [System.Text.Json.Serialization.JsonPropertyName("advisedAmount")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? AdvisedAmount { get; set; }= default!;
    
        /// <summary>Contains the aggregate outstanding principal amount thereof after giving effect to any borrowings and prepayments or repayments of Committed Loans</summary>
        [System.Text.Json.Serialization.JsonPropertyName("outstandingAmount")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? OutstandingAmount { get; set; }= default!;
    
        /// <summary>The credit limit available to the customer for use</summary>
        [System.Text.Json.Serialization.JsonPropertyName("availableAmount")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? AvailableAmount { get; set; }= default!;
    
        /// <summary>The available amount for the corresponding liability number and limit reference. This amount is always expressed in the currency of the limit. Calculated as the sum of the online limit, the available balance and any sub allocation taken, less any sub allocation given, any commission available, the total outstanding.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("availableOrExcess")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? AvailableOrExcess { get; set; }= default!;
    
        /// <summary>Specifies the total available commitment amounts  specific to a credit facility</summary>
        [System.Text.Json.Serialization.JsonPropertyName("totalCommitment")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? TotalCommitment { get; set; }= default!;
    
        /// <summary>Indicates the total credit balance of the customer's account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("totalCredit")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? TotalCredit { get; set; }= default!;
    
        /// <summary>Indicates the total debit balance of the customer's account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("totalDebit")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? TotalDebit { get; set; }= default!;
    
        /// <summary>The currency the amount is requested in.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("requestedCurrency")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? RequestedCurrency { get; set; }= default!;
    
        /// <summary>Contains the exchange rate returned from the system. i.e. For entries over foreign currency accounts, this contains the rate which used to convert the currency amount to the local equivalent at the time of the originating transaction.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("exchangeRate")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? ExchangeRate { get; set; }= default!;
    
        /// <summary>Defines the limit type for the trade</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitType")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? LimitType { get; set; }= default!;
    
        /// <summary>Identifies if there is a joint liability on the limit record Allowed values: -YES -NO  </summary>
        [System.Text.Json.Serialization.JsonPropertyName("jointLiability")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? JointLiability { get; set; }= default!;
    
        /// <summary>Indicates whether the credit line is of shared limit structure</summary>
        [System.Text.Json.Serialization.JsonPropertyName("sharedLimit")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? SharedLimit { get; set; }= default!;
    
        /// <summary>Indicates to adjust the available funds to respective time bands.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("adjustAvailableAmount")]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public string? AdjustAvailableAmount { get; set; }= default!;
    
        /// <summary>Indicates to rebuild the customer exposure when enquired by user.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("rebuildData")]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public string? RebuildData { get; set; }= default!;
    
        /// <summary>Id of the T24 session where the risk exposure view executed</summary>
        [System.Text.Json.Serialization.JsonPropertyName("sessionId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? SessionId { get; set; }= default!;
    
        /// <summary>Specifies the orignal amount actually approved or authorised on a credit line by Management or the Credit Committee before any repayment made</summary>
        [System.Text.Json.Serialization.JsonPropertyName("originalInternalAmount")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? OriginalInternalAmount { get; set; }= default!;
    
        /// <summary>Specifies the original amount advised to the customer holding the credit facility before any repayment made</summary>
        [System.Text.Json.Serialization.JsonPropertyName("originalAdvisedAmount")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? OriginalAdvisedAmount { get; set; }= default!;
    
        /// <summary>Indicates the amount which was repaid from the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("repaidAmount")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? RepaidAmount { get; set; }= default!;
    
        /// <summary>Total of the repaid amount under a credit facility</summary>
        [System.Text.Json.Serialization.JsonPropertyName("totalRepaidAmount")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? TotalRepaidAmount { get; set; }= default!;
    
        /// <summary>Flag to indicate the credit line has been over utilised</summary>
        [System.Text.Json.Serialization.JsonPropertyName("excessFlag")]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public string? ExcessFlag { get; set; }= default!;
    
        /// <summary>Indicates the secured nature of limit that has been covered by a customer collateral. When FIXED the limit amount sanctioned will not have impact on changing value of collateral whereas when VARIABLE limit amount will change based on the collateral amount changes</summary>
        [System.Text.Json.Serialization.JsonPropertyName("fixedOrVariable")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? FixedOrVariable { get; set; }= default!;
    
        /// <summary>The total amount that has been covered by the collateral underlying the credit facility</summary>
        [System.Text.Json.Serialization.JsonPropertyName("securedAmount")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? SecuredAmount { get; set; }= default!;
    
        /// <summary>Specifies if a credit facility shall be used by multiple customers</summary>
        [System.Text.Json.Serialization.JsonPropertyName("multiCustomerLimit")]
        public bool? MultiCustomerLimit { get; set; }= default!;
    
        /// <summary>Classify the type of group, whether it is a CUSTOMER.GROUP or SUB.GROUP</summary>
        [System.Text.Json.Serialization.JsonPropertyName("groupClass")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? GroupClass { get; set; }= default!;
    
        /// <summary>Indicates if there exists aggregation of one or many customer exposure under a primary customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("isAggregationExists")]
        public bool? IsAggregationExists { get; set; }= default!;
    
        /// <summary>Identifier of the main group under which the sub group has been defined</summary>
        [System.Text.Json.Serialization.JsonPropertyName("mainGroupId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? MainGroupId { get; set; }= default!;
    
        /// <summary>Identifier of the limit product of the topmost credit facility in the hierarchy</summary>
        [System.Text.Json.Serialization.JsonPropertyName("creditLineProduct")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? CreditLineProduct { get; set; }= default!;
    
        /// <summary>Indicator which specifies the graphical view of risk exposure report requested</summary>
        [System.Text.Json.Serialization.JsonPropertyName("gvIndicator")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? GvIndicator { get; set; }= default!;
    
        /// <summary>The Limit amount that is actually available for use.The system limit checks are performed against the online limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("onlineLimit")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? OnlineLimit { get; set; }= default!;
    
        /// <summary>Account officer who is allocated the responsibility of maintaining the customer group</summary>
        [System.Text.Json.Serialization.JsonPropertyName("groupAccountOfficer")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? GroupAccountOfficer { get; set; }= default!;
    
        /// <summary>Identifier of the Company where the customer group resides</summary>
        [System.Text.Json.Serialization.JsonPropertyName("groupCompanyId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? GroupCompanyId { get; set; }= default!;
    
        /// <summary>The name that is displayed for the group</summary>
        [System.Text.Json.Serialization.JsonPropertyName("groupName")]
        [System.ComponentModel.DataAnnotations.StringLength(40)]
        public string? GroupName { get; set; }= default!;
    
        /// <summary>Name of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerName")]
        public string? CustomerName { get; set; }= default!;
    
        /// <summary>The product condition has an activity type associated that drives an action.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.StringLength(15)]
        public string? Type { get; set; }= default!;
    
        /// <summary>Indicates the total of the customer's account balance</summary>
        [System.Text.Json.Serialization.JsonPropertyName("deposits")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? Deposits { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous3 
    {
        /// <summary>Indicates the details of Relationship maintained by the Customer or Entity</summary>
        [System.Text.Json.Serialization.JsonPropertyName("relationshipDetails")]
        public System.Collections.Generic.ICollection<RelationshipDetails>? RelationshipDetails { get; set; }= default!;
    
        /// <summary>Identifier of the CUSTOMER.GROUP that constitues one or more related customers which would be used while arrivnig collective risk exposure of credit line liable to them either individually or shared among them</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerGroupId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? CustomerGroupId { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous4 
    {
        /// <summary>The identifier of credit limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitId")]
        [System.ComponentModel.DataAnnotations.StringLength(32)]
        public string? LimitId { get; set; }= default!;
    
        /// <summary>Identifier of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerId")]
        public string? CustomerId { get; set; }= default!;
    
        /// <summary>Name of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerName")]
        public string? CustomerName { get; set; }= default!;
    
        /// <summary>Currency in which the credit limit is granted</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitCurrency")]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public string? LimitCurrency { get; set; }= default!;
    
        /// <summary>Identifies the credit limit reference for the underlying account.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitReference")]
        [System.ComponentModel.DataAnnotations.Range(double.MinValue, 7D)]
        public double? LimitReference { get; set; }= default!;
    
        /// <summary>Display Name of Limit product</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitReferenceDisplayName")]
        [System.ComponentModel.DataAnnotations.StringLength(7)]
        public string? LimitReferenceDisplayName { get; set; }= default!;
    
        /// <summary>The Limit amount that is actually available for use. The system limit checks are preformed against the online limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitAmount")]
        public double? LimitAmount { get; set; }= default!;
    
        /// <summary>Contains the aggregate outstanding principal amount thereof after giving effect to any borrowings and prepayments or repayments of Committed Loans</summary>
        [System.Text.Json.Serialization.JsonPropertyName("outstandingAmount")]
        public double? OutstandingAmount { get; set; }= default!;
    
        /// <summary>The available amount for the corresponding liability number and limit reference. This amount is always expressed in the currency of the limit. Calculated as the sum of the online limit, the available balance and any sub allocation taken, less any sub allocation given, any commission available, the total outstanding.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("availableOrExcess")]
        public double? AvailableOrExcess { get; set; }= default!;
    
        /// <summary>This  account will be used to drive the overdrawn processing, when there are more than one account attached in limit.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("outstandingConditionAccount")]
        [System.ComponentModel.DataAnnotations.StringLength(16)]
        public string? OutstandingConditionAccount { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous5 
    {
        /// <summary>Identifies the Usable or Available Amount in the expiring Credit Limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("expireLimitAmounts")]
        public System.Collections.Generic.ICollection<ExpireLimitAmounts>? ExpireLimitAmounts { get; set; }= default!;
    
        /// <summary>Identifies the credit limit reference for the underlying account.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitReference")]
        [System.ComponentModel.DataAnnotations.StringLength(32)]
        public string? LimitReference { get; set; }= default!;
    
        /// <summary>Identifier of the Liability Customer to the credit limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("liabilityNumber")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? LiabilityNumber { get; set; }= default!;
    
        /// <summary>Name of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerName")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? CustomerName { get; set; }= default!;
    
        /// <summary>Currency in which the credit limit is granted</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitCurrency")]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public string? LimitCurrency { get; set; }= default!;
    
        /// <summary>Indicates the amount allocated to the Credit Limit by the Bank</summary>
        [System.Text.Json.Serialization.JsonPropertyName("internalAmount")]
        [System.ComponentModel.DataAnnotations.Range(double.MinValue, 19D)]
        public double? InternalAmount { get; set; }= default!;
    
        /// <summary>The date an agreement such as an arrangement, product, credit facility or limit is due to expire</summary>
        [System.Text.Json.Serialization.JsonPropertyName("expiryDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? ExpiryDate { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous6 
    {
        /// <summary>Display Name of Limit product</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitSubType")]
        public string? LimitSubType { get; set; }= default!;
    
        /// <summary>A sequence reference for the limit, which when used together with other fields such as Liability Number and/or Limit Reference, provides a unique identifier for a credit line</summary>
        [System.Text.Json.Serialization.JsonPropertyName("serialNumber")]
        [System.ComponentModel.DataAnnotations.StringLength(32)]
        public string? SerialNumber { get; set; }= default!;
    
        /// <summary>Currency in which the credit limit is granted</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitCurrency")]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public string? LimitCurrency { get; set; }= default!;
    
        /// <summary>The Limit amount that is actually available for use. The system limit checks are preformed against the online limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitAmount")]
        [System.ComponentModel.DataAnnotations.Range(double.MinValue, 20D)]
        public double? LimitAmount { get; set; }= default!;
    
        /// <summary>Contains the aggregate outstanding principal amount thereof after giving effect to any borrowings and prepayments or repayments of Committed Loans</summary>
        [System.Text.Json.Serialization.JsonPropertyName("outstandingAmount")]
        [System.ComponentModel.DataAnnotations.Range(double.MinValue, 20D)]
        public double? OutstandingAmount { get; set; }= default!;
    
        /// <summary>The available amount for the corresponding liability number and limit reference. This amount is always expressed in the currency of the limit. Calculated as the sum of the online limit, the available balance and any sub allocation taken, less any sub allocation given, any commission available, the total outstanding.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("availableOrExcess")]
        [System.ComponentModel.DataAnnotations.Range(double.MinValue, 20D)]
        public double? AvailableOrExcess { get; set; }= default!;
    
        /// <summary>The date an agreement such as an arrangement, product, credit facility or limit is due to expire</summary>
        [System.Text.Json.Serialization.JsonPropertyName("expiryDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? ExpiryDate { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous7 
    {
        /// <summary>Identifier of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerId")]
        [System.ComponentModel.DataAnnotations.Range(double.MinValue, 10D)]
        public double? CustomerId { get; set; }= default!;
    
        /// <summary>Unique ID of the group</summary>
        [System.Text.Json.Serialization.JsonPropertyName("groupId")]
        [System.ComponentModel.DataAnnotations.Range(double.MinValue, 7D)]
        public double? GroupId { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous8 
    {
        /// <summary>The identifier of credit limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitId")]
        [System.ComponentModel.DataAnnotations.StringLength(21)]
        public string? LimitId { get; set; }= default!;
    
        /// <summary>Identifies the transaction reference of the Deal</summary>
        [System.Text.Json.Serialization.JsonPropertyName("dealReference")]
        [System.ComponentModel.DataAnnotations.StringLength(40)]
        public string? DealReference { get; set; }= default!;
    
        /// <summary>Identifies the transaction currency involved in the Deal</summary>
        [System.Text.Json.Serialization.JsonPropertyName("dealCurrency")]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public string? DealCurrency { get; set; }= default!;
    
        /// <summary>Identifies the transaction amount involved in the Deal</summary>
        [System.Text.Json.Serialization.JsonPropertyName("dealAmount")]
        [System.ComponentModel.DataAnnotations.Range(double.MinValue, 19D)]
        public double? DealAmount { get; set; }= default!;
    
        /// <summary>Indicates the current overdrawn amount associated to the account/limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("overdrawnAmount")]
        [System.ComponentModel.DataAnnotations.Range(double.MinValue, 19D)]
        public double? OverdrawnAmount { get; set; }= default!;
    
        /// <summary>The identifier of credit limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitKey")]
        [System.ComponentModel.DataAnnotations.StringLength(32)]
        public string? LimitKey { get; set; }= default!;
    
        /// <summary>The Limit amount that is actually available for use. The system limit checks are preformed against the online limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitAmount")]
        [System.ComponentModel.DataAnnotations.Range(double.MinValue, 19D)]
        public double? LimitAmount { get; set; }= default!;
    
        /// <summary>Unique ID of the group</summary>
        [System.Text.Json.Serialization.JsonPropertyName("groupId")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? GroupId { get; set; }= default!;
    
        /// <summary>Identifies the currency of the Limit under the Limit sharing group</summary>
        [System.Text.Json.Serialization.JsonPropertyName("groupCurrency")]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public string? GroupCurrency { get; set; }= default!;
    
        /// <summary>The total amount allocated for different deals under the limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("totalAllocation")]
        [System.ComponentModel.DataAnnotations.Range(double.MinValue, 19D)]
        public double? TotalAllocation { get; set; }= default!;
    
        /// <summary>Excess amount that are made as commitments under the Deal using the Group Limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("commitOverdrawnAmount")]
        [System.ComponentModel.DataAnnotations.Range(double.MinValue, 19D)]
        public double? CommitOverdrawnAmount { get; set; }= default!;
    
        /// <summary>Allocated Group limit amount for the commitments under the Deal</summary>
        [System.Text.Json.Serialization.JsonPropertyName("commitAmountAlloc")]
        [System.ComponentModel.DataAnnotations.Range(double.MinValue, 19D)]
        public double? CommitAmountAlloc { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous9 
    {
        /// <summary>Automatically updated by system during authorization with the master group key in which the sharing group key is linked. It will be updated only for the Main group and not for the sub groups.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("masterGroupKeys")]
        public System.Collections.Generic.ICollection<MasterGroupKeys>? MasterGroupKeys { get; set; }= default!;
    
        /// <summary>Customers who are part of Limit sharing Group.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("allowedCustomers")]
        public System.Collections.Generic.ICollection<AllowedCustomers>? AllowedCustomers { get; set; }= default!;
    
        /// <summary>Customer's Limit Sharing Priority to the Group</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerPriorities")]
        public System.Collections.Generic.ICollection<CustomerPriorities>? CustomerPriorities { get; set; }= default!;
    
        /// <summary>Unique ID of the group</summary>
        [System.Text.Json.Serialization.JsonPropertyName("groupId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? GroupId { get; set; }= default!;
    
        /// <summary>whether the group sharing limit is single credit line or not</summary>
        [System.Text.Json.Serialization.JsonPropertyName("isSingleCreditLine")]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public string? IsSingleCreditLine { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous10 
    {
        /// <summary>Contains the identifier for the transaction in the core system</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionReference")]
        public string? TransactionReference { get; set; }= default!;
    
        /// <summary>ISO Currency code for the bought currency.  </summary>
        [System.Text.Json.Serialization.JsonPropertyName("buyCurrency")]
        public string? BuyCurrency { get; set; }= default!;
    
        /// <summary>Amount bought in the FX deal.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("buyAmount")]
        [System.ComponentModel.DataAnnotations.StringLength(18)]
        public string? BuyAmount { get; set; }= default!;
    
        /// <summary>ISO Currency code for the sold currency.  </summary>
        [System.Text.Json.Serialization.JsonPropertyName("sellCurrency")]
        public string? SellCurrency { get; set; }= default!;
    
        /// <summary>Amount sold in the FX deal.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("sellAmount")]
        [System.ComponentModel.DataAnnotations.StringLength(18)]
        public string? SellAmount { get; set; }= default!;
    
        /// <summary>Indicates the date on which activity was performed</summary>
        [System.Text.Json.Serialization.JsonPropertyName("date")]
        [System.ComponentModel.DataAnnotations.StringLength(44)]
        public string? Date { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Audit3 
    {
        /// <summary>Time taken to response by T24</summary>
        [System.Text.Json.Serialization.JsonPropertyName("T24_time")]
        public int? T24_time { get; set; }= default!;
    
        /// <summary>The CURR.NO. of the record</summary>
        [System.Text.Json.Serialization.JsonPropertyName("versionNumber")]
        public string? VersionNumber { get; set; }= default!;
    
        /// <summary>Time taken to parse the request by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("requestParse_time")]
        public double? RequestParse_time { get; set; }= default!;
    
        /// <summary>Time taken to parse the response by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("responseParse_time")]
        public double? ResponseParse_time { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Data 
    {
        /// <summary>Identifier of the credit limit product</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitProduct")]
        public string? LimitProduct { get; set; }= default!;
    
        /// <summary>Identifier of the Liability Customer to the credit limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("liabilityNumber")]
        public string? LiabilityNumber { get; set; }= default!;
    
        /// <summary>Display Name of the Liability Customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("liabilityName")]
        public string? LiabilityName { get; set; }= default!;
    
        /// <summary>Name of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerName")]
        public string? CustomerName { get; set; }= default!;
    
        /// <summary>Identifies the currency. E.g. USD, GBP etc</summary>
        [System.Text.Json.Serialization.JsonPropertyName("currency")]
        public string? Currency { get; set; }= default!;
    
        /// <summary>The Limit amount that is actually available for use. The system limit checks are preformed against the online limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitAmount")]
        [System.ComponentModel.DataAnnotations.StringLength(11)]
        public string? LimitAmount { get; set; }= default!;
    
        /// <summary>Clean risk or delivery risk, i.e. non-netted total value of forex trades maturing on any single day</summary>
        [System.Text.Json.Serialization.JsonPropertyName("cleanRisk")]
        [System.ComponentModel.DataAnnotations.StringLength(11)]
        public string? CleanRisk { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous11 
    {
        /// <summary>Indicates the date on which activity was performed</summary>
        [System.Text.Json.Serialization.JsonPropertyName("date")]
        [System.ComponentModel.DataAnnotations.StringLength(19)]
        public string? Date { get; set; }= default!;
    
        /// <summary>This is the payment amount</summary>
        [System.Text.Json.Serialization.JsonPropertyName("amount")]
        [System.ComponentModel.DataAnnotations.StringLength(20)]
        public string? Amount { get; set; }= default!;
    
        /// <summary>Total amount</summary>
        [System.Text.Json.Serialization.JsonPropertyName("totalAmount")]
        [System.ComponentModel.DataAnnotations.StringLength(20)]
        public string? TotalAmount { get; set; }= default!;
    
        /// <summary>An indicator to show that a credit limit has been exceeded</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitExcess")]
        public string? LimitExcess { get; set; }= default!;
    
        /// <summary>Excess amount over and above the allowed limit.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("riskExcess")]
        public string? RiskExcess { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous12 
    {
        /// <summary>Customers who are part of Limit sharing Group.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("allowedCustomers")]
        public System.Collections.Generic.ICollection<AllowedCustomers2>? AllowedCustomers { get; set; }= default!;
    
        /// <summary>Product or products allowed to be used within the product bundle.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("allowedProducts")]
        public System.Collections.Generic.ICollection<AllowedProducts>? AllowedProducts { get; set; }= default!;
    
        /// <summary>Unique ID of the group</summary>
        [System.Text.Json.Serialization.JsonPropertyName("groupId")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? GroupId { get; set; }= default!;
    
        /// <summary>Description of the Limit Sharing Group</summary>
        [System.Text.Json.Serialization.JsonPropertyName("groupIdDisplayName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? GroupIdDisplayName { get; set; }= default!;
    
        /// <summary>Identifier of the credit limit product</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitProduct")]
        [System.ComponentModel.DataAnnotations.StringLength(7)]
        public string? LimitProduct { get; set; }= default!;
    
        /// <summary>Used for sub groups to create a hierarchy with main group. It is not required for Main groups and is mandatory for sub groups.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("parentGroup")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? ParentGroup { get; set; }= default!;
    
        /// <summary>Serial number of credit limit of the Single Line limit sharing group</summary>
        [System.Text.Json.Serialization.JsonPropertyName("singleLineSerialNumber")]
        [System.ComponentModel.DataAnnotations.StringLength(2)]
        public string? SingleLineSerialNumber { get; set; }= default!;
    
        /// <summary>Automatically updated by system during authorization with the master group key in which the sharing group key is linked. It will be updated only for the Main group and not for the sub groups.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("masterGroupKey")]
        [System.ComponentModel.DataAnnotations.StringLength(5)]
        public string? MasterGroupKey { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous13 
    {
        /// <summary>Identifier of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerId")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? CustomerId { get; set; }= default!;
    
        /// <summary>Defines the Campaign priority</summary>
        [System.Text.Json.Serialization.JsonPropertyName("priority")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? Priority { get; set; }= default!;
    
        /// <summary>Customer's Limit Sharing Priority to the Group</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerPriority")]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public string? CustomerPriority { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous14 
    {
        [System.Text.Json.Serialization.JsonPropertyName("allowedCustomerList")]
        public System.Collections.Generic.ICollection<AllowedCustomerList>? AllowedCustomerList { get; set; }= default!;
    
        /// <summary>Unique ID of the group</summary>
        [System.Text.Json.Serialization.JsonPropertyName("groupId")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? GroupId { get; set; }= default!;
    
        /// <summary>Identifier of the Limit Sharing Sub Group</summary>
        [System.Text.Json.Serialization.JsonPropertyName("subGroupId")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? SubGroupId { get; set; }= default!;
    
        /// <summary>Indicates the title of the Limit Sharing Sub Group</summary>
        [System.Text.Json.Serialization.JsonPropertyName("subGroupDisplayName")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? SubGroupDisplayName { get; set; }= default!;
    
        /// <summary>Identifier of the credit limit product</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitProduct")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? LimitProduct { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous15 
    {
        /// <summary>Display Name of Limit product</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitName")]
        public string? LimitName { get; set; }= default!;
    
        /// <summary>A sequence reference for the limit, which when used together with other fields such as Liability Number and/or Limit Reference, provides a unique identifier for a credit line</summary>
        [System.Text.Json.Serialization.JsonPropertyName("serialNumber")]
        public string? SerialNumber { get; set; }= default!;
    
        /// <summary>Currency in which the credit limit is granted</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitCurrency")]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public string? LimitCurrency { get; set; }= default!;
    
        /// <summary>The Limit amount that is actually available for use. The system limit checks are preformed against the online limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitAmount")]
        public double? LimitAmount { get; set; }= default!;
    
        /// <summary>Contains the aggregate outstanding principal amount thereof after giving effect to any borrowings and prepayments or repayments of Committed Loans</summary>
        [System.Text.Json.Serialization.JsonPropertyName("outstandingAmount")]
        public double? OutstandingAmount { get; set; }= default!;
    
        /// <summary>The available amount for the corresponding liability number and limit reference. This amount is always expressed in the currency of the limit. Calculated as the sum of the online limit, the available balance and any sub allocation taken, less any sub allocation given, any commission available, the total outstanding.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("availableOrExcess")]
        public double? AvailableOrExcess { get; set; }= default!;
    
        /// <summary>The date an agreement such as an arrangement, product, credit facility or limit is due to expire</summary>
        [System.Text.Json.Serialization.JsonPropertyName("expiryDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? ExpiryDate { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous16 
    {
        /// <summary>The identifier of credit limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitId")]
        [System.ComponentModel.DataAnnotations.StringLength(32)]
        public string? LimitId { get; set; }= default!;
    
        /// <summary>Name of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerName")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? CustomerName { get; set; }= default!;
    
        /// <summary>Indicates the date on which the overdraw/excess first occurred</summary>
        [System.Text.Json.Serialization.JsonPropertyName("firstOverdrawnDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? FirstOverdrawnDate { get; set; }= default!;
    
        /// <summary>Indicates the date on which last movement occurred in the overdrawn account/limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("lastMvmtDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? LastMvmtDate { get; set; }= default!;
    
        /// <summary>Indicates the amount that was last moved in the overdrawn account/limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("previousOutstanding")]
        public double? PreviousOutstanding { get; set; }= default!;
    
        /// <summary>Indicates the current outstanding amount of the bill</summary>
        [System.Text.Json.Serialization.JsonPropertyName("currentOutstanding")]
        [System.ComponentModel.DataAnnotations.Range(double.MinValue, 19D)]
        public double? CurrentOutstanding { get; set; }= default!;
    
        /// <summary>An indicator to show that a credit limit has been exceeded</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitExcess")]
        [System.ComponentModel.DataAnnotations.Range(double.MinValue, 32D)]
        public double? LimitExcess { get; set; }= default!;
    
        /// <summary>Indicates the action of the last movement occurred in the overdrawn account/Limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("excessNarrative")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? ExcessNarrative { get; set; }= default!;
    
        /// <summary>Indicates whether there is any change in the overdrawn status</summary>
        [System.Text.Json.Serialization.JsonPropertyName("movedNarrative")]
        [System.ComponentModel.DataAnnotations.StringLength(9)]
        public string? MovedNarrative { get; set; }= default!;
    
        /// <summary>Indicates the current overdraft status of the Account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("currentOdStatus")]
        [System.ComponentModel.DataAnnotations.StringLength(4)]
        public string? CurrentOdStatus { get; set; }= default!;
    
        /// <summary>Indicates the previous overdraft status of the Account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("previousOdStatus")]
        [System.ComponentModel.DataAnnotations.StringLength(4)]
        public string? PreviousOdStatus { get; set; }= default!;
    
        /// <summary>Indicates the date when the overdraft status is changed</summary>
        [System.Text.Json.Serialization.JsonPropertyName("statusChangeOn")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? StatusChangeOn { get; set; }= default!;
    
        /// <summary>Indicates the date when the current Overdraft Status is started</summary>
        [System.Text.Json.Serialization.JsonPropertyName("currentOdStartDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? CurrentOdStartDate { get; set; }= default!;
    
        /// <summary>Indicates the number of days account is continuously in Overdraft</summary>
        [System.Text.Json.Serialization.JsonPropertyName("currentOdDays")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? CurrentOdDays { get; set; }= default!;
    
        /// <summary>Indicates the current overdrawn amount associated to the account/limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("overdrawnAmount")]
        [System.ComponentModel.DataAnnotations.Range(double.MinValue, 19D)]
        public double? OverdrawnAmount { get; set; }= default!;
    
        /// <summary>Indicates the threshold amount defined in account/limit beyond which is considered to overdraft/breach</summary>
        [System.Text.Json.Serialization.JsonPropertyName("thresholdAmount")]
        [System.ComponentModel.DataAnnotations.Range(double.MinValue, 11D)]
        public double? ThresholdAmount { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous17 
    {
        /// <summary>Identifies the credit limit reference for the underlying account.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitReference")]
        [System.ComponentModel.DataAnnotations.StringLength(32)]
        public string? LimitReference { get; set; }= default!;
    
        /// <summary>Identifier of the Liability Customer to the credit limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("liabilityNumber")]
        [System.ComponentModel.DataAnnotations.Range(double.MinValue, 10D)]
        public double? LiabilityNumber { get; set; }= default!;
    
        /// <summary>Name of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerName")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? CustomerName { get; set; }= default!;
    
        /// <summary>Currency in which the credit limit is granted</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitCurrency")]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public string? LimitCurrency { get; set; }= default!;
    
        /// <summary>Indicates the amount allocated to the Credit Limit by the Bank</summary>
        [System.Text.Json.Serialization.JsonPropertyName("internalAmount")]
        [System.ComponentModel.DataAnnotations.Range(double.MinValue, 19D)]
        public double? InternalAmount { get; set; }= default!;
    
        /// <summary>Indicates the amount advised to the Credit Limit by the bank</summary>
        [System.Text.Json.Serialization.JsonPropertyName("advisedAmount")]
        [System.ComponentModel.DataAnnotations.Range(double.MinValue, 19D)]
        public double? AdvisedAmount { get; set; }= default!;
    
        /// <summary>Specifies the next date on which the limit is reviewed</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitReviewDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? LimitReviewDate { get; set; }= default!;
    
        /// <summary>The date an agreement such as an arrangement, product, credit facility or limit is due to expire</summary>
        [System.Text.Json.Serialization.JsonPropertyName("expiryDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? ExpiryDate { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Audit4 
    {
        /// <summary>Time taken to response by T24</summary>
        [System.Text.Json.Serialization.JsonPropertyName("T24_time")]
        public int? T24_time { get; set; }= default!;
    
        /// <summary>The CURR.NO. of the record</summary>
        [System.Text.Json.Serialization.JsonPropertyName("versionNumber")]
        public string? VersionNumber { get; set; }= default!;
    
        /// <summary>Time taken to parse the request by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("requestParse_time")]
        public double? RequestParse_time { get; set; }= default!;
    
        /// <summary>Time taken to parse the response by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("responseParse_time")]
        public double? ResponseParse_time { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Data2 
    {
        [System.Text.Json.Serialization.JsonPropertyName("ZERORECORDS")]
        public string? ZERORECORDS { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous18 
    {
        /// <summary>Indicates the unique combinations of Category limit , sub category limit and Tenor</summary>
        [System.Text.Json.Serialization.JsonPropertyName("totalUniqueRow")]
        public string? TotalUniqueRow { get; set; }= default!;
    
        /// <summary>Flag to indicate unique row</summary>
        [System.Text.Json.Serialization.JsonPropertyName("uniqueFlag")]
        public string? UniqueFlag { get; set; }= default!;
    
        /// <summary>Identifier of the credit limit product</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitProduct")]
        public string? LimitProduct { get; set; }= default!;
    
        /// <summary>Indicates the description of the Product</summary>
        [System.Text.Json.Serialization.JsonPropertyName("productDescription")]
        public string? ProductDescription { get; set; }= default!;
    
        /// <summary>Specifies the sub category limit product</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitSubProduct")]
        public string? LimitSubProduct { get; set; }= default!;
    
        /// <summary>Specifies the product description of the sub category limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("subProductDescription")]
        public string? SubProductDescription { get; set; }= default!;
    
        /// <summary>Specifies time sub-divisions of a Limit, each of which is available for a different maturity period</summary>
        [System.Text.Json.Serialization.JsonPropertyName("timeCode")]
        public string? TimeCode { get; set; }= default!;
    
        /// <summary>Description of the individual time code under a credit facility</summary>
        [System.Text.Json.Serialization.JsonPropertyName("timeBandName")]
        public string? TimeBandName { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous19 
    {
        [System.Text.Json.Serialization.JsonPropertyName("subGroupInfo")]
        public System.Collections.Generic.ICollection<SubGroupInfo>? SubGroupInfo { get; set; }= default!;
    
        /// <summary>Identifier of the CUSTOMER.GROUP that constitutes one or more related customers which would be used while arrivnig collective risk exposure of credit line liable to them either individually or shared among them.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("riskGroupId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? RiskGroupId { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Audit5 
    {
        /// <summary>Time taken to response by T24</summary>
        [System.Text.Json.Serialization.JsonPropertyName("T24_time")]
        public int? T24_time { get; set; }= default!;
    
        /// <summary>The CURR.NO. of the record</summary>
        [System.Text.Json.Serialization.JsonPropertyName("versionNumber")]
        public string? VersionNumber { get; set; }= default!;
    
        /// <summary>Time taken to parse the request by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("requestParse_time")]
        public double? RequestParse_time { get; set; }= default!;
    
        /// <summary>Time taken to parse the response by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("responseParse_time")]
        public double? ResponseParse_time { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Data3 
    {
        [System.Text.Json.Serialization.JsonPropertyName("ZERORECORDS")]
        public string? ZERORECORDS { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous20 
    {
        [System.Text.Json.Serialization.JsonPropertyName("subLimitInfo")]
        public System.Collections.Generic.ICollection<SubLimitInfo>? SubLimitInfo { get; set; }= default!;
    
        /// <summary>The identifier of credit limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitId")]
        public string? LimitId { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous21 
    {
        /// <summary>The identifier of credit limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitId")]
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        public string? LimitId { get; set; }= default!;
    
        /// <summary>Display Name of Limit product</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitName")]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        public string? LimitName { get; set; }= default!;
    
        /// <summary>A sequence reference for the limit, which when used together with other fields such as Liability Number and/or Limit Reference, provides a unique identifier for a credit line</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitNumber")]
        [System.ComponentModel.DataAnnotations.StringLength(2)]
        public string? LimitNumber { get; set; }= default!;
    
        /// <summary>Currency in which the credit limit is granted</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitCurrency")]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public string? LimitCurrency { get; set; }= default!;
    
        /// <summary>The Limit amount that is actually available for use.The system limit checks are performed against the online limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("onlineLimit")]
        public double? OnlineLimit { get; set; }= default!;
    
        /// <summary>Indicates the secured nature of limit that has been covered by a customer collateral. When FIXED the limit amount sanctioned will not have impact on changing value of collateral whereas when VARIABLE limit amount will change based on the collateral amount changes</summary>
        [System.Text.Json.Serialization.JsonPropertyName("fixedOrVariable")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? FixedOrVariable { get; set; }= default!;
    
        /// <summary>The total amount that has been covered by the collateral underlying the credit facility</summary>
        [System.Text.Json.Serialization.JsonPropertyName("securedAmount")]
        public double? SecuredAmount { get; set; }= default!;
    
        /// <summary>Contains the aggregate outstanding principal amount thereof after giving effect to any borrowings and prepayments or repayments of Committed Loans</summary>
        [System.Text.Json.Serialization.JsonPropertyName("outstandingAmount")]
        public double? OutstandingAmount { get; set; }= default!;
    
        /// <summary>The available amount for the corresponding liability number and limit reference. This amount is always expressed in the currency of the limit. Calculated as the sum of the online limit, the available balance and any sub allocation taken, less any sub allocation given, any commission available, the total outstanding.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("availableOrExcess")]
        public double? AvailableOrExcess { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Override 
    {
        [System.Text.Json.Serialization.JsonPropertyName("overrideDetails")]
        public System.Collections.Generic.ICollection<OverrideDetails2>? OverrideDetails { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Audit6 
    {
        /// <summary>The CURR.NO. of the record</summary>
        [System.Text.Json.Serialization.JsonPropertyName("versionNumber")]
        public string? VersionNumber { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Notes 
    {
        /// <summary>Notes to facilitate the use of the Function.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("notes")]
        [System.ComponentModel.DataAnnotations.StringLength(36)]
        public string? Notes1 { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class LimitDetails 
    {
        /// <summary>Specifies time sub-divisions of a Limit, each of which is available for a different maturity period</summary>
        [System.Text.Json.Serialization.JsonPropertyName("timeCode")]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        public string? TimeCode { get; set; }= default!;
    
        /// <summary>The Limit amount that is actually available for use.The system limit checks are performed against the online limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("onlineLimit")]
        [System.ComponentModel.DataAnnotations.StringLength(19)]
        public string? OnlineLimit { get; set; }= default!;
    
        /// <summary>Contains the aggregate outstanding principal amount thereof after giving effect to any borrowings and prepayments or repayments of Committed Loans</summary>
        [System.Text.Json.Serialization.JsonPropertyName("outstandingAmount")]
        [System.ComponentModel.DataAnnotations.StringLength(19)]
        public string? OutstandingAmount { get; set; }= default!;
    
        /// <summary>The credit limit available to the customer for use</summary>
        [System.Text.Json.Serialization.JsonPropertyName("availableAmount")]
        [System.ComponentModel.DataAnnotations.StringLength(19)]
        public string? AvailableAmount { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerIds 
    {
        /// <summary>Identifier of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerId")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? CustomerId { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Audit7 
    {
        /// <summary>Time taken to response by T24</summary>
        [System.Text.Json.Serialization.JsonPropertyName("T24_time")]
        public int? T24_time { get; set; }= default!;
    
        /// <summary>The CURR.NO. of the record</summary>
        [System.Text.Json.Serialization.JsonPropertyName("versionNumber")]
        public string? VersionNumber { get; set; }= default!;
    
        /// <summary>Time taken to parse the request by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("requestParse_time")]
        public double? RequestParse_time { get; set; }= default!;
    
        /// <summary>Time taken to parse the response by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("responseParse_time")]
        public double? ResponseParse_time { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Notes2 
    {
        /// <summary>Notes to facilitate the use of the Function.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("notes")]
        [System.ComponentModel.DataAnnotations.StringLength(36)]
        public string? Notes { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class LimitDetails2 
    {
        /// <summary>Specifies time sub-divisions of a Limit, each of which is available for a different maturity period</summary>
        [System.Text.Json.Serialization.JsonPropertyName("timeCode")]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        public string? TimeCode { get; set; }= default!;
    
        /// <summary>The Limit amount that is actually available for use.The system limit checks are performed against the online limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("onlineLimit")]
        [System.ComponentModel.DataAnnotations.StringLength(19)]
        public string? OnlineLimit { get; set; }= default!;
    
        /// <summary>Contains the aggregate outstanding principal amount thereof after giving effect to any borrowings and prepayments or repayments of Committed Loans</summary>
        [System.Text.Json.Serialization.JsonPropertyName("outstandingAmount")]
        [System.ComponentModel.DataAnnotations.StringLength(19)]
        public string? OutstandingAmount { get; set; }= default!;
    
        /// <summary>The credit limit available to the customer for use</summary>
        [System.Text.Json.Serialization.JsonPropertyName("availableAmount")]
        [System.ComponentModel.DataAnnotations.StringLength(19)]
        public string? AvailableAmount { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerIds2 
    {
        /// <summary>Identifier of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerId")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? CustomerId { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OverrideDetails 
    {
        /// <summary>The identifier of the override.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public string? Id { get; set; }= default!;
    
        /// <summary>The actual override message.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string? Description { get; set; }= default!;
    
        /// <summary>The code related to override message.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The usable options for the override.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("options")]
        public System.Collections.Generic.ICollection<string>? Options { get; set; }= default!;
    
        /// <summary>The type of the override.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ErrorDetails 
    {
        /// <summary>The name of the field</summary>
        [System.Text.Json.Serialization.JsonPropertyName("fieldName")]
        public string? FieldName { get; set; }= default!;
    
        /// <summary>The identifier of the error message</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The actual t24 error message </summary>
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ErrorDetails2 
    {
        /// <summary>The name of the field</summary>
        [System.Text.Json.Serialization.JsonPropertyName("fieldName")]
        public string? FieldName { get; set; }= default!;
    
        /// <summary>The identifier of the error message</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The actual t24 error message for bad requests</summary>
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ErrorDetails3 
    {
        /// <summary>The name of the field</summary>
        [System.Text.Json.Serialization.JsonPropertyName("fieldName")]
        public string? FieldName { get; set; }= default!;
    
        /// <summary>The identifier of the error message</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The actual t24 error message caused by server</summary>
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class LimitAmounts 
    {
        /// <summary>The Limit amount that is actually available for use. The system limit checks are preformed against the online limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitAmount")]
        [System.ComponentModel.DataAnnotations.StringLength(11)]
        public string? LimitAmount { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerIds3 
    {
        /// <summary>Identifier of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerId")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? CustomerId { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class IdlDetails 
    {
        /// <summary>The INTRA.DAY.LIMIT type that is applicable for a specific credit facility of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("idlType")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? IdlType { get; set; }= default!;
    
        /// <summary>The approved amount by the bank as INTRA.DAY.LIMIT on a credit facility within a specific period of the day</summary>
        [System.Text.Json.Serialization.JsonPropertyName("idlApprovedAmount")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? IdlApprovedAmount { get; set; }= default!;
    
        /// <summary>The advised amount by the bank to the customer as INTRA.DAY.LIMIT on a credit facility within a specific period of the day</summary>
        [System.Text.Json.Serialization.JsonPropertyName("idlAdvisedAmount")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? IdlAdvisedAmount { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class RelatedCustomerDetails 
    {
        /// <summary>Indicates the related customers of multi customer and joint limits</summary>
        [System.Text.Json.Serialization.JsonPropertyName("relatedCustomer")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? RelatedCustomer { get; set; }= default!;
    
        /// <summary>List of customer/person entity that are aggregated under a main customer on risk exposure view</summary>
        [System.Text.Json.Serialization.JsonPropertyName("aggregateCustomerId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? AggregateCustomerId { get; set; }= default!;
    
        /// <summary>Relation code that exists between the main customer and the aggregated customers</summary>
        [System.Text.Json.Serialization.JsonPropertyName("aggregateCustomerRelation")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? AggregateCustomerRelation { get; set; }= default!;
    
        /// <summary>Name of the Party related to the Customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("relatedPartyName")]
        public string? RelatedPartyName { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class LimitNotes 
    {
        /// <summary>Relation code that exists between the main customer and the aggregated customers</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitNote")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? LimitNote { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SubGroups 
    {
        /// <summary>Identifier of the sub group within a CUSTOMER.GROUP that constitues one or more related customers which would be used while arrivnig collective risk exposure of credit line liable to them either individually or shared among them.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("subGroup")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? SubGroup { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class RelationshipDetails 
    {
        /// <summary>Indicates the type of customer which is part of the relationship. It may be Customer, Person or Entity.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("partyType")]
        public string? PartyType { get; set; }= default!;
    
        /// <summary>Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("partyId")]
        public double? PartyId { get; set; }= default!;
    
        /// <summary>Specifies the short name of the customer in CUSTOMER.GROUP</summary>
        [System.Text.Json.Serialization.JsonPropertyName("partyName")]
        public string? PartyName { get; set; }= default!;
    
        /// <summary>Specifies the description of the RELATION in CUSTOMER.GROUP</summary>
        [System.Text.Json.Serialization.JsonPropertyName("relationDisplayName")]
        public string? RelationDisplayName { get; set; }= default!;
    
        /// <summary>Specifies the description of the GROUP.RELATION in CUSTOMER.GROUP</summary>
        [System.Text.Json.Serialization.JsonPropertyName("groupRelationDisplayName")]
        public string? GroupRelationDisplayName { get; set; }= default!;
    
        /// <summary>Entity Relationship with the partyType</summary>
        [System.Text.Json.Serialization.JsonPropertyName("relatedAs")]
        public string? RelatedAs { get; set; }= default!;
    
        /// <summary>Indicates the related party's customer type. It may be Customer, Person or Entity.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("relatedPartyType")]
        public string? RelatedPartyType { get; set; }= default!;
    
        /// <summary>Identifier of the Related Party</summary>
        [System.Text.Json.Serialization.JsonPropertyName("relatedPartyId")]
        public string? RelatedPartyId { get; set; }= default!;
    
        /// <summary>Name of the Party related to the Customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("relatedPartyName")]
        public string? RelatedPartyName { get; set; }= default!;
    
        /// <summary>Used to record the percentage of ownership in the relationship. For example an entity may be partially or wholly owned by another entity. This will only be allowed to be entered if the relation is indicated as a type allowing Ownership</summary>
        [System.Text.Json.Serialization.JsonPropertyName("owningPercent")]
        public string? OwningPercent { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ExpireLimitAmounts 
    {
        /// <summary>The Limit amount that is actually available for use.The system limit checks are performed against the online limit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("onlineLimit")]
        [System.ComponentModel.DataAnnotations.Range(double.MinValue, 19D)]
        public double? OnlineLimit { get; set; }= default!;
    
        /// <summary>The credit limit available to the customer for use</summary>
        [System.Text.Json.Serialization.JsonPropertyName("availableAmount")]
        [System.ComponentModel.DataAnnotations.StringLength(19)]
        public string? AvailableAmount { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class MasterGroupKeys 
    {
        /// <summary>Automatically updated by system during authorization with the master group key in which the sharing group key is linked. It will be updated only for the Main group and not for the sub groups.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("masterGroupKey")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? MasterGroupKey { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class AllowedCustomers 
    {
        /// <summary>Customers who are part of Limit sharing Group.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("allowedCustomer")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? AllowedCustomer { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerPriorities 
    {
        /// <summary>Customer's Limit Sharing Priority to the Group</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerPriority")]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public string? CustomerPriority { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class AllowedCustomers2 
    {
        /// <summary>Customers who are part of Limit sharing Group.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("allowedCustomer")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? AllowedCustomer { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class AllowedProducts 
    {
        /// <summary>Product or products allowed to be used within the product bundle.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("allowedProduct")]
        [System.ComponentModel.DataAnnotations.StringLength(7)]
        public string? AllowedProduct { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class AllowedCustomerList 
    {
        /// <summary>Customers who are part of Limit sharing Group.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("allowedCustomer")]
        public System.Collections.Generic.ICollection<string>? AllowedCustomer { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SubGroupInfo 
    {
        /// <summary>Identifier of the sub group within a CUSTOMER.GROUP that constitues one or more related customers which would be used while arrivnig collective risk exposure of credit line liable to them either individually or shared among them.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("subGroup")]
        [System.ComponentModel.DataAnnotations.StringLength(15)]
        public string? SubGroup { get; set; }= default!;
    
        /// <summary>Specifies the SUB.GROUP name of the CUSTOMER.GROUP</summary>
        [System.Text.Json.Serialization.JsonPropertyName("subGroupName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? SubGroupName { get; set; }= default!;
    
        /// <summary>The identifier of the underlying Entity/Company/Branch.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("companyCode")]
        [System.ComponentModel.DataAnnotations.StringLength(9)]
        public string? CompanyCode { get; set; }= default!;
    
        /// <summary>Identifier of Department Account Officer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountOfficer")]
        [System.ComponentModel.DataAnnotations.StringLength(6)]
        public string? AccountOfficer { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("customerInfo")]
        public System.Collections.Generic.ICollection<CustomerInfo>? CustomerInfo { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SubLimitInfo 
    {
        /// <summary>Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("currencyId")]
        public string? CurrencyId { get; set; }= default!;
    
        /// <summary>This field specifies the validity of the Limit, i.e. how long is it to remain in force</summary>
        [System.Text.Json.Serialization.JsonPropertyName("limitExpiryDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? LimitExpiryDate { get; set; }= default!;
    
        /// <summary>Indicates the amount allocated to the Credit Limit by the Bank</summary>
        [System.Text.Json.Serialization.JsonPropertyName("internalAmount")]
        public string? InternalAmount { get; set; }= default!;
    
        /// <summary>The credit limit available to the customer for use</summary>
        [System.Text.Json.Serialization.JsonPropertyName("availableAmount")]
        public string? AvailableAmount { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("criterionInfo")]
        public System.Collections.Generic.ICollection<CriterionInfo>? CriterionInfo { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OverrideDetails2 
    {
        /// <summary>The identifier of the override.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public string? Id { get; set; }= default!;
    
        /// <summary>The actual override message.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string? Description { get; set; }= default!;
    
        /// <summary>The code related to override message.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The user input to accept/reject the override.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("responseCode")]
        public string? ResponseCode { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerInfo 
    {
        /// <summary>Indicates the type of customer which is part of the relationship. It may be Customer, Person or Entity.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("partyType")]
        [System.ComponentModel.DataAnnotations.StringLength(13)]
        public string? PartyType { get; set; }= default!;
    
        /// <summary>Name of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerName")]
        public string? CustomerName { get; set; }= default!;
    
        /// <summary>Identifier of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerId")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? CustomerId { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CriterionInfo 
    {
        /// <summary>Indicates the risk criterion name based on which the risk elements of a contract is framed.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("riskCriterionName")]
        public string? RiskCriterionName { get; set; }= default!;
    
        /// <summary>Indicates the risk criterion value for a risk criterion name</summary>
        [System.Text.Json.Serialization.JsonPropertyName("riskCriterionValue")]
        public string? RiskCriterionValue { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal class DateFormatConverter : Newtonsoft.Json.Converters.IsoDateTimeConverter
    {
        public DateFormatConverter()
        {
            DateTimeFormat = "yyyy-MM-dd";
        }
    }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016