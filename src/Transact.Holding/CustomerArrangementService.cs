//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using Shared.Models;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"

namespace Transact.Holding.CustomerArrangements
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface ICustomerArrangementService
    {
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves the List of Loans associated with a customer</summary>
        /// <param name="customerId">Identifier of the customer</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from Transact on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>CustomerLoansResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<CustomerLoansResponse> GetCustomerLoansAsync(string customerId, int? page_size = null, int? page_start = null, string? page_token = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, bool? disablePagination = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves the Loan Details of an account</summary>
        /// <param name="customerId">Identifier of the customer</param>
        /// <param name="arrangementId">Indicates an unique identifier of an account</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from Transact on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>LoansResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<LoansResponse> GetLoansAsync(string? customerId = null, string? arrangementId = null, int? page_size = null, int? page_start = null, string? page_token = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, bool? disablePagination = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves the List of Deposit account for a given customer</summary>
        /// <param name="customerId">Identifier of the customer</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from Transact on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>CustomerDepositsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<CustomerDepositsResponse> GetCustomerDepositsAsync(string customerId, int? page_size = null, int? page_start = null, string? page_token = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, bool? disablePagination = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves the deposit details for a given account or a customer</summary>
        /// <param name="customerId">Identifier of the customer</param>
        /// <param name="arrangementId">Indicates an unique identifier of an account</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from Transact on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>DepositsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<DepositsResponse> GetDepositsAsync(string? customerId = null, string? arrangementId = null, int? page_size = null, int? page_start = null, string? page_token = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, bool? disablePagination = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves the list of Arrangement Ids for a given Customer</summary>
        /// <param name="customerId">Identifier of the customer</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from Transact on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>CustomerArrangementDetailsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        [System.Obsolete]
        System.Threading.Tasks.Task<CustomerArrangementDetailsResponse> GetCustomerArrangementDetailsAsync(string customerId, int? page_size = null, int? page_start = null, string? page_token = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, bool? disablePagination = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves the List of available external accounts for a given customer</summary>
        /// <param name="customerId">Identifier of the customer</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from Transact on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>CustomerExternalResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<CustomerExternalResponse> GetCustomerExternalAsync(string customerId, int? page_size = null, int? page_start = null, string? page_token = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, bool? disablePagination = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves the List of closed external accounts for a given customer</summary>
        /// <param name="customerId">Identifier of the customer</param>
        /// <param name="arrangementId">Indicates an unique identifier of an account</param>
        /// <param name="productLine">The top level product line, which the product is ultimately attached to. May be a Temenos-defined product line such as ACCOUNTS, AGENT, BUNDLE, CONSENT, DEPOSITS, LENDING, REWARDS, etc. or one defined by the institution to manage external products.</param>
        /// <param name="productGroup">Indicates a group under which the products exists</param>
        /// <param name="product">Specifies the list of products licensed for the institution. This will be used to set the products field in the SPF (System Parameter) table and the master company. The products in the company can only be subset of the products in the SPF table.</param>
        /// <param name="currency">Identifies the currency. E.g. USD, GBP etc</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from Transact on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>CustomerClosedExternalResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<CustomerClosedExternalResponse> GetCustomerClosedExternalAsync(string customerId, string? arrangementId = null, string? productLine = null, string? productGroup = null, string? product = null, string? currency = null, int? page_size = null, int? page_start = null, string? page_token = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, bool? disablePagination = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class QueryHeader 
    {
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public Audit? Audit { get; set; }= default!;
    
        /// <summary>Status of the API(success/failed)</summary>
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public string? Status { get; set; }= default!;
    
        /// <summary>The total number of records per page</summary>
        [System.Text.Json.Serialization.JsonPropertyName("page_size")]
        public int? Page_size { get; set; }= default!;
    
        /// <summary>The record from which the response should be displayed</summary>
        [System.Text.Json.Serialization.JsonPropertyName("page_start")]
        public int? Page_start { get; set; }= default!;
    
        /// <summary>The total number of records present</summary>
        [System.Text.Json.Serialization.JsonPropertyName("total_size")]
        public int? Total_size { get; set; }= default!;
    
        /// <summary>Unique id expected to get as part of response from Transact on every enquiry request</summary>
        [System.Text.Json.Serialization.JsonPropertyName("page_token")]
        public string? Page_token { get; set; }= default!;
    
    
    }
    
    /// <summary>CustomerLoansResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerLoansResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public CustomerLoansResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerLoansResponseBody : System.Collections.ObjectModel.Collection<Anonymous>
    {
    
    }
    
    /// <summary>BusinessQueryErrorResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BusinessQueryErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ErrorHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("error")]
        public BusinessQueryErrorResponseBody? Error { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BusinessQueryErrorResponseBody 
    {
        /// <summary>The identifier of the error message</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The actual Transact error message for bad requests</summary>
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
        /// <summary>The identifier of error type: Business</summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    /// <summary>SystemQueryErrorResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SystemQueryErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ErrorHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("error")]
        public SystemQueryErrorResponseBody? Error { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SystemQueryErrorResponseBody 
    {
        /// <summary>The identifier of the error message</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The actual Transact error message caused by server</summary>
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
        /// <summary>The identifier of error type: System</summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    /// <summary>LoansResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class LoansResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public LoansResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class LoansResponseBody : System.Collections.ObjectModel.Collection<Anonymous2>
    {
    
    }
    
    /// <summary>CustomerDepositsResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerDepositsResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public CustomerDepositsResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerDepositsResponseBody : System.Collections.ObjectModel.Collection<Anonymous3>
    {
    
    }
    
    /// <summary>DepositsResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DepositsResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public DepositsResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DepositsResponseBody : System.Collections.ObjectModel.Collection<Anonymous4>
    {
    
    }
    
    /// <summary>CustomerArrangementDetailsResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerArrangementDetailsResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public CustomerArrangementDetailsResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerArrangementDetailsResponseBody : System.Collections.ObjectModel.Collection<Anonymous5>
    {
    
    }
    
    /// <summary>CustomerExternalResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerExternalResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public CustomerExternalResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerExternalResponseBody : System.Collections.ObjectModel.Collection<Anonymous6>
    {
    
    }
    
    /// <summary>CustomerClosedExternalResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerClosedExternalResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public CustomerClosedExternalResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerClosedExternalResponseBody : System.Collections.ObjectModel.Collection<Anonymous7>
    {
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous 
    {
        /// <summary>The identifier of the loan account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("loanAccountId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? LoanAccountId { get; set; }= default!;
    
        /// <summary>The loan account product</summary>
        [System.Text.Json.Serialization.JsonPropertyName("loanProduct")]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        public string? LoanProduct { get; set; }= default!;
    
        /// <summary>Indicates the currency of the loan</summary>
        [System.Text.Json.Serialization.JsonPropertyName("loanCurrency")]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public string? LoanCurrency { get; set; }= default!;
    
        /// <summary>Indicates loan amount</summary>
        [System.Text.Json.Serialization.JsonPropertyName("loanAmount")]
        public double? LoanAmount { get; set; }= default!;
    
        /// <summary>Indicates the outstanding balance of the loan</summary>
        [System.Text.Json.Serialization.JsonPropertyName("loanBalance")]
        public double? LoanBalance { get; set; }= default!;
    
        /// <summary>Indicates the interest rate of the loan</summary>
        [System.Text.Json.Serialization.JsonPropertyName("loanInterestRate")]
        public string? LoanInterestRate { get; set; }= default!;
    
        /// <summary>Indicates the interest rate type - Eg. Fixed, floating, periodic</summary>
        [System.Text.Json.Serialization.JsonPropertyName("loanInterestType")]
        public string? LoanInterestType { get; set; }= default!;
    
        /// <summary>Indicates the loan commencement date</summary>
        [System.Text.Json.Serialization.JsonPropertyName("loanStartDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? LoanStartDate { get; set; }= default!;
    
        /// <summary>Indicates the next payment date for the loan</summary>
        [System.Text.Json.Serialization.JsonPropertyName("loanNextPayDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? LoanNextPayDate { get; set; }= default!;
    
        /// <summary>Indicates the loan maturity date</summary>
        [System.Text.Json.Serialization.JsonPropertyName("loanEndDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? LoanEndDate { get; set; }= default!;
    
        /// <summary>Product name of the bank for this account, proprietary definition.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("productName")]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        public string? ProductName { get; set; }= default!;
    
        /// <summary>Indicates the short name of Customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerShortName")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? CustomerShortName { get; set; }= default!;
    
        /// <summary>Indicates the type of role of a customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("roleDisplayName")]
        public string? RoleDisplayName { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Audit2 
    {
        /// <summary>Time taken to response by Transact</summary>
        [System.Text.Json.Serialization.JsonPropertyName("T24_time")]
        public int? T24_time { get; set; }= default!;
    
        /// <summary>The CURR.NO. of the record</summary>
        [System.Text.Json.Serialization.JsonPropertyName("versionNumber")]
        public string? VersionNumber { get; set; }= default!;
    
        /// <summary>Time taken to parse the request by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("requestParse_time")]
        public double? RequestParse_time { get; set; }= default!;
    
        /// <summary>Time taken to parse the response by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("responseParse_time")]
        public double? ResponseParse_time { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous2 
    {
        /// <summary>Indicates an unique identifier of an account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("arrangementId")]
        [System.ComponentModel.DataAnnotations.StringLength(17)]
        public string? ArrangementId { get; set; }= default!;
    
        /// <summary>The identifier of the loan account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("loanAccountId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? LoanAccountId { get; set; }= default!;
    
        /// <summary>The loan account product</summary>
        [System.Text.Json.Serialization.JsonPropertyName("loanProduct")]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        public string? LoanProduct { get; set; }= default!;
    
        /// <summary>Indicates the currency of the loan</summary>
        [System.Text.Json.Serialization.JsonPropertyName("loanCurrency")]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public string? LoanCurrency { get; set; }= default!;
    
        /// <summary>Indicates loan amount</summary>
        [System.Text.Json.Serialization.JsonPropertyName("loanAmount")]
        public double? LoanAmount { get; set; }= default!;
    
        /// <summary>Indicates the outstanding balance of the loan</summary>
        [System.Text.Json.Serialization.JsonPropertyName("loanBalance")]
        public double? LoanBalance { get; set; }= default!;
    
        /// <summary>Indicates the interest rate of the loan</summary>
        [System.Text.Json.Serialization.JsonPropertyName("loanInterestRate")]
        public string? LoanInterestRate { get; set; }= default!;
    
        /// <summary>Indicates the interest rate type - Eg. Fixed, floating, periodic</summary>
        [System.Text.Json.Serialization.JsonPropertyName("loanInterestType")]
        public string? LoanInterestType { get; set; }= default!;
    
        /// <summary>Indicates the loan commencement date</summary>
        [System.Text.Json.Serialization.JsonPropertyName("loanStartDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? LoanStartDate { get; set; }= default!;
    
        /// <summary>Indicates the next payment date for the loan</summary>
        [System.Text.Json.Serialization.JsonPropertyName("loanNextPayDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? LoanNextPayDate { get; set; }= default!;
    
        /// <summary>Indicates the loan maturity date</summary>
        [System.Text.Json.Serialization.JsonPropertyName("loanEndDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? LoanEndDate { get; set; }= default!;
    
        /// <summary>Product name of the bank for this account, proprietary definition.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("productName")]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        public string? ProductName { get; set; }= default!;
    
        /// <summary>Indicates the short name of Customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerShortName")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? CustomerShortName { get; set; }= default!;
    
        /// <summary>Indicates the type of role of a customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("roleDisplayName")]
        public string? RoleDisplayName { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous3 
    {
        /// <summary>The interest rate applied on the deposit account.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("depInterestRates")]
        public System.Collections.Generic.ICollection<DepInterestRates>? DepInterestRates { get; set; }= default!;
    
        /// <summary>The identifier of the deposit account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("depAccountId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? DepAccountId { get; set; }= default!;
    
        /// <summary>The deposit account product </summary>
        [System.Text.Json.Serialization.JsonPropertyName("depProduct")]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        public string? DepProduct { get; set; }= default!;
    
        /// <summary>Currency of the deposit account, 3-letter ISO 4217 code.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("depCurrency")]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public string? DepCurrency { get; set; }= default!;
    
        /// <summary>Indicates the total deposit amount</summary>
        [System.Text.Json.Serialization.JsonPropertyName("depAmount")]
        public string? DepAmount { get; set; }= default!;
    
        /// <summary>The type of interest - fixed, floating, periodic</summary>
        [System.Text.Json.Serialization.JsonPropertyName("depInterestType")]
        public string? DepInterestType { get; set; }= default!;
    
        /// <summary>The start date for the deposit account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("depStartDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? DepStartDate { get; set; }= default!;
    
        /// <summary>The maturity date of the deposit agreement.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("depEndDate")]
        public string? DepEndDate { get; set; }= default!;
    
        /// <summary>Indicates the current outstanding balance</summary>
        [System.Text.Json.Serialization.JsonPropertyName("depBalance")]
        public string? DepBalance { get; set; }= default!;
    
        /// <summary>Indicates the next payment date for the deposit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("depNextPayDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? DepNextPayDate { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous4 
    {
        /// <summary>The interest rate applied on the deposit account.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("depInterestRates")]
        public System.Collections.Generic.ICollection<DepInterestRates2>? DepInterestRates { get; set; }= default!;
    
        /// <summary>The identifier of the deposit account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("depAccountId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? DepAccountId { get; set; }= default!;
    
        /// <summary>The deposit account product </summary>
        [System.Text.Json.Serialization.JsonPropertyName("depProduct")]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        public string? DepProduct { get; set; }= default!;
    
        /// <summary>Currency of the deposit account, 3-letter ISO 4217 code.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("depCurrency")]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public string? DepCurrency { get; set; }= default!;
    
        /// <summary>Indicates the total deposit amount</summary>
        [System.Text.Json.Serialization.JsonPropertyName("depAmount")]
        public string? DepAmount { get; set; }= default!;
    
        /// <summary>The type of interest - fixed, floating, periodic</summary>
        [System.Text.Json.Serialization.JsonPropertyName("depInterestType")]
        public string? DepInterestType { get; set; }= default!;
    
        /// <summary>The start date for the deposit account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("depStartDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? DepStartDate { get; set; }= default!;
    
        /// <summary>The maturity date of the deposit agreement.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("depEndDate")]
        public string? DepEndDate { get; set; }= default!;
    
        /// <summary>Indicates the current outstanding balance</summary>
        [System.Text.Json.Serialization.JsonPropertyName("depBalance")]
        public string? DepBalance { get; set; }= default!;
    
        /// <summary>Indicates the next payment date for the deposit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("depNextPayDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? DepNextPayDate { get; set; }= default!;
    
        /// <summary>Indicates the description of the deposit account product</summary>
        [System.Text.Json.Serialization.JsonPropertyName("depProductDescription")]
        public string? DepProductDescription { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous5 
    {
        /// <summary>The group, as defined by the institution, that the product belongs to.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("productLines")]
        public System.Collections.Generic.ICollection<ProductLines>? ProductLines { get; set; }= default!;
    
        /// <summary>Identifier of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerId")]
        [System.ComponentModel.DataAnnotations.StringLength(17)]
        public string? CustomerId { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous6 
    {
        /// <summary>Indicates an unique identifier of an account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("arrangementId")]
        [System.ComponentModel.DataAnnotations.StringLength(17)]
        public string? ArrangementId { get; set; }= default!;
    
        /// <summary>Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customer")]
        public string? Customer { get; set; }= default!;
    
        /// <summary>Indicates the short name of Customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerShortName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? CustomerShortName { get; set; }= default!;
    
        /// <summary>Indicates role of a customer for an arrangement.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerRole")]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        public string? CustomerRole { get; set; }= default!;
    
        /// <summary>The top level product line, which the product is ultimately attached to. May be a Temenos-defined product line such as ACCOUNTS, AGENT, BUNDLE, CONSENT, DEPOSITS, LENDING, REWARDS, etc. or one defined by the institution to manage external products.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("productLine")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? ProductLine { get; set; }= default!;
    
        /// <summary>Product name of the bank for this account, proprietary definition.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("productName")]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        public string? ProductName { get; set; }= default!;
    
        /// <summary>Indicates the description of the Product</summary>
        [System.Text.Json.Serialization.JsonPropertyName("productDescription")]
        public string? ProductDescription { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous7 
    {
        /// <summary>Indicates an unique identifier of an account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("arrangementId")]
        [System.ComponentModel.DataAnnotations.StringLength(17)]
        public string? ArrangementId { get; set; }= default!;
    
        /// <summary>Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customer")]
        public string? Customer { get; set; }= default!;
    
        /// <summary>Indicates the short name of Customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerShortName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? CustomerShortName { get; set; }= default!;
    
        /// <summary>Indicates role of a customer for an arrangement.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerRole")]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        public string? CustomerRole { get; set; }= default!;
    
        /// <summary>The top level product line, which the product is ultimately attached to. May be a Temenos-defined product line such as ACCOUNTS, AGENT, BUNDLE, CONSENT, DEPOSITS, LENDING, REWARDS, etc. or one defined by the institution to manage external products.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("productLine")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? ProductLine { get; set; }= default!;
    
        /// <summary>Product name of the bank for this account, proprietary definition.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("productName")]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        public string? ProductName { get; set; }= default!;
    
        /// <summary>Indicates the description of the Product</summary>
        [System.Text.Json.Serialization.JsonPropertyName("productDescription")]
        public string? ProductDescription { get; set; }= default!;
    
        /// <summary>Specifies the code required to install a new product.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("productCode")]
        public string? ProductCode { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DepInterestRates 
    {
        /// <summary>The interest rate applied on the deposit account.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("depInterestRate")]
        public System.Collections.Generic.ICollection<string>? DepInterestRate { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DepInterestRates2 
    {
        /// <summary>The interest rate applied on the deposit account.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("depInterestRate")]
        public System.Collections.Generic.ICollection<string>? DepInterestRate { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ProductLines 
    {
        /// <summary>The top level product line, which the product is ultimately attached to. May be a Temenos-defined product line such as ACCOUNTS, AGENT, BUNDLE, CONSENT, DEPOSITS, LENDING, REWARDS, etc. or one defined by the institution to manage external products.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("productLine")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? ProductLine { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("productGroupIds")]
        public System.Collections.Generic.ICollection<ProductGroupIds>? ProductGroupIds { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ProductGroupIds 
    {
        /// <summary>The group, as defined by the institution, that the product belongs to.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("productGroupId")]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        public string? ProductGroupId { get; set; }= default!;
    
        /// <summary>Indicates an unique identifier of an account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("arrangementId")]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        public string? ArrangementId { get; set; }= default!;
    
        /// <summary>Indicates role of a customer for an arrangement.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerRole")]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        public string? CustomerRole { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal class DateFormatConverter : Newtonsoft.Json.Converters.IsoDateTimeConverter
    {
        public DateFormatConverter()
        {
            DateTimeFormat = "yyyy-MM-dd";
        }
    }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016