//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using Shared.Models;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"

namespace FundAdministration.GlobalInvestor.Party.Agents
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface IAgentsService
    {
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves the list of distributor informations</summary>
        /// <param name="page">Current page number (Default:1)</param>
        /// <param name="size">Total number of records per page (Default:25)</param>
        /// <param name="orders">An 'orders' parameter allows you to specify the order in which rows appear in the result set Eg: orders=fundname:0,masterfund:1 where 'fundname' is field, '0' for ascending manner and ',' as seperator for fields</param>
        /// <param name="groups">A 'groups' parameter is used to collect data across multiple records and group the results by one or more columns. Eg: groups=nationality,reclaimtax-nationality:EQ:Indian,reclaimtax:EQ:N-nationality:COUNT where 'nationality,reclaimtax' is for the fields and 'nationality:EQ:Indian,reclaimtax:EQ:N-nationality' are filters, 'nationality:COUNT' is a aggregator and '-' as seperator</param>
        /// <param name="filters">Use a 'filters' parameter to select rows based on a value by using basic operators like EQ, NE etc.., Eg: filters=statistictype:NE:SRS where 'statistictype' is a field, 'NE' is a operator and 'SRS' is a value</param>
        /// <param name="referenceId">uniqueId for security purpose</param>
        /// <param name="token">unique token</param>
        /// <param name="username">username</param>
        /// <param name="company">company name</param>
        /// <param name="command">API operations like INVOKE, VALIDATE, PROCESS can be set or by default PROCESS is set</param>
        /// <returns>getAgent Success Response</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<GetAgentSuccessResponse> GetAgentAsync(double? page = null, double? size = null, string? orders = null, string? groups = null, string? filters = null, string? referenceId = null, string? token = null, string? username = null, string? company = null, string? command = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Creates a distributor information record</summary>
        /// <param name="payload">postAgent Payload</param>
        /// <param name="referenceId">uniqueId for security purpose</param>
        /// <param name="token">unique token</param>
        /// <param name="username">username</param>
        /// <param name="company">company name</param>
        /// <param name="command">API operations like INVOKE, VALIDATE, PROCESS can be set or by default PROCESS is set</param>
        /// <returns>postAgent Success Response</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PostAgentSuccessResponse> PostAgentAsync(_0Payload payload, string? referenceId = null, string? token = null, string? username = null, string? company = null, string? command = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Updates distributor information records with identifiers specified in the payload</summary>
        /// <param name="payload">putAgent Payload</param>
        /// <param name="referenceId">uniqueId for security purpose</param>
        /// <param name="token">unique token</param>
        /// <param name="username">username</param>
        /// <param name="company">company name</param>
        /// <param name="command">API operations like INVOKE, VALIDATE, PROCESS can be set or by default PROCESS is set</param>
        /// <returns>putAgent Success Response</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PutAgentSuccessResponse> PutAgentAsync(_0BULKPayload payload, string? referenceId = null, string? token = null, string? username = null, string? company = null, string? command = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Deletes distributor information records with identifiers provided in the payload</summary>
        /// <param name="payload">deleteAgent Payload</param>
        /// <param name="referenceId">uniqueId for security purpose</param>
        /// <param name="token">unique token</param>
        /// <param name="username">username</param>
        /// <param name="company">company name</param>
        /// <param name="command">API operations like INVOKE, VALIDATE, PROCESS can be set or by default PROCESS is set</param>
        /// <returns>deleteAgent Success Response</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<DeleteAgentSuccessResponse> DeleteAgentAsync(_0BULKPayload payload, string? referenceId = null, string? token = null, string? username = null, string? company = null, string? command = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves a specific distributor information record</summary>
        /// <param name="agentId">internalId</param>
        /// <param name="page">Current page number (Default:1)</param>
        /// <param name="size">Total number of records per page (Default:25)</param>
        /// <param name="orders">An 'orders' parameter allows you to specify the order in which rows appear in the result set Eg: orders=fundname:0,masterfund:1 where 'fundname' is field, '0' for ascending manner and ',' as seperator for fields</param>
        /// <param name="groups">A 'groups' parameter is used to collect data across multiple records and group the results by one or more columns. Eg: groups=nationality,reclaimtax-nationality:EQ:Indian,reclaimtax:EQ:N-nationality:COUNT where 'nationality,reclaimtax' is for the fields and 'nationality:EQ:Indian,reclaimtax:EQ:N-nationality' are filters, 'nationality:COUNT' is a aggregator and '-' as seperator</param>
        /// <param name="filters">Use a 'filters' parameter to select rows based on a value by using basic operators like EQ, NE etc.., Eg: filters=statistictype:NE:SRS where 'statistictype' is a field, 'NE' is a operator and 'SRS' is a value</param>
        /// <param name="referenceId">uniqueId for security purpose</param>
        /// <param name="token">unique token</param>
        /// <param name="username">username</param>
        /// <param name="company">company name</param>
        /// <param name="command">API operations like INVOKE, VALIDATE, PROCESS can be set or by default PROCESS is set</param>
        /// <returns>getAgentByagentId Success Response</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<GetAgentByagentIdSuccessResponse> GetAgentByagentIdAsync(string agentId, double? page = null, double? size = null, string? orders = null, string? groups = null, string? filters = null, string? referenceId = null, string? token = null, string? username = null, string? company = null, string? command = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Updates specific distributor information record</summary>
        /// <param name="internalId">internalId</param>
        /// <param name="payload">putAgentByinternalId Payload</param>
        /// <param name="referenceId">uniqueId for security purpose</param>
        /// <param name="token">unique token</param>
        /// <param name="username">username</param>
        /// <param name="company">company name</param>
        /// <param name="command">API operations like INVOKE, VALIDATE, PROCESS can be set or by default PROCESS is set</param>
        /// <returns>putAgentByinternalId Success Response</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PutAgentByinternalIdSuccessResponse> PutAgentByinternalIdAsync(string internalId, _0Payload payload, string? referenceId = null, string? token = null, string? username = null, string? company = null, string? command = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Deletes a distributor information record</summary>
        /// <param name="internalId">internalId</param>
        /// <param name="referenceId">uniqueId for security purpose</param>
        /// <param name="token">unique token</param>
        /// <param name="username">username</param>
        /// <param name="company">company name</param>
        /// <param name="command">API operations like INVOKE, VALIDATE, PROCESS can be set or by default PROCESS is set</param>
        /// <param name="payload">deleteAgentByinternalId Payload</param>
        /// <returns>deleteAgentByinternalId Success Response</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<DeleteAgentByinternalIdSuccessResponse> DeleteAgentByinternalIdAsync(string internalId, string? referenceId = null, string? token = null, string? username = null, string? company = null, string? command = null, _0Payload? payload = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class _0Payload 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public object? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public _0? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PaginationSchema 
    {
        [System.Text.Json.Serialization.JsonPropertyName("page")]
        public string? Page { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("size")]
        public string? Size { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("count")]
        public string? Count { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("total")]
        public string? Total { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class AuditSchema 
    {
        [System.Text.Json.Serialization.JsonPropertyName("startTime")]
        public string? StartTime { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("endTime")]
        public string? EndTime { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("processTime")]
        public string? ProcessTime { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SuccessHeaderstatusSchema 
    {
        [System.Text.Json.Serialization.JsonPropertyName("result")]
        public string? Result { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("HTTP_MESSAGE")]
        public string? HTTP_MESSAGE { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string? Description { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("HTTP_CODE")]
        public string? HTTP_CODE { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("requestId")]
        public string? RequestId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("responseId")]
        public string? ResponseId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("eTag")]
        public string? ETag { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("lastModified")]
        public string? LastModified { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PostAgentSuccessheaderResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("pagination")]
        public PaginationSchema? Pagination { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public AuditSchema? Audit { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public SuccessHeaderstatusSchema? Status { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("company")]
        public string? Company { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("username")]
        public string? Username { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("referenceId")]
        public string? ReferenceId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("token")]
        public string? Token { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PostAgentrecordsSchema : System.Collections.ObjectModel.Collection<_0>
    {
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PostAgentSuccessbodyResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("records")]
        public PostAgentrecordsSchema? Records { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PostAgentSuccessResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public PostAgentSuccessheaderResponse? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public PostAgentSuccessbodyResponse? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ErrorHeaderstatusSchema 
    {
        [System.Text.Json.Serialization.JsonPropertyName("result")]
        public string? Result { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("HTTP_MESSAGE")]
        public string? HTTP_MESSAGE { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string? Description { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("HTTP_CODE")]
        public string? HTTP_CODE { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("requestId")]
        public string? RequestId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("responseId")]
        public string? ResponseId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("eTag")]
        public string? ETag { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("lastModified")]
        public string? LastModified { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("details")]
        public System.Collections.Generic.ICollection<Details>? Details { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PostAgentErrorheaderResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("pagination")]
        public PaginationSchema? Pagination { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public AuditSchema? Audit { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public ErrorHeaderstatusSchema? Status { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("referenceId")]
        public string? ReferenceId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("token")]
        public string? Token { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("username")]
        public string? Username { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PostAgentErrorbodyResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("items")]
        public System.Collections.Generic.ICollection<Items>? Items { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PostAgentErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public PostAgentErrorheaderResponse? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public object? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class _0 
    {
        /// <summary>Contains external and internal identifiers of the record</summary>
        [System.Text.Json.Serialization.JsonPropertyName("reference")]
        public string? Reference { get; set; }= default!;
    
        /// <summary>Identifies the entity. For e.g. 0001 for registers, 0002 for agents, 0007 for investors, etc.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("entityType")]
        public string? EntityType { get; set; }= default!;
    
        /// <summary>Internal identifier of the records.  Generated by the system during POST and can be used for other operations</summary>
        [System.Text.Json.Serialization.JsonPropertyName("internalId")]
        public string? InternalId { get; set; }= default!;
    
        /// <summary>Provider of the external identification</summary>
        [System.Text.Json.Serialization.JsonPropertyName("extIdType")]
        public string? ExtIdType { get; set; }= default!;
    
        /// <summary>External identifier of the record</summary>
        [System.Text.Json.Serialization.JsonPropertyName("externalId")]
        public string? ExternalId { get; set; }= default!;
    
        /// <summary>Internal identifier of the Fund promoter linked to the entity</summary>
        [System.Text.Json.Serialization.JsonPropertyName("promoterInternalId")]
        public string? PromoterInternalId { get; set; }= default!;
    
        /// <summary>External identifier of the Fund promoter linked to the entity</summary>
        [System.Text.Json.Serialization.JsonPropertyName("promoterExternalId")]
        public string? PromoterExternalId { get; set; }= default!;
    
        /// <summary>Contains external and internal identifiers of the parent record, if the current record belongs to sub entities</summary>
        [System.Text.Json.Serialization.JsonPropertyName("parent")]
        public string? Parent { get; set; }= default!;
    
        /// <summary>Identifies the parent entity. For e.g. 0001 for registers, 0002 for agents, 0007 for investors, etc.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("parentEntityType")]
        public string? ParentEntityType { get; set; }= default!;
    
        /// <summary>Internal identifier of the parent record</summary>
        [System.Text.Json.Serialization.JsonPropertyName("parentInternalId")]
        public string? ParentInternalId { get; set; }= default!;
    
        /// <summary>External identifier of the parent record</summary>
        [System.Text.Json.Serialization.JsonPropertyName("parentExternalId")]
        public string? ParentExternalId { get; set; }= default!;
    
        /// <summary>Internal identifier of the Fund promoter linked to the parent entity</summary>
        [System.Text.Json.Serialization.JsonPropertyName("parentPromoterInternalId")]
        public string? ParentPromoterInternalId { get; set; }= default!;
    
        /// <summary>External identifier of the Fund promoter linked to the parent entity</summary>
        [System.Text.Json.Serialization.JsonPropertyName("parentPromoterExternalId")]
        public string? ParentPromoterExternalId { get; set; }= default!;
    
        /// <summary>Contains individual attributes of the Agent entity</summary>
        [System.Text.Json.Serialization.JsonPropertyName("agent")]
        public string? Agent { get; set; }= default!;
    
        /// <summary>Name of the Agent</summary>
        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string? Name { get; set; }= default!;
    
        /// <summary>The type of agent. For example: 0006(Main outlet), 0001(Distributor), 0011(Salesman), 0010(Management Company) etc. The LoV is available in the CMESS table TA_OUT_TYP.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("agentType")]
        public string? AgentType { get; set; }= default!;
    
        /// <summary>Frequency of commission payment from the Transfer Agent to the agent. For example: 0001(Monthly), 0002(Quaterly), 0003(Half yearly)etc. The LoV is available in the CMESS table TA_FRE_COD.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("paymentFrequencyCode")]
        public string? PaymentFrequencyCode { get; set; }= default!;
    
        /// <summary>Address Line 1 </summary>
        [System.Text.Json.Serialization.JsonPropertyName("addressLine1")]
        public string? AddressLine1 { get; set; }= default!;
    
        /// <summary>Address Line 2</summary>
        [System.Text.Json.Serialization.JsonPropertyName("addressLine2")]
        public string? AddressLine2 { get; set; }= default!;
    
        /// <summary>The postcode of the agent</summary>
        [System.Text.Json.Serialization.JsonPropertyName("postcode")]
        public string? Postcode { get; set; }= default!;
    
        /// <summary>The agent country code(in 2 letter formay eg. LU). The LoV is available in the CMESS table PAYS.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("country")]
        public string? Country { get; set; }= default!;
    
        /// <summary>Telephone Number</summary>
        [System.Text.Json.Serialization.JsonPropertyName("telephoneNumber")]
        public string? TelephoneNumber { get; set; }= default!;
    
        /// <summary>Language code. For example :1(French), 2(English), 3(Deutsch) etc.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("languageCode")]
        public string? LanguageCode { get; set; }= default!;
    
        /// <summary>Flag allows to enable Commission distribution definition per fund or per group. Allowed values: Y(to enable), N(to disable).</summary>
        [System.Text.Json.Serialization.JsonPropertyName("distributionFlag")]
        public string? DistributionFlag { get; set; }= default!;
    
        /// <summary>Start date of Distribution Agreement</summary>
        [System.Text.Json.Serialization.JsonPropertyName("startDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? StartDate { get; set; }= default!;
    
        /// <summary>End date of Distribution Agreement</summary>
        [System.Text.Json.Serialization.JsonPropertyName("endDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? EndDate { get; set; }= default!;
    
        /// <summary>Irregular start date</summary>
        [System.Text.Json.Serialization.JsonPropertyName("irregularStartDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? IrregularStartDate { get; set; }= default!;
    
        /// <summary>Irregular Date for the first payment, if applicable.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("irregularEndDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? IrregularEndDate { get; set; }= default!;
    
        /// <summary>Bank ID code linked to the Agent</summary>
        [System.Text.Json.Serialization.JsonPropertyName("bankId")]
        public string? BankId { get; set; }= default!;
    
        /// <summary>Bank Account Number linked to the Agent</summary>
        [System.Text.Json.Serialization.JsonPropertyName("bankAccountNumber")]
        public string? BankAccountNumber { get; set; }= default!;
    
        /// <summary>Main Agent External ID </summary>
        [System.Text.Json.Serialization.JsonPropertyName("mainAgentExternalId")]
        public string? MainAgentExternalId { get; set; }= default!;
    
        /// <summary>Main Agent Internal ID </summary>
        [System.Text.Json.Serialization.JsonPropertyName("mainAgentId")]
        public string? MainAgentId { get; set; }= default!;
    
        /// <summary>Group code for selection criteria and Fund /Agent restriction . This group is necessary when using the Investment restrictions functionality. Allowed values are from the list of group codes in MFGI table TA_OGROUP.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("agentGroup")]
        public string? AgentGroup { get; set; }= default!;
    
        /// <summary>Intermediate bank internal ID linked to the agent</summary>
        [System.Text.Json.Serialization.JsonPropertyName("intermediateBankId")]
        public string? IntermediateBankId { get; set; }= default!;
    
        /// <summary>Intermediate bank account number linked to the agent</summary>
        [System.Text.Json.Serialization.JsonPropertyName("IntermediateBankAccountNumber")]
        public string? IntermediateBankAccountNumber { get; set; }= default!;
    
        /// <summary>Date of next commission payment</summary>
        [System.Text.Json.Serialization.JsonPropertyName("nextPaymentDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? NextPaymentDate { get; set; }= default!;
    
        /// <summary>Register Type code. For example: 0001(Register), 0002(Bearer). 0003 (Global pool) etc.  The LoV is available in the CMESS table TA_REGIS.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("registerType")]
        public string? RegisterType { get; set; }= default!;
    
        /// <summary>Settlement type code allowed for the investor. For example: 0001 (Certificate), 0002 (Standard shares), 0003(NSCC) etc. The LoV is available in the CMESS table TA_SETTLE.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("settlementType")]
        public string? SettlementType { get; set; }= default!;
    
        /// <summary>Deal type code for Cash handling at Agent level. For example: 0001(Contractual), 0002(Semi-Contractual), 0003(Actual) etc. The LoV is available in the CMESS table TA_DEAL.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("dealType")]
        public string? DealType { get; set; }= default!;
    
        /// <summary>The number of days to be added to Trade date to arrive at the settlement date.. This is taken into consideration only when Min value date is parameterized at fund level and when the number of days parameterized at agent level is less than the number of value day parameterized at fund level</summary>
        [System.Text.Json.Serialization.JsonPropertyName("valueDateNumberOfDays")]
        public double? ValueDateNumberOfDays { get; set; }= default!;
    
        /// <summary>Agent contact person</summary>
        [System.Text.Json.Serialization.JsonPropertyName("contactPerson")]
        public string? ContactPerson { get; set; }= default!;
    
        /// <summary>Trailer fee distribution structure ID. The field is mandatory for the agent fees payment. Allowed values are from the list of Ids defined in MFGI.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("trailerFeeStructureId")]
        public string? TrailerFeeStructureId { get; set; }= default!;
    
        /// <summary>Flag allows the Agent to receive copies of  All transactions confirmation. Allowed values: Y(for Yes), N(for No).</summary>
        [System.Text.Json.Serialization.JsonPropertyName("agentCopiesTransactionsFlag")]
        public string? AgentCopiesTransactionsFlag { get; set; }= default!;
    
        /// <summary>Flag allows the Agent to receive copies of Savings Plan, Annuity and reinvestment confirmation. Allowed values: Y(for Yes), N(for No).</summary>
        [System.Text.Json.Serialization.JsonPropertyName("agentCopiesInstructionsFlag")]
        public string? AgentCopiesInstructionsFlag { get; set; }= default!;
    
        /// <summary>Flag allows the Agent to receive copies of  Register position statement. Allowed values: Y(for Yes), N(for No).</summary>
        [System.Text.Json.Serialization.JsonPropertyName("agentCopiesRegisterPositionsFlag")]
        public string? AgentCopiesRegisterPositionsFlag { get; set; }= default!;
    
        /// <summary>It specifies the group of commission distributions code to which this Agent is linked to. The LoV is available in the CMESS table TA_CGROUP.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("commissionGroup")]
        public string? CommissionGroup { get; set; }= default!;
    
        /// <summary>The agent commission and trailer Fees payment currency (in 3 letter format eg. USD). The field is mandatory if the flag Agent currency Mandatory in application parameter screen is set Y. The LoV is available in the CMESS table MONNAIES.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("agentPaymentCurrency")]
        public string? AgentPaymentCurrency { get; set; }= default!;
    
        /// <summary>Free text</summary>
        [System.Text.Json.Serialization.JsonPropertyName("freeText")]
        public string? FreeText { get; set; }= default!;
    
        /// <summary>Saleswatch type of the agent. For example: 0001(Banks), 0002(brokers), 0003(Insurance) etc.  The LoV is available in the CMESS table TA_SWTYP.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("saleswatchType")]
        public string? SaleswatchType { get; set; }= default!;
    
        /// <summary>It specifies if the split of commissions between the Management company and agents may or may not have to be disclosed on contract notes. Allowed values: 00(Outlet preference). 01(No commission disclosure),02(commission disclosure). The LoV is available in the CMESS table TA_COMDIS.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("commissionDisclosureCode")]
        public string? CommissionDisclosureCode { get; set; }= default!;
    
        /// <summary>Value date method code to manage the settlement date based on the holidays to consider. For example: 0001 (Method1-Postpone Fund Country holiday), 0002 (Method2- Postpone Quotation/Payment currency holiday), 0003(Skip  Quotation/Payment currency holiday) etc.. The LoV is available in the CMESS table TA_FDELAY.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("valueDateMethod")]
        public string? ValueDateMethod { get; set; }= default!;
    
        /// <summary>Counterpart account for credit and debit transactions. For example: 0101(DB Main outlet-CR Main outlet), 0102(DB Main outlet- CR lower outlet). 0103(DB Main outlet-CR Register) etc.  The field is linked to  the Cash and Security management functionality. The LoV is available in the CMESS table TA_CNTTYP.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("counterpartType")]
        public string? CounterpartType { get; set; }= default!;
    
        /// <summary>The model code of contract note sent by the TA. For example: 0001(No contact note), 0002(Cn Model1) etc. The field is linked to  the Cash and Security management functionality. The LoV is available in the CMESS table TA_MODEL.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("contractNotesModel")]
        public string? ContractNotesModel { get; set; }= default!;
    
        /// <summary>The media code through which a contract note is sent to this register by the TA. For example: 0001(No contact note), 0002(Swift MT 515), 0003(File Interface) etc. The field is linked to  the Cash and Security management functionality. The LoV is available in the CMESS table TA_MEDIA.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("contractNotesMedia")]
        public string? ContractNotesMedia { get; set; }= default!;
    
        /// <summary>The recipient code who will receive a copy of the contract note. Allowed values: 0001(Contract Note to main outlet), 0002(Contract Note to lower outlet).0003 (Contract Note to register), 0004(Contract Note to collecting institution). The LoV is available in the CMESS table TA_RECIPT.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("contractNotesRecipient")]
        public string? ContractNotesRecipient { get; set; }= default!;
    
        /// <summary>It specifies the payment month date. The field is mandatory when Frequency code is set as 0001 - Monthly. Available selections start from 1 to 31. </summary>
        [System.Text.Json.Serialization.JsonPropertyName("paymentMonthDate")]
        public double? PaymentMonthDate { get; set; }= default!;
    
        /// <summary>It specifies the type of the agent: Agent designated for retail investorsor Agent designated for institutional investors. Based on this type, commission group to be used at fund level will be determined. Possible values: 0001(Retail), 0002(Institutional) etc. The LoV is available in the CMESS table TA_OUTGRP.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("agentCommissionGroup")]
        public string? AgentCommissionGroup { get; set; }= default!;
    
        /// <summary>It specifies the type of the agent: Agent designated for retail investorsor Agent designated for institutional investors. Based on this type, Trailer fee group to be used at fund level will be determined. Possible values: 0001(Retail), 0002(Institutional) etc. The LoV is available in the CMESS table TA_OUTGRP.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("agentTrailerFeeGroup")]
        public string? AgentTrailerFeeGroup { get; set; }= default!;
    
        /// <summary>Paying Agent Internal ID. The paying agent defined at the agent level will be the default Paying agent for all the clients and the registers linked to the agent.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("payingAgentId")]
        public double? PayingAgentId { get; set; }= default!;
    
        /// <summary>Paying Agent External ID. The paying agent defined at the agent level will be the default Paying agent for all the clients and the registers linked to the agent.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("payingAgentExternalId")]
        public string? PayingAgentExternalId { get; set; }= default!;
    
        /// <summary>Manual global confirm</summary>
        [System.Text.Json.Serialization.JsonPropertyName("manualGlobalConfirmFlag")]
        public string? ManualGlobalConfirmFlag { get; set; }= default!;
    
        /// <summary>The AML type code of the Agent. The LoV is available in the CMESS table TYP_AML.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("amlType")]
        public string? AmlType { get; set; }= default!;
    
        /// <summary>The Distributor ID given by the UK Fund Services Regulator</summary>
        [System.Text.Json.Serialization.JsonPropertyName("fsaNumber")]
        public string? FsaNumber { get; set; }= default!;
    
        /// <summary>Agent Risk Rating assgined as per AML Country Parameterization. For example: 1(RIS1), 2(RIS2) etc.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("riskCode")]
        public string? RiskCode { get; set; }= default!;
    
        /// <summary>The rights on Funds by right type ID. For example: ALL(ALL), DAR0(Right Type DAR0) etc.  The LoV is available in the CMESS table RIGHT_TYPE.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("rightTypeId")]
        public string? RightTypeId { get; set; }= default!;
    
        /// <summary>Flag allows the agent commission payment in quotation currency of the fund. Allowed values: Y(for Yes), N(for No). If flag is set N, the agent commission payment will be done in the agent currency.This flag is only available for agent with type 0006 - Main agent. </summary>
        [System.Text.Json.Serialization.JsonPropertyName("paymentInQuotationCurrencyFlag")]
        public string? PaymentInQuotationCurrencyFlag { get; set; }= default!;
    
        /// <summary>It specifies the payment week daye. The field is mandatory when Frequency code is set as 0006 - Fixed Week Day. For example: 0001(Monday), 0002(Tuesday),0003(Wednesday) etc. The LoV is available in the CMESS table JOURS.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("paymentWeekDay")]
        public string? PaymentWeekDay { get; set; }= default!;
    
        /// <summary>Cutoff group code linked to the Agent for the cut off definition by  group of agents for the exception cut off parameterization. Allowed values are from the list of group Ids in MFGI table CUTOFF_AGT.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("cutOffGroup")]
        public string? CutOffGroup { get; set; }= default!;
    
        /// <summary>Agent client money</summary>
        [System.Text.Json.Serialization.JsonPropertyName("agentClientMoneyFlag")]
        public string? AgentClientMoneyFlag { get; set; }= default!;
    
        /// <summary>In favor of agent</summary>
        [System.Text.Json.Serialization.JsonPropertyName("inFavorOfAgentFlag")]
        public string? InFavorOfAgentFlag { get; set; }= default!;
    
        /// <summary>Flag to enable the phone dealing functionality. Allowed values: Y(to enable),N(to disable).</summary>
        [System.Text.Json.Serialization.JsonPropertyName("phoneDealingFlag")]
        public string? PhoneDealingFlag { get; set; }= default!;
    
        /// <summary>FATCA status code. For example: 0000(TBD), 0001(PFFI-Participating FFI), 0002 (NPFFI-Non participating FFI) etc. The LoV is available in the CMESS table FAT_STAGEN.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("fatcaStatus")]
        public string? FatcaStatus { get; set; }= default!;
    
        /// <summary>GIIN identification number. Each registering FI will be given a FATCA ID that will be used for purposes of establishing and accessing the FI's online FATCA account.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("fatcaGiin")]
        public string? FatcaGiin { get; set; }= default!;
    
        /// <summary>FATCA effective date</summary>
        [System.Text.Json.Serialization.JsonPropertyName("fatcaEffectiveDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? FatcaEffectiveDate { get; set; }= default!;
    
        /// <summary>FATCA expiry dateÂ </summary>
        [System.Text.Json.Serialization.JsonPropertyName("fatcaExpiryDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? FatcaExpiryDate { get; set; }= default!;
    
        /// <summary>FATCA revoke date</summary>
        [System.Text.Json.Serialization.JsonPropertyName("fatcaRevokeDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? FatcaRevokeDate { get; set; }= default!;
    
        /// <summary>FATCA exempt reason code of the Fund promoter. Allowed values: 0001(Foreign government), 0002(Foreign retirement plan), 0003(Non financial publicly traded company), 0004 (Exempt US entity), TBD(TBD). The LoV is available in the CMESS table FAT_EXEMPT.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("fatcaExemptionReason")]
        public string? FatcaExemptionReason { get; set; }= default!;
    
        /// <summary>Entity code in charge of FATCA reporting and controls. For example: 0000(TBD), 0001(Reported by TA), 0002(Reported by agent) etc. The LoV is available in the CMESS table FAT_REPENT.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("fatcaReportingEntity")]
        public string? FatcaReportingEntity { get; set; }= default!;
    
        /// <summary>Payment amount handling method in contract level. For example: 0001(Use order amount for subs and reds). The LoV is available in the CMESS table PAY_HANDLE.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("paymentAmountHandling")]
        public string? PaymentAmountHandling { get; set; }= default!;
    
        /// <summary>Tax number. Field is mandatory when country of residence has been defined as Tax No. mandatory for clients in the ZWIST calculation definition in MFGI.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("taxNumber")]
        public string? TaxNumber { get; set; }= default!;
    
        /// <summary>PII disclosure code to specify if the entity consents to share its PII information or not. Allowed values: 0001(Consent), 0002(Non-Consent). The LoV is available in the CMESS table PII_DISC.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("piiDisclosure")]
        public string? PiiDisclosure { get; set; }= default!;
    
        /// <summary>Flag allows to enable the global ordering functionality.  Allowed values: Y(for Yes),N(for No)</summary>
        [System.Text.Json.Serialization.JsonPropertyName("globalOrderingFlag")]
        public string? GlobalOrderingFlag { get; set; }= default!;
    
        /// <summary>It specifies the cash movements are to be grouped or Netted. For example: 0001(Individual orders in Fund currency), 0002(Individual orders in payment currency), 0003(Bulked orders Fund currency) etc. The LoV is available in the CMESS table TYPE_BN.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionBulkingNetting")]
        public string? TransactionBulkingNetting { get; set; }= default!;
    
        /// <summary>The distributer channel code of the Agent. Alloowed values: 0001(NSCC), 0002(Proserve), 0003(Paradign), 0004(Marbo). The LoV is available in the CMESS table DIST_MTD.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("distributionChannel")]
        public string? DistributionChannel { get; set; }= default!;
    
        /// <summary>The payment process to be followed for the deals. Allowed values: 01(STP), 02(Semi-STP). The LoV is available in the CMESS table TA_PAYPROC.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("paymentProcess")]
        public string? PaymentProcess { get; set; }= default!;
    
        /// <summary>Fund Promoter Internal ID linked to the Agent.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("fundPromoterId")]
        public double? FundPromoterId { get; set; }= default!;
    
        /// <summary>Fund Promoter external ID linked to the Agent.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("fundPromoterExternalId")]
        public string? FundPromoterExternalId { get; set; }= default!;
    
        /// <summary>NSCC Agent Type code. This field is mandatory only if Agent type is 0006-Main agent and Settlement type is 0003-NSCC. Allowed values: 0001(Clearing broker), 0002(Executing Broker).  The LoV is available in the CMESS table BROK_TYP.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("nsccAgentType")]
        public string? NsccAgentType { get; set; }= default!;
    
        /// <summary>It specifies the Broker Identification Number(BIN) format check. It is available only if Agent type is 0006-Main agent and Settlement type-0003-NSCC. The LoV is available in the CMESS table BIN_CHECK.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("binCheck")]
        public string? BinCheck { get; set; }= default!;
    
        /// <summary>General Ledger account group ID</summary>
        [System.Text.Json.Serialization.JsonPropertyName("glAccountGroupId")]
        public string? GlAccountGroupId { get; set; }= default!;
    
        /// <summary>Reporting Currency (in 3 letter ISO code, Eg: EUR). The LoV is available in the CMESS table MONNAIES.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("reportingCurrency")]
        public string? ReportingCurrency { get; set; }= default!;
    
        /// <summary>Agent Internal ID relevant for AML documents check.This field is only for informative purpose.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("amlAgentId")]
        public double? AmlAgentId { get; set; }= default!;
    
        /// <summary>Agent External ID relevant for AML documents check.This field is only for informative purpose.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("amlAgentExternalId")]
        public string? AmlAgentExternalId { get; set; }= default!;
    
        /// <summary>Equalization Register internal ID at the agent level</summary>
        [System.Text.Json.Serialization.JsonPropertyName("equalizationRegisterId")]
        public double? EqualizationRegisterId { get; set; }= default!;
    
        /// <summary>Equalization Register external ID at the agent level</summary>
        [System.Text.Json.Serialization.JsonPropertyName("equalizationRegisterExternalId")]
        public string? EqualizationRegisterExternalId { get; set; }= default!;
    
        /// <summary>It specifies that the Agent is linked to the Contact lists of the Agent Internal ID.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("contactAgentId")]
        public double? ContactAgentId { get; set; }= default!;
    
        /// <summary>It specifies that the Agent is linked to the Contact lists of the Agent External ID.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("contactAgentExternalId")]
        public string? ContactAgentExternalId { get; set; }= default!;
    
        /// <summary>Technical register Internal ID having Person type as 0900-Fund, can be specified as Cash dividend register External ID. This field is mandatory when the flag Global ordering is set Y. </summary>
        [System.Text.Json.Serialization.JsonPropertyName("cashDividendRegisterId")]
        public double? CashDividendRegisterId { get; set; }= default!;
    
        /// <summary>Technical register External ID having Person type as 0900-Fund, can be specified as Cash dividend register External ID. This field is mandatory when the flag Global ordering is set Y. </summary>
        [System.Text.Json.Serialization.JsonPropertyName("cashDividendRegisterExternalId")]
        public string? CashDividendRegisterExternalId { get; set; }= default!;
    
        /// <summary>Technical Register Internal ID having Person type as 0900-Fund, can be specified as Reinvestment register Internal ID. This field is mandatory when the flag Global ordering is set Y. </summary>
        [System.Text.Json.Serialization.JsonPropertyName("reinvestmentRegisterId")]
        public double? ReinvestmentRegisterId { get; set; }= default!;
    
        /// <summary>Technical Register External ID having Person type as 0900-Fund, can be specified as Reinvestment register External ID. This field is mandatory when the flag Global ordering is set Y. </summary>
        [System.Text.Json.Serialization.JsonPropertyName("reinvestmentRegisterExternalId")]
        public string? ReinvestmentRegisterExternalId { get; set; }= default!;
    
        /// <summary>Flag allows to override the commission STP - interface file. Allowed values: Y(for Yes), N(for No).</summary>
        [System.Text.Json.Serialization.JsonPropertyName("commissionOverridesFlag")]
        public string? CommissionOverridesFlag { get; set; }= default!;
    
        /// <summary>Marketing code linked to the Agent. For example: 0001(Marketing Code1), 0002(Marketing code 2) etc. Retail fund related field. The LoV is available in the CMESS table MKT_CODE.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("marketingCode")]
        public string? MarketingCode { get; set; }= default!;
    
        /// <summary>It specifies the default commission type of the agent. For example: 0001(FEL), 0002(Pre- finance fee), 0003(Purchase fee)etc. The LoV is available in the CMESS table COMM_TYPE.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("defaultCommissionType")]
        public string? DefaultCommissionType { get; set; }= default!;
    
        /// <summary>CRS status code. Allowed values: 0000 (TBD), 0001 (Active NFE), 0002 (Passive NFE). The LoV is available in the CMESS table CRS_STAGEN.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("crsStatus")]
        public string? CrsStatus { get; set; }= default!;
    
        /// <summary>Tax ID for FATCA process.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("tinNumber")]
        public string? TinNumber { get; set; }= default!;
    
        /// <summary>It specifies the  maximum length of the External Reference of Outlet for NSCC deal. Allowed values are from 1 to 9.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("branchLength")]
        public double? BranchLength { get; set; }= default!;
    
        /// <summary>Status of Agent as per MIFID directives. Allowed values: 0001(independent Advisor), 0002(Non-Independent Advisor), 0003 (Unknown).  The LoV is available in the CMESS table MIFID_STAT.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("mifidStatus")]
        public string? MifidStatus { get; set; }= default!;
    
        /// <summary>The Advisory service type code of the Client. For example: D (for Discretionary) , E (for Execution only) , ND(for Non-Discretionary).The LoV is available in the CMESS table MIFID_ADV.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("advisoryType")]
        public string? AdvisoryType { get; set; }= default!;
    
        /// <summary>Agent status code. For example: 1(Active), 2(Inactive), 3(Deleted) etc. The LoV is available in the CMESS table TYPE_USE.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("entityStatus")]
        public string? EntityStatus { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetAgentByagentIdSuccessheaderResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("pagination")]
        public PaginationSchema? Pagination { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public AuditSchema? Audit { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public SuccessHeaderstatusSchema? Status { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("company")]
        public string? Company { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("username")]
        public string? Username { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("referenceId")]
        public string? ReferenceId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("token")]
        public string? Token { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetAgentByagentIdrecordsSchema : System.Collections.ObjectModel.Collection<_0>
    {
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetAgentByagentIdSuccessbodyResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("records")]
        public GetAgentByagentIdrecordsSchema? Records { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetAgentByagentIdSuccessResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public GetAgentByagentIdSuccessheaderResponse? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public GetAgentByagentIdSuccessbodyResponse? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetAgentByagentIdErrorheaderResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("pagination")]
        public PaginationSchema? Pagination { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public AuditSchema? Audit { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public ErrorHeaderstatusSchema? Status { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("referenceId")]
        public string? ReferenceId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("token")]
        public string? Token { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("username")]
        public string? Username { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetAgentByagentIdErrorbodyResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("items")]
        public System.Collections.Generic.ICollection<Items2>? Items { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetAgentByagentIdErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public GetAgentByagentIdErrorheaderResponse? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public object? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetAgentSuccessheaderResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("pagination")]
        public PaginationSchema? Pagination { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public AuditSchema? Audit { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public SuccessHeaderstatusSchema? Status { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("company")]
        public string? Company { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("username")]
        public string? Username { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("referenceId")]
        public string? ReferenceId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("token")]
        public string? Token { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetAgentrecordsSchema : System.Collections.ObjectModel.Collection<_0>
    {
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetAgentSuccessbodyResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("records")]
        public GetAgentrecordsSchema? Records { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetAgentSuccessResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public GetAgentSuccessheaderResponse? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public GetAgentSuccessbodyResponse? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetAgentErrorheaderResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("pagination")]
        public PaginationSchema? Pagination { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public AuditSchema? Audit { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public ErrorHeaderstatusSchema? Status { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("referenceId")]
        public string? ReferenceId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("token")]
        public string? Token { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("username")]
        public string? Username { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetAgentErrorbodyResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("items")]
        public System.Collections.Generic.ICollection<Items3>? Items { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetAgentErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public GetAgentErrorheaderResponse? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public object? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PutAgentByinternalIdSuccessheaderResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("pagination")]
        public PaginationSchema? Pagination { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public AuditSchema? Audit { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public SuccessHeaderstatusSchema? Status { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("company")]
        public string? Company { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("username")]
        public string? Username { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("referenceId")]
        public string? ReferenceId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("token")]
        public string? Token { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PutAgentByinternalIdrecordsSchema : System.Collections.ObjectModel.Collection<_0>
    {
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PutAgentByinternalIdSuccessbodyResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("records")]
        public PutAgentByinternalIdrecordsSchema? Records { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PutAgentByinternalIdSuccessResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public PutAgentByinternalIdSuccessheaderResponse? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public PutAgentByinternalIdSuccessbodyResponse? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PutAgentByinternalIdErrorheaderResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("pagination")]
        public PaginationSchema? Pagination { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public AuditSchema? Audit { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public ErrorHeaderstatusSchema? Status { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("referenceId")]
        public string? ReferenceId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("token")]
        public string? Token { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("username")]
        public string? Username { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PutAgentByinternalIdErrorbodyResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("items")]
        public System.Collections.Generic.ICollection<Items4>? Items { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PutAgentByinternalIdErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public PutAgentByinternalIdErrorheaderResponse? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public object? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class _0BULKPayload 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public object? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public Body? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PutAgentSuccessheaderResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("pagination")]
        public PaginationSchema? Pagination { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public AuditSchema? Audit { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public SuccessHeaderstatusSchema? Status { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("company")]
        public string? Company { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("username")]
        public string? Username { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("referenceId")]
        public string? ReferenceId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("token")]
        public string? Token { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PutAgentrecordsSchema : System.Collections.ObjectModel.Collection<_0>
    {
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PutAgentSuccessbodyResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("records")]
        public PutAgentrecordsSchema? Records { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PutAgentSuccessResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public PutAgentSuccessheaderResponse? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public PutAgentSuccessbodyResponse? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PutAgentErrorheaderResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("pagination")]
        public PaginationSchema? Pagination { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public AuditSchema? Audit { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public ErrorHeaderstatusSchema? Status { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("referenceId")]
        public string? ReferenceId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("token")]
        public string? Token { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("username")]
        public string? Username { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PutAgentErrorbodyResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("items")]
        public System.Collections.Generic.ICollection<Items5>? Items { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PutAgentErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public PutAgentErrorheaderResponse? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public object? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DeleteAgentSuccessheaderResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("pagination")]
        public PaginationSchema? Pagination { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public AuditSchema? Audit { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public SuccessHeaderstatusSchema? Status { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("company")]
        public string? Company { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("username")]
        public string? Username { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("referenceId")]
        public string? ReferenceId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("token")]
        public string? Token { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DeleteAgentrecordsSchema : System.Collections.ObjectModel.Collection<_0>
    {
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DeleteAgentSuccessbodyResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("records")]
        public DeleteAgentrecordsSchema? Records { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DeleteAgentSuccessResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public DeleteAgentSuccessheaderResponse? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public DeleteAgentSuccessbodyResponse? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DeleteAgentErrorheaderResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("pagination")]
        public PaginationSchema? Pagination { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public AuditSchema? Audit { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public ErrorHeaderstatusSchema? Status { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("referenceId")]
        public string? ReferenceId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("token")]
        public string? Token { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("username")]
        public string? Username { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DeleteAgentErrorbodyResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("items")]
        public System.Collections.Generic.ICollection<Items6>? Items { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DeleteAgentErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public DeleteAgentErrorheaderResponse? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public object? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DeleteAgentByinternalIdSuccessheaderResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("pagination")]
        public PaginationSchema? Pagination { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public AuditSchema? Audit { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public SuccessHeaderstatusSchema? Status { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("company")]
        public string? Company { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("username")]
        public string? Username { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("referenceId")]
        public string? ReferenceId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("token")]
        public string? Token { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DeleteAgentByinternalIdrecordsSchema : System.Collections.ObjectModel.Collection<_0>
    {
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DeleteAgentByinternalIdSuccessbodyResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("records")]
        public DeleteAgentByinternalIdrecordsSchema? Records { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DeleteAgentByinternalIdSuccessResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public DeleteAgentByinternalIdSuccessheaderResponse? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public DeleteAgentByinternalIdSuccessbodyResponse? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DeleteAgentByinternalIdErrorheaderResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("pagination")]
        public PaginationSchema? Pagination { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public AuditSchema? Audit { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public ErrorHeaderstatusSchema? Status { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("referenceId")]
        public string? ReferenceId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("token")]
        public string? Token { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("username")]
        public string? Username { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DeleteAgentByinternalIdErrorbodyResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("items")]
        public System.Collections.Generic.ICollection<Items7>? Items { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DeleteAgentByinternalIdErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public DeleteAgentByinternalIdErrorheaderResponse? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public object? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Details 
    {
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Items 
    {
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Items2 
    {
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Items3 
    {
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Items4 
    {
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Body 
    {
        [System.Text.Json.Serialization.JsonPropertyName("agents")]
        public System.Collections.Generic.ICollection<_0>? Agents { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Items5 
    {
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Items6 
    {
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Items7 
    {
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal class DateFormatConverter : Newtonsoft.Json.Converters.IsoDateTimeConverter
    {
        public DateFormatConverter()
        {
            DateTimeFormat = "yyyy-MM-dd";
        }
    }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016