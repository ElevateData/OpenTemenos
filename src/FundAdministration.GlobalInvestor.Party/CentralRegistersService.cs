//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using Shared.Models;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"

namespace FundAdministration.GlobalInvestor.Party.CentralRegisters
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface ICentralRegistersService
    {
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Creates Central Registers</summary>
        /// <param name="payload">postCentralRegisters Payload</param>
        /// <param name="referenceId">uniqueId for security purpose</param>
        /// <param name="token">unique token</param>
        /// <param name="username">username</param>
        /// <param name="company">company name</param>
        /// <param name="command">API operations like INVOKE, VALIDATE, PROCESS can be set or by default PROCESS is set</param>
        /// <returns>postCentralRegisters Success Response</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PostCentralRegistersSuccessResponse> PostCentralRegistersAsync(_0BULKPayload payload, string? referenceId = null, string? token = null, string? username = null, string? company = null, string? command = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class _0BULKPayload 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public object? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public Body? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PaginationSchema 
    {
        [System.Text.Json.Serialization.JsonPropertyName("page")]
        public string? Page { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("size")]
        public string? Size { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("count")]
        public string? Count { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("total")]
        public string? Total { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class AuditSchema 
    {
        [System.Text.Json.Serialization.JsonPropertyName("startTime")]
        public string? StartTime { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("endTime")]
        public string? EndTime { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("processTime")]
        public string? ProcessTime { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SuccessHeaderstatusSchema 
    {
        [System.Text.Json.Serialization.JsonPropertyName("result")]
        public string? Result { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("HTTP_MESSAGE")]
        public string? HTTP_MESSAGE { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string? Description { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("HTTP_CODE")]
        public string? HTTP_CODE { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("requestId")]
        public string? RequestId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("responseId")]
        public string? ResponseId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("eTag")]
        public string? ETag { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("lastModified")]
        public string? LastModified { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PostCentralRegistersSuccessheaderResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("pagination")]
        public PaginationSchema? Pagination { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public AuditSchema? Audit { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public SuccessHeaderstatusSchema? Status { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("company")]
        public string? Company { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("username")]
        public string? Username { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("referenceId")]
        public string? ReferenceId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("token")]
        public string? Token { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PostCentralRegistersrecordsSchema : System.Collections.ObjectModel.Collection<_0>
    {
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PostCentralRegistersSuccessbodyResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("records")]
        public PostCentralRegistersrecordsSchema? Records { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PostCentralRegistersSuccessResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public PostCentralRegistersSuccessheaderResponse? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public PostCentralRegistersSuccessbodyResponse? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ErrorHeaderstatusSchema 
    {
        [System.Text.Json.Serialization.JsonPropertyName("result")]
        public string? Result { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("HTTP_MESSAGE")]
        public string? HTTP_MESSAGE { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string? Description { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("HTTP_CODE")]
        public string? HTTP_CODE { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("requestId")]
        public string? RequestId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("responseId")]
        public string? ResponseId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("eTag")]
        public string? ETag { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("lastModified")]
        public string? LastModified { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("details")]
        public System.Collections.Generic.ICollection<Details>? Details { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PostCentralRegistersErrorheaderResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("pagination")]
        public PaginationSchema? Pagination { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public AuditSchema? Audit { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public ErrorHeaderstatusSchema? Status { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("referenceId")]
        public string? ReferenceId { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("token")]
        public string? Token { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("username")]
        public string? Username { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PostCentralRegistersErrorbodyResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("items")]
        public System.Collections.Generic.ICollection<Items>? Items { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PostCentralRegistersErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public PostCentralRegistersErrorheaderResponse? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public object? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class _0 
    {
        /// <summary>It specifies the type of record that is loaded</summary>
        [System.Text.Json.Serialization.JsonPropertyName("recordIndicator")]
        public string? RecordIndicator { get; set; }= default!;
    
        /// <summary>Internal ID of the correspondant</summary>
        [System.Text.Json.Serialization.JsonPropertyName("correspondantNumber")]
        public string? CorrespondantNumber { get; set; }= default!;
    
        /// <summary>Name of the correspondant</summary>
        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string? Name { get; set; }= default!;
    
        /// <summary>Authority who has provided the Identification. Allowed values are from the list of values defined in MFGI.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("providerId")]
        public string? ProviderId { get; set; }= default!;
    
        /// <summary>External ID of the correspondant</summary>
        [System.Text.Json.Serialization.JsonPropertyName("correspondantId")]
        public string? CorrespondantId { get; set; }= default!;
    
        /// <summary>It specifies the type of the correspondant. For example: AU(Auditor), BK(Bank), DE(Depository)etc. Default value will be IS-Issuer. The LoV is available in the CMESS table CTCL.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("thirdPartyType")]
        public string? ThirdPartyType { get; set; }= default!;
    
        /// <summary>It specifies the native country of the correspondant. The LoV is available in the CMESS table PAYS.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("nationality")]
        public string? Nationality { get; set; }= default!;
    
        /// <summary>The correspondant's country of residence. The LoV is available in the CMESS table PAYS.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("domicile")]
        public string? Domicile { get; set; }= default!;
    
        /// <summary>It specifies the branch code of the correspondant. Allowed values are from the list of codes defined in MFGI.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("branch")]
        public double? Branch { get; set; }= default!;
    
        /// <summary>Address line 1</summary>
        [System.Text.Json.Serialization.JsonPropertyName("addressLine1")]
        public string? AddressLine1 { get; set; }= default!;
    
        /// <summary>Address line 2</summary>
        [System.Text.Json.Serialization.JsonPropertyName("addressLine2")]
        public string? AddressLine2 { get; set; }= default!;
    
        /// <summary>Address line 3</summary>
        [System.Text.Json.Serialization.JsonPropertyName("addressLine3")]
        public string? AddressLine3 { get; set; }= default!;
    
        /// <summary>Address line 4</summary>
        [System.Text.Json.Serialization.JsonPropertyName("addressLine4")]
        public string? AddressLine4 { get; set; }= default!;
    
        /// <summary>Language code. For example :1(French), 2(English), 3(Deutsch) etc.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("languageCode")]
        public string? LanguageCode { get; set; }= default!;
    
        /// <summary>It specifies the trust company to measure the trust limits of an investment.  Allowed values are from the list of Ids defined in MFGI.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("externalTrustReference")]
        public string? ExternalTrustReference { get; set; }= default!;
    
        /// <summary>Category</summary>
        [System.Text.Json.Serialization.JsonPropertyName("category")]
        public string? Category { get; set; }= default!;
    
        /// <summary>Issuers equity</summary>
        [System.Text.Json.Serialization.JsonPropertyName("issuersEquity")]
        public string? IssuersEquity { get; set; }= default!;
    
        /// <summary>Dep. insur.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("depositInsurance")]
        public string? DepositInsurance { get; set; }= default!;
    
        /// <summary>It specifies the Deal account of Correspondent account linked to the central register. The field is not used by MultiFonds TA application.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("dealAccount")]
        public string? DealAccount { get; set; }= default!;
    
        /// <summary>Default account margin for future of  Correspondent account linked to the central register. The field is not used by MultiFonds TA application.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("defaultAccountMargin")]
        public string? DefaultAccountMargin { get; set; }= default!;
    
        /// <summary>Surname of the correspondant</summary>
        [System.Text.Json.Serialization.JsonPropertyName("surname")]
        public string? Surname { get; set; }= default!;
    
        /// <summary>First name of the correspondant</summary>
        [System.Text.Json.Serialization.JsonPropertyName("forename")]
        public string? Forename { get; set; }= default!;
    
        /// <summary>First telephone number of the correspondant</summary>
        [System.Text.Json.Serialization.JsonPropertyName("telephoneNumber")]
        public string? TelephoneNumber { get; set; }= default!;
    
        /// <summary>Second telephone phone number of the correspondant</summary>
        [System.Text.Json.Serialization.JsonPropertyName("telephone2")]
        public string? Telephone2 { get; set; }= default!;
    
        /// <summary>FAX number of the correspondant</summary>
        [System.Text.Json.Serialization.JsonPropertyName("faxNumber")]
        public string? FaxNumber { get; set; }= default!;
    
        /// <summary>Telex number of the correspondant</summary>
        [System.Text.Json.Serialization.JsonPropertyName("telexNumber")]
        public string? TelexNumber { get; set; }= default!;
    
        /// <summary>Title words of the correspondant.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("title")]
        public string? Title { get; set; }= default!;
    
        /// <summary>Salutation words of the correspondant.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("greetings")]
        public string? Greetings { get; set; }= default!;
    
        /// <summary>It specifies the country to which the correspondant pays tax. The LoV is available in the CMESS table PAYS.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("taxResidence")]
        public string? TaxResidence { get; set; }= default!;
    
        /// <summary>Designation that the correspondant holds</summary>
        [System.Text.Json.Serialization.JsonPropertyName("designation")]
        public string? Designation { get; set; }= default!;
    
        /// <summary>Officer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("officer")]
        public string? Officer { get; set; }= default!;
    
        /// <summary>Introd.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("introducer")]
        public string? Introducer { get; set; }= default!;
    
        /// <summary>It specifies the correspondant to which the mails are sent to. Allowed values are from the list of Ids defined in MFGI.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("mailCorrespondance")]
        public string? MailCorrespondance { get; set; }= default!;
    
        /// <summary>Payment type code of the correspondant. Allowed values: 1(Check), 2(Current account). The LoV is available in the CMESS table TYPPMT</summary>
        [System.Text.Json.Serialization.JsonPropertyName("paymentType")]
        public string? PaymentType { get; set; }= default!;
    
        /// <summary>Payment type description of the correspondant. </summary>
        [System.Text.Json.Serialization.JsonPropertyName("paymentDescription")]
        public string? PaymentDescription { get; set; }= default!;
    
        /// <summary>Share fees</summary>
        [System.Text.Json.Serialization.JsonPropertyName("feeShareCode")]
        public string? FeeShareCode { get; set; }= default!;
    
        /// <summary>Bank Identifier Code of the correspondant</summary>
        [System.Text.Json.Serialization.JsonPropertyName("BICCode")]
        public string? BICCode { get; set; }= default!;
    
        /// <summary>Swift ID of the Correspondant</summary>
        [System.Text.Json.Serialization.JsonPropertyName("swiftID")]
        public string? SwiftID { get; set; }= default!;
    
        /// <summary>Created by</summary>
        [System.Text.Json.Serialization.JsonPropertyName("bankleizahl")]
        public string? Bankleizahl { get; set; }= default!;
    
        /// <summary>Allowed values are Y, N. Blank value is considerd as N. Y value means the equivalence for the correspondent ID with correspondantExternalId will be created if the providerId is 00</summary>
        [System.Text.Json.Serialization.JsonPropertyName("correspondantUpdateFlag")]
        public string? CorrespondantUpdateFlag { get; set; }= default!;
    
        /// <summary>It specifies tax options. For example: 01(Withholding tax), 01(Exchange of information)etc. The LoV is available in the CMESS table TA_TAXOPPA</summary>
        [System.Text.Json.Serialization.JsonPropertyName("taxOption")]
        public string? TaxOption { get; set; }= default!;
    
        /// <summary>It specifies the paying agent type. For example:  00(External/Np processing), 01(Internal/Active), 02(Intermediate/Passive). The LoV is available in the CMESS table TA_PATYPE</summary>
        [System.Text.Json.Serialization.JsonPropertyName("payingAgentType")]
        public string? PayingAgentType { get; set; }= default!;
    
        /// <summary>It specifies the Right on fund by Right type ID.  For example: ALL(ALL), DAR0(Right Type DAR0) etc.  The LoV is available in the CMESS table RIGHT_TYPE.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("rightType")]
        public string? RightType { get; set; }= default!;
    
        /// <summary>Address line 5</summary>
        [System.Text.Json.Serialization.JsonPropertyName("addressLine5")]
        public string? AddressLine5 { get; set; }= default!;
    
        /// <summary>Address line 6</summary>
        [System.Text.Json.Serialization.JsonPropertyName("addressLine6")]
        public string? AddressLine6 { get; set; }= default!;
    
        /// <summary>Postal zip code of correspondant.  Allowed values are from the list of codes defined in MFGI.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("zipCode")]
        public string? ZipCode { get; set; }= default!;
    
        /// <summary>This field is relevant only if the thirdPartyType is GE - Management Company. For all others this field is stored as N. Allowed values are Y(for Yes), N(for No). </summary>
        [System.Text.Json.Serialization.JsonPropertyName("noDocumentFlag")]
        public string? NoDocumentFlag { get; set; }= default!;
    
        /// <summary>The payment instruction type of the correspondant. For example: 0001(Cash), 0002(Preadvice), 0003(Swift)etc. The LoV is available in the CMESS table PY_INSTYP.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("paymentInstuctionType")]
        public string? PaymentInstuctionType { get; set; }= default!;
    
        /// <summary>Global Intermediary Identification Number of the correspondant</summary>
        [System.Text.Json.Serialization.JsonPropertyName("GIInNumber")]
        public string? GIInNumber { get; set; }= default!;
    
        /// <summary>It specifies the name of the contact of the correspondant</summary>
        [System.Text.Json.Serialization.JsonPropertyName("attentionOfLine1")]
        public string? AttentionOfLine1 { get; set; }= default!;
    
        /// <summary>Short name of the correspondant</summary>
        [System.Text.Json.Serialization.JsonPropertyName("shortId")]
        public string? ShortId { get; set; }= default!;
    
        /// <summary>It specifies the global order sending method code used for External TA (taken either from TFC or from TA fund) available in the Global ordering of subscription/ redemption transaction. Mandatory if the ThirdPartyType is CT(Central Transfer Agent). For example: 01(Fax), 02(Swift MT), 03(Swift MX), 04(Manual sending). The LoV is available in the CMESS table TYPE_MTHD.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("subRedMethod")]
        public string? SubRedMethod { get; set; }= default!;
    
        /// <summary>It specifies the global order sending method code used for External TA (taken either from TFC or from TA fund) available in the Global ordering of switch transaction. Mandatory if the ThirdPartyType is CT(Central Transfer Agent). For example: 01(Fax), 02(Swift MT), 03(Swift MX), 04(Manual sending). The LoV is available in the CMESS table TYPE_MTHD.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("switchMethod")]
        public string? SwitchMethod { get; set; }= default!;
    
        /// <summary>It specifies the global order sending method code used for External TA (taken either from TFC or from TA fund) available in the Global ordering of transfer transaction. Mandatory if the ThirdPartyType is CT(Central Transfer Agent). For example: 01(Fax), 02(Swift MT), 03(Swift MX), 04(Manual sending). The LoV is available in the CMESS table TYPE_MTHD.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transferMethod")]
        public string? TransferMethod { get; set; }= default!;
    
        /// <summary>Code for reception mode related to NSCC and Swift. For example: 0010(NSCC generic), 1502(SWIFT FIN)etc.  Mandatory if the ThirdPartyType is SC(STP Counterpart). The LoV is available in the CMESS table TA_ORDREC2. </summary>
        [System.Text.Json.Serialization.JsonPropertyName("receptionMode")]
        public string? ReceptionMode { get; set; }= default!;
    
        /// <summary>Swift language of the correspondant. For example: FIN(Swift FIN), SWBI(Swift BIC code), XML(Swift XML)etc. The LoV is available in the CMESS table SWLANG</summary>
        [System.Text.Json.Serialization.JsonPropertyName("SWIFTLANG")]
        public string? SWIFTLANG { get; set; }= default!;
    
        /// <summary>It specifies the User group ID for which user's rights to be given on order to load the STP orders. For example: @@@@(All group), DUB(Dublin), LUX(Luxembourg)etc. The LoV is available in the CMESS table GRP_USER</summary>
        [System.Text.Json.Serialization.JsonPropertyName("STPGroup")]
        public string? STPGroup { get; set; }= default!;
    
        /// <summary>TAX identification number of the correspondant</summary>
        [System.Text.Json.Serialization.JsonPropertyName("taxIdentificationNumber")]
        public string? TaxIdentificationNumber { get; set; }= default!;
    
        /// <summary>If the correspondant has the newDepositor (which is also a correspondant) linked and the correspondant is linked with an TFC as sponsoring entity then when Tax log file is generated the newDepositor appears on the Tax log file.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("newDepositor")]
        public double? NewDepositor { get; set; }= default!;
    
        /// <summary>Currency</summary>
        [System.Text.Json.Serialization.JsonPropertyName("paymentCurrency")]
        public string? PaymentCurrency { get; set; }= default!;
    
        /// <summary>Bene. account number</summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountNumber")]
        public string? AccountNumber { get; set; }= default!;
    
        /// <summary>Bene. account name</summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountName")]
        public string? AccountName { get; set; }= default!;
    
        /// <summary>Bene. IBAN</summary>
        [System.Text.Json.Serialization.JsonPropertyName("ibanCode")]
        public string? IbanCode { get; set; }= default!;
    
        /// <summary>Corr.1 bank</summary>
        [System.Text.Json.Serialization.JsonPropertyName("correspondantNumber1")]
        public string? CorrespondantNumber1 { get; set; }= default!;
    
        /// <summary>Corr.1 account number</summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountNumber1")]
        public string? AccountNumber1 { get; set; }= default!;
    
        /// <summary>Corr.1 account name</summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountName1")]
        public double? AccountName1 { get; set; }= default!;
    
        /// <summary>Corr.1 IBAN</summary>
        [System.Text.Json.Serialization.JsonPropertyName("ibanCode1")]
        public string? IbanCode1 { get; set; }= default!;
    
        /// <summary>Corr.2 bank</summary>
        [System.Text.Json.Serialization.JsonPropertyName("correspondantNumber2")]
        public string? CorrespondantNumber2 { get; set; }= default!;
    
        /// <summary>Corr.2 account number</summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountNumber2")]
        public string? AccountNumber2 { get; set; }= default!;
    
        /// <summary>Corr.2 account name</summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountName2")]
        public string? AccountName2 { get; set; }= default!;
    
        /// <summary>Corr.2 IBAN</summary>
        [System.Text.Json.Serialization.JsonPropertyName("ibanCode2")]
        public string? IbanCode2 { get; set; }= default!;
    
        /// <summary>Corr.3 bank</summary>
        [System.Text.Json.Serialization.JsonPropertyName("correspondantNumber3")]
        public string? CorrespondantNumber3 { get; set; }= default!;
    
        /// <summary>Corr.3 account number</summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountNumber3")]
        public string? AccountNumber3 { get; set; }= default!;
    
        /// <summary>Corr.3 account name</summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountName3")]
        public string? AccountName3 { get; set; }= default!;
    
        /// <summary>Corr.3 IBAN</summary>
        [System.Text.Json.Serialization.JsonPropertyName("ibanCode3")]
        public string? IbanCode3 { get; set; }= default!;
    
        /// <summary>Corr.4 bank</summary>
        [System.Text.Json.Serialization.JsonPropertyName("correspondantNumber4")]
        public string? CorrespondantNumber4 { get; set; }= default!;
    
        /// <summary>Corr.4 account number</summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountNumber4")]
        public string? AccountNumber4 { get; set; }= default!;
    
        /// <summary>Corr.4 account name</summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountName4")]
        public string? AccountName4 { get; set; }= default!;
    
        /// <summary>Corr.4 IBAN</summary>
        [System.Text.Json.Serialization.JsonPropertyName("ibanCode4")]
        public string? IbanCode4 { get; set; }= default!;
    
        /// <summary>Corr.5 bank</summary>
        [System.Text.Json.Serialization.JsonPropertyName("correspondantNumber5")]
        public string? CorrespondantNumber5 { get; set; }= default!;
    
        /// <summary>Corr.5 account number</summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountNumber5")]
        public string? AccountNumber5 { get; set; }= default!;
    
        /// <summary>Corr.5 account name</summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountName5")]
        public string? AccountName5 { get; set; }= default!;
    
        /// <summary>Corr.5 IBAN</summary>
        [System.Text.Json.Serialization.JsonPropertyName("ibanCode5")]
        public string? IbanCode5 { get; set; }= default!;
    
        /// <summary>Group/Netting</summary>
        [System.Text.Json.Serialization.JsonPropertyName("nettingGroup")]
        public string? NettingGroup { get; set; }= default!;
    
        /// <summary>Group/Netting type</summary>
        [System.Text.Json.Serialization.JsonPropertyName("groupNettingType")]
        public string? GroupNettingType { get; set; }= default!;
    
        /// <summary>Acc. type</summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountType")]
        public string? AccountType { get; set; }= default!;
    
        /// <summary>FFC acc. name</summary>
        [System.Text.Json.Serialization.JsonPropertyName("finalBeneficiary")]
        public string? FinalBeneficiary { get; set; }= default!;
    
        /// <summary>Operation</summary>
        [System.Text.Json.Serialization.JsonPropertyName("operationCode")]
        public string? OperationCode { get; set; }= default!;
    
        /// <summary>Fund</summary>
        [System.Text.Json.Serialization.JsonPropertyName("nptfCode")]
        public string? NptfCode { get; set; }= default!;
    
        /// <summary>Share class</summary>
        [System.Text.Json.Serialization.JsonPropertyName("shareClassCode")]
        public string? ShareClassCode { get; set; }= default!;
    
        /// <summary>Type</summary>
        [System.Text.Json.Serialization.JsonPropertyName("chargeType")]
        public string? ChargeType { get; set; }= default!;
    
        /// <summary>FFC acc. number</summary>
        [System.Text.Json.Serialization.JsonPropertyName("FCCAccountNumber")]
        public string? FCCAccountNumber { get; set; }= default!;
    
        /// <summary>FFC reference</summary>
        [System.Text.Json.Serialization.JsonPropertyName("FCCReference")]
        public string? FCCReference { get; set; }= default!;
    
        /// <summary>3rd party payment</summary>
        [System.Text.Json.Serialization.JsonPropertyName("thirdPartyPaymentFlag")]
        public string? ThirdPartyPaymentFlag { get; set; }= default!;
    
        /// <summary>Swift Pay. Bank</summary>
        [System.Text.Json.Serialization.JsonPropertyName("SwiftBeneficiaryFlag")]
        public string? SwiftBeneficiaryFlag { get; set; }= default!;
    
        /// <summary>Swift Pay. Bank1</summary>
        [System.Text.Json.Serialization.JsonPropertyName("SwiftCorrespondantFlag1")]
        public string? SwiftCorrespondantFlag1 { get; set; }= default!;
    
        /// <summary>Swift Pay. Bank2</summary>
        [System.Text.Json.Serialization.JsonPropertyName("SwiftCorrespondantFlag2")]
        public string? SwiftCorrespondantFlag2 { get; set; }= default!;
    
        /// <summary>Swift Pay. Bank3</summary>
        [System.Text.Json.Serialization.JsonPropertyName("SwiftCorrespondantFlag3")]
        public string? SwiftCorrespondantFlag3 { get; set; }= default!;
    
        /// <summary>Swift Pay. Bank4</summary>
        [System.Text.Json.Serialization.JsonPropertyName("SwiftCorrespondantFlag4")]
        public string? SwiftCorrespondantFlag4 { get; set; }= default!;
    
        /// <summary>Swift Pay. Bank5</summary>
        [System.Text.Json.Serialization.JsonPropertyName("SwiftCorrespondantFlag5")]
        public string? SwiftCorrespondantFlag5 { get; set; }= default!;
    
        /// <summary>Routing Pay. Bank</summary>
        [System.Text.Json.Serialization.JsonPropertyName("RoutingBeneficiaryFlag")]
        public string? RoutingBeneficiaryFlag { get; set; }= default!;
    
        /// <summary>Routing Pay. Bank1</summary>
        [System.Text.Json.Serialization.JsonPropertyName("RoutingCorrespondantFlag1")]
        public string? RoutingCorrespondantFlag1 { get; set; }= default!;
    
        /// <summary>Routing Pay. Bank2</summary>
        [System.Text.Json.Serialization.JsonPropertyName("RoutingCorrespondantFlag2")]
        public string? RoutingCorrespondantFlag2 { get; set; }= default!;
    
        /// <summary>Routing Pay. Bank3</summary>
        [System.Text.Json.Serialization.JsonPropertyName("RoutingCorrespondantFlag3")]
        public string? RoutingCorrespondantFlag3 { get; set; }= default!;
    
        /// <summary>Routing Pay. Bank4</summary>
        [System.Text.Json.Serialization.JsonPropertyName("RoutingCorrespondantFlag4")]
        public string? RoutingCorrespondantFlag4 { get; set; }= default!;
    
        /// <summary>Routing Pay. Bank5</summary>
        [System.Text.Json.Serialization.JsonPropertyName("RoutingCorrespondantFlag5")]
        public string? RoutingCorrespondantFlag5 { get; set; }= default!;
    
        /// <summary>Stop pending payments</summary>
        [System.Text.Json.Serialization.JsonPropertyName("PendingPaymentStopFlag")]
        public string? PendingPaymentStopFlag { get; set; }= default!;
    
        /// <summary>SEPA compliant</summary>
        [System.Text.Json.Serialization.JsonPropertyName("SEPACompliant")]
        public string? SEPACompliant { get; set; }= default!;
    
        /// <summary>ID code</summary>
        [System.Text.Json.Serialization.JsonPropertyName("IDCode")]
        public string? IDCode { get; set; }= default!;
    
        /// <summary>National ID Flg</summary>
        [System.Text.Json.Serialization.JsonPropertyName("nationalIDFlag")]
        public string? NationalIDFlag { get; set; }= default!;
    
        /// <summary>Addr. type</summary>
        [System.Text.Json.Serialization.JsonPropertyName("addressType")]
        public string? AddressType { get; set; }= default!;
    
        /// <summary>Address</summary>
        [System.Text.Json.Serialization.JsonPropertyName("address")]
        public string? Address { get; set; }= default!;
    
        /// <summary>Type</summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
        /// <summary>Seq.no.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("electronicAddressNumber")]
        public string? ElectronicAddressNumber { get; set; }= default!;
    
        /// <summary>STPCounterpart</summary>
        [System.Text.Json.Serialization.JsonPropertyName("STPCounterpart")]
        public string? STPCounterpart { get; set; }= default!;
    
        /// <summary>Adr. Status</summary>
        [System.Text.Json.Serialization.JsonPropertyName("addressStatus")]
        public string? AddressStatus { get; set; }= default!;
    
        /// <summary>External Address ref.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("addressExternalReference")]
        public string? AddressExternalReference { get; set; }= default!;
    
        /// <summary>Address (continued)</summary>
        [System.Text.Json.Serialization.JsonPropertyName("to")]
        public string? To { get; set; }= default!;
    
        /// <summary>CC</summary>
        [System.Text.Json.Serialization.JsonPropertyName("cc")]
        public string? Cc { get; set; }= default!;
    
        /// <summary>BCC</summary>
        [System.Text.Json.Serialization.JsonPropertyName("bcc")]
        public string? Bcc { get; set; }= default!;
    
        /// <summary>Document type</summary>
        [System.Text.Json.Serialization.JsonPropertyName("documentType")]
        public string? DocumentType { get; set; }= default!;
    
        /// <summary>Fund ID</summary>
        [System.Text.Json.Serialization.JsonPropertyName("MFFundCode")]
        public string? MFFundCode { get; set; }= default!;
    
        /// <summary>Share class</summary>
        [System.Text.Json.Serialization.JsonPropertyName("docShareClassCode")]
        public string? DocShareClassCode { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Body 
    {
        [System.Text.Json.Serialization.JsonPropertyName("centralregisterses")]
        public System.Collections.Generic.ICollection<_0>? Centralregisterses { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Details 
    {
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Items 
    {
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016