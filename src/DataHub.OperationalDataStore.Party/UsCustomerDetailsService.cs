//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using Shared.Models;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"

namespace DataHub.OperationalDataStore.Party.UsCustomerDetails
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface IUsCustomerDetailsService
    {
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves the US customer details such as document reference, status, validity, issuer details, and version information details</summary>
        /// <param name="recordId">Unique identifier of an entity</param>
        /// <returns>searchUsDocumentsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<SearchUsDocumentsResponse> SearchUsDocumentsAsync(string recordId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
    }

    /// <summary>searchUsDocumentsResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SearchUsDocumentsResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("data")]
        public SearchUsDocumentsResponseBody? Data { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SearchUsDocumentsResponseBody 
    {
        /// <summary>Stores details of   non-contract specific documents tracked for customers. Such documents could be Customer level documents tracked for CUSTOMER record input or Non-Contract specific documents tracked for record input in any application other than CUSTOMER.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerDocument")]
        public System.Collections.Generic.ICollection<CustomerDocument>? CustomerDocument { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerDocument 
    {
        /// <summary>Specifies the reference for the document, if any.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("referenceNumber")]
        public string? ReferenceNumber { get; set; }= default!;
    
        /// <summary>Unique identifier of an entity</summary>
        [System.Text.Json.Serialization.JsonPropertyName("recordId")]
        public string? RecordId { get; set; }= default!;
    
        /// <summary>Contains the date on which the transaction or payment gets initiated.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("startDate")]
        public string? StartDate { get; set; }= default!;
    
        /// <summary>Status update of the claim records</summary>
        [System.Text.Json.Serialization.JsonPropertyName("claimStatus")]
        public string? ClaimStatus { get; set; }= default!;
    
        /// <summary>Specifies the Date from which the status applies to the document.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("statusDate")]
        public string? StatusDate { get; set; }= default!;
    
        /// <summary>The date when the document was signed</summary>
        [System.Text.Json.Serialization.JsonPropertyName("signatureDate")]
        public string? SignatureDate { get; set; }= default!;
    
        /// <summary>Represents the US State to which the address belongs to.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("stateId")]
        public string? StateId { get; set; }= default!;
    
        /// <summary>This is the country name that the financial institution resides in.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("countryName")]
        public string? CountryName { get; set; }= default!;
    
        /// <summary>The issuer of a security or a bond.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("issuedBy")]
        public string? IssuedBy { get; set; }= default!;
    
        /// <summary>The date the item was issued.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("issueDate")]
        public string? IssueDate { get; set; }= default!;
    
        /// <summary>The date an agreement such as an arrangement, product, credit facility or limit is due to expire</summary>
        [System.Text.Json.Serialization.JsonPropertyName("expiryDate")]
        public string? ExpiryDate { get; set; }= default!;
    
        /// <summary>Specifies the sequence number of a document, to distinguish a new document obtained on expiry of the original one.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("documentSequence")]
        public string? DocumentSequence { get; set; }= default!;
    
        /// <summary>Identifies the date on which the document was received</summary>
        [System.Text.Json.Serialization.JsonPropertyName("receivedDate")]
        public string? ReceivedDate { get; set; }= default!;
    
        /// <summary>Additional Information provided to add context</summary>
        [System.Text.Json.Serialization.JsonPropertyName("additionalInformation")]
        public AdditionalInformation? AdditionalInformation { get; set; }= default!;
    
        /// <summary>Indicates the reference no. E.g. contract no./customer no./payments no. to which the image/document is attached to</summary>
        [System.Text.Json.Serialization.JsonPropertyName("imageReference")]
        public string? ImageReference { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class AdditionalInformation 
    {
        /// <summary>Additional Information provided to add context</summary>
        [System.Text.Json.Serialization.JsonPropertyName("additionalInformation")]
        public string? AdditionalInformation1 { get; set; }= default!;
    
    
    }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016