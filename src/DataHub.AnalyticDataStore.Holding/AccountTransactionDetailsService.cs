//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using Shared.Models;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"

namespace DataHub.AnalyticDataStore.Holding.AccountTransactionDetails
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface IAccountTransactionDetailsService
    {
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves all transaction details per customer and account/contract, for a specific business date or for the current date</summary>
        /// <param name="useCurrentDate">Current Date flag for the Business date</param>
        /// <param name="businessDate">Business snapshot date of the source data</param>
        /// <returns>Account Transaction detailsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<GetAccountTransactionDetailsResponse> GetAccountTransactionDetailsAsync(string? useCurrentDate = null, string? businessDate = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
    }

    /// <summary>getAccountTransactionDetailsResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetAccountTransactionDetailsResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("data")]
        public GetAccountTransactionDetailsResponseBody? Data { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetAccountTransactionDetailsResponseBody 
    {
        [System.Text.Json.Serialization.JsonPropertyName("accountTransaction")]
        public System.Collections.Generic.ICollection<AccountTransaction>? AccountTransaction { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("date")]
        public System.Collections.Generic.ICollection<Date>? Date { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("account")]
        public System.Collections.Generic.ICollection<Account>? Account { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("customer")]
        public System.Collections.Generic.ICollection<Customer>? Customer { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("contract")]
        public System.Collections.Generic.ICollection<Contract>? Contract { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class AccountTransaction 
    {
        /// <summary>Business snapshot date of the source data</summary>
        [System.Text.Json.Serialization.JsonPropertyName("businessDate")]
        public string? BusinessDate { get; set; }= default!;
    
        /// <summary>Time stamp of the transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionTime")]
        public string? TransactionTime { get; set; }= default!;
    
        /// <summary>Identifies if the transaction is a Debit or a Credit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("debitOrCredit")]
        public string? DebitOrCredit { get; set; }= default!;
    
        /// <summary>Effective date of the transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("effectiveDate")]
        public string? EffectiveDate { get; set; }= default!;
    
        /// <summary>The foreign exchange rate for the foreign currency the transaction was completed in if applicable</summary>
        [System.Text.Json.Serialization.JsonPropertyName("foreignExchangeRate")]
        public string? ForeignExchangeRate { get; set; }= default!;
    
        /// <summary>The interest portion of the transaction amount</summary>
        [System.Text.Json.Serialization.JsonPropertyName("interestAmount")]
        public string? InterestAmount { get; set; }= default!;
    
        /// <summary>Yes/No to indicate if the transaction relates to; or is initiated by a customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("isCustomerTransaction")]
        public string? IsCustomerTransaction { get; set; }= default!;
    
        /// <summary>The principal portion of the transaction amount</summary>
        [System.Text.Json.Serialization.JsonPropertyName("principalAmount")]
        public string? PrincipalAmount { get; set; }= default!;
    
        /// <summary>Transaction trace number; a unique reference number usually used for clearing or ATM/POS transactions</summary>
        [System.Text.Json.Serialization.JsonPropertyName("traceNumber")]
        public string? TraceNumber { get; set; }= default!;
    
        /// <summary>Transaction amount</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transacationAmount")]
        public string? TransacationAmount { get; set; }= default!;
    
        /// <summary>Channel through which the transaction was processed. (ie. ATM; Branch; System)</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transacationChannel")]
        public string? TransacationChannel { get; set; }= default!;
    
        /// <summary>The currency  the transaction was completed in</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transacationCurrency")]
        public string? TransacationCurrency { get; set; }= default!;
    
        /// <summary>The transaction narrative description (not transaction code)</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transacationDescription")]
        public string? TransacationDescription { get; set; }= default!;
    
        /// <summary>The transaction amount expressed in the foreign currency</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transacationForeignCurrencyAmount")]
        public string? TransacationForeignCurrencyAmount { get; set; }= default!;
    
        /// <summary>Transaction initiation code</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transacationInitiation")]
        public string? TransacationInitiation { get; set; }= default!;
    
        /// <summary>Transaction code used to post a transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionCode")]
        public string? TransactionCode { get; set; }= default!;
    
        /// <summary>Date stamp of the transacation</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionDate")]
        public string? TransactionDate { get; set; }= default!;
    
        /// <summary>The comment field from the account transaction posting</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionNarrative")]
        public string? TransactionNarrative { get; set; }= default!;
    
        /// <summary>Additional classification for Transaction from Insight Master Data</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionType")]
        public string? TransactionType { get; set; }= default!;
    
        /// <summary>Service Charge portion of transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transacationServiceCharge")]
        public string? TransacationServiceCharge { get; set; }= default!;
    
        /// <summary>The type of the transaction with respect to the Customer's Cash Flow - Income; Expense or Neutral.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("cashFlowType")]
        public string? CashFlowType { get; set; }= default!;
    
        /// <summary>Transaction Label assigned by the Transaction Classification predictive model.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transacationLabel")]
        public string? TransacationLabel { get; set; }= default!;
    
        /// <summary>Transaction Outlier flag assigned by the Transaction Outlier predictive model.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("isOutlier")]
        public string? IsOutlier { get; set; }= default!;
    
        /// <summary>Transaction amount group</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transacationAmountGroup")]
        public string? TransacationAmountGroup { get; set; }= default!;
    
        /// <summary>The main company associated with the branch when this is a multi-company implementation</summary>
        [System.Text.Json.Serialization.JsonPropertyName("company")]
        public string? Company { get; set; }= default!;
    
        /// <summary>Branch Name where the transaction was posted</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionBranchName")]
        public string? TransactionBranchName { get; set; }= default!;
    
        /// <summary>Branch Number where the transaction was posted</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionBranchNumber")]
        public string? TransactionBranchNumber { get; set; }= default!;
    
        /// <summary>Full employee name associated with the Account Transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transacationEmployeeFullName")]
        public string? TransacationEmployeeFullName { get; set; }= default!;
    
        /// <summary>Employee number associated with the Account Transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionEmployeeNumber")]
        public string? TransactionEmployeeNumber { get; set; }= default!;
    
        /// <summary>Position of the employee associated with the Account Transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transacationEmployeePosition")]
        public string? TransacationEmployeePosition { get; set; }= default!;
    
        /// <summary>Region of the Branch associated with the Transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transacationRegion")]
        public string? TransacationRegion { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Date 
    {
        /// <summary>Current Date flag for the Business date</summary>
        [System.Text.Json.Serialization.JsonPropertyName("useCurrentDate")]
        public string? UseCurrentDate { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Account 
    {
        /// <summary>Account number of specific savings; chequing; term deposit; loan etc.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountNumber")]
        public string? AccountNumber { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Customer 
    {
        /// <summary>The customer number or customer identification number</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerNumber")]
        public string? CustomerNumber { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Contract 
    {
        /// <summary>Contract number of specific savings; chequing; term deposit; loan, letter of credit, etc.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("contractNumber")]
        public string? ContractNumber { get; set; }= default!;
    
    
    }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016