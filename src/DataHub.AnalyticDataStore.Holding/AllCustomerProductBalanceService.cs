//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v11.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using OpenTemenos.Shared.Models;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"

namespace OpenTemenos.DataHubs.AnalyticDataStore.Holding.AllCustomerProductBalances
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial interface IAllCustomerProductBalanceService
    {
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves customer product balances in local currency and can be filtered for a configurable date range or defaulted to current date</summary>
        /// <param name="businessDate">Business snapshot date of the source data</param>
        /// <param name="useCurrentDate">Current Date flag for the Business date</param>
        /// <returns>Customer Product balancesResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<GetAllCustomerProductBalancesResponse> GetAllCustomerProductBalancesAsync(string? businessDate = null, string? useCurrentDate = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
    }

    /// <summary>getAllCustomerProductBalancesResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class GetAllCustomerProductBalancesResponse 
    {
        [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GetAllCustomerProductBalancesResponseBody? Data { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class GetAllCustomerProductBalancesResponseBody 
    {
        [Newtonsoft.Json.JsonProperty("customerProductSummary", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CustomerProductSummary>? CustomerProductSummary { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CustomerProductSummary 
    {
        /// <summary>Age Group</summary>
        [Newtonsoft.Json.JsonProperty("ageGroup", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? AgeGroup { get; set; }= default!;
    
        /// <summary>A classification for the customer usually originating from the banking system</summary>
        [Newtonsoft.Json.JsonProperty("customerType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? CustomerType { get; set; }= default!;
    
        /// <summary>Branch Name where Contract was created</summary>
        [Newtonsoft.Json.JsonProperty("customerBranchName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? CustomerBranchName { get; set; }= default!;
    
        /// <summary>Line description of the product</summary>
        [Newtonsoft.Json.JsonProperty("productLineDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? ProductLineDescription { get; set; }= default!;
    
        /// <summary>Description of product groups</summary>
        [Newtonsoft.Json.JsonProperty("productGroupDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? ProductGroupDescription { get; set; }= default!;
    
        /// <summary>The description of the product based on the product code</summary>
        [Newtonsoft.Json.JsonProperty("productDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? ProductDescription { get; set; }= default!;
    
        /// <summary>Category description for a product</summary>
        [Newtonsoft.Json.JsonProperty("productCategory", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? ProductCategory { get; set; }= default!;
    
        /// <summary>Business snapshot date of the source data</summary>
        [Newtonsoft.Json.JsonProperty("businessDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? BusinessDate { get; set; }= default!;
    
        /// <summary>Total Balance in local currency of all Products</summary>
        [Newtonsoft.Json.JsonProperty("productLcyBalance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? ProductLcyBalance { get; set; }= default!;
    
        /// <summary>Average Balance in local currency of all Products in the last 30 days</summary>
        [Newtonsoft.Json.JsonProperty("productLcyBalance30DayAvg", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? ProductLcyBalance30DayAvg { get; set; }= default!;
    
        /// <summary>Min Balance in local currency of all Products in the last 30 days</summary>
        [Newtonsoft.Json.JsonProperty("productLcyBalance30DayMin", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? ProductLcyBalance30DayMin { get; set; }= default!;
    
        /// <summary>Max Balance in local currency of all Products in the last 30 days</summary>
        [Newtonsoft.Json.JsonProperty("productLcyBalance30DayMax", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? ProductLcyBalance30DayMax { get; set; }= default!;
    
        /// <summary>Number of Contracts</summary>
        [Newtonsoft.Json.JsonProperty("contractCount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? ContractCount { get; set; }= default!;
    
        /// <summary>Number of Contracts New this Month</summary>
        [Newtonsoft.Json.JsonProperty("contractsNewThisMonthCount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? ContractsNewThisMonthCount { get; set; }= default!;
    
        /// <summary>Number of Contracts Closed this Month</summary>
        [Newtonsoft.Json.JsonProperty("contractsClosedThisMonthCount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? ContractsClosedThisMonthCount { get; set; }= default!;
    
        /// <summary>The customer number or customer identification number</summary>
        [Newtonsoft.Json.JsonProperty("customerNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? CustomerNumber { get; set; }= default!;
    
        /// <summary>Current Date flag for the Business date</summary>
        [Newtonsoft.Json.JsonProperty("useCurrentDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string? UseCurrentDate { get; set; }= default!;
    
    
    }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016