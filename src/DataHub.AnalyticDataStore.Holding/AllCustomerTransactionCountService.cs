//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using Shared.Models;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"

namespace DataHub.AnalyticDataStore.Holding.AllCustomerTransactionCount
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface IAllCustomerTransactionCountService
    {
        /// <summary>Retrieves the summary statistics for all customer transactions for a particular date or date range</summary>
        /// <param name="businessDate">Business snapshot date of the source data</param>
        /// <returns>Customer Transaction classificationsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<GetAllCustomerTransactionCountResponse> GetAllCustomerTransactionCountAsync(string? businessDate);
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves the summary statistics for all customer transactions for a particular date or date range</summary>
        /// <param name="businessDate">Business snapshot date of the source data</param>
        /// <returns>Customer Transaction classificationsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<GetAllCustomerTransactionCountResponse> GetAllCustomerTransactionCountAsync(string? businessDate, System.Threading.CancellationToken cancellationToken);
    
    }

    /// <summary>getAllCustomerTransactionCountResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetAllCustomerTransactionCountResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("data")]
        public GetAllCustomerTransactionCountResponseBody? Data { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class GetAllCustomerTransactionCountResponseBody 
    {
        [System.Text.Json.Serialization.JsonPropertyName("customerTransactionSummary")]
        public System.Collections.Generic.ICollection<CustomerTransactionSummary>? CustomerTransactionSummary { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CustomerTransactionSummary 
    {
        /// <summary>Total Principal Amount in local currency of the transactions</summary>
        [System.Text.Json.Serialization.JsonPropertyName("totalPrincipalAmount")]
        public string? TotalPrincipalAmount { get; set; }= default!;
    
        /// <summary>Number of Transactions</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionCount")]
        public string? TransactionCount { get; set; }= default!;
    
        /// <summary>Transaction Label assigned by the Transaction Classification predictive model.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transacationLabel")]
        public string? TransacationLabel { get; set; }= default!;
    
        /// <summary>The customer number or customer identification number</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerNumber")]
        public string? CustomerNumber { get; set; }= default!;
    
        /// <summary>Age Group</summary>
        [System.Text.Json.Serialization.JsonPropertyName("ageGroup")]
        public string? AgeGroup { get; set; }= default!;
    
        /// <summary>A classification for the customer usually originating from the banking system</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerType")]
        public string? CustomerType { get; set; }= default!;
    
        /// <summary>Business snapshot date of the source data</summary>
        [System.Text.Json.Serialization.JsonPropertyName("businessDate")]
        public string? BusinessDate { get; set; }= default!;
    
    
    }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016