//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using Shared.Models;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"

namespace Transact.Order.TransactionStopX
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface ITransactionStopService
    {
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Create Transaction Stop Instruction</summary>
        /// <param name="payload">body Payload</param>
        /// <param name="validate_only">The identifier to indicate if it is set to only validate or not.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <returns>TransactionStopResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<TransactionStopResponse> CreateTransactionStopAsync(TransactionStop payload, bool? validate_only = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves list of transaction stop instruction details</summary>
        /// <param name="transactionStopId">Identifier  of the Transaction Stops.</param>
        /// <param name="customerId">Identifier of the customer</param>
        /// <param name="transactionChannel">The channel through which the transaction has been placed</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>StopInstructionsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<StopInstructionsResponse> GetStopInstructionsAsync(string transactionStopId, string? customerId = null, string? transactionChannel = null, int? page_size = null, int? page_start = null, string? page_token = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, bool? disablePagination = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Amend Transaction Stop Instruction</summary>
        /// <param name="transactionStopId">Identifier  of the Transaction Stops.</param>
        /// <param name="payload">body Payload</param>
        /// <param name="validate_only">The identifier to indicate if it is set to only validate or not.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <returns>TransactionStopResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<TransactionStopResponse> UpdateTransactionStopAsync(string transactionStopId, TransactionStop payload, bool? validate_only = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves list of Pending Funds Authorisation Requests</summary>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>InvestigationItemsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<InvestigationItemsResponse> GetInvestigationItemsAsync(int? page_size = null, int? page_start = null, string? page_token = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, bool? disablePagination = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Update the Status of Pending Funds Authorisation Request</summary>
        /// <param name="transactionStopId">Identifier  of the Transaction Stops.</param>
        /// <param name="payload">body Payload</param>
        /// <param name="validate_only">The identifier to indicate if it is set to only validate or not.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <returns>TransactionStopInvestigationsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<TransactionStopInvestigationsResponse> UpdateTransactionStopInvestigationsAsync(string transactionStopId, TransactionStopInvestigations payload, bool? validate_only = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PayloadHeader 
    {
        [System.Text.Json.Serialization.JsonPropertyName("override")]
        public Override? Override { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public Audit? Audit { get; set; }= default!;
    
    
    }
    
    /// <summary>TransactionStop</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class TransactionStop 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public PayloadHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public TransactionStopBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class TransactionStopBody 
    {
        /// <summary>The value of the field on which the Alert criteria is based</summary>
        [System.Text.Json.Serialization.JsonPropertyName("attributes")]
        public System.Collections.Generic.ICollection<Attributes>? Attributes { get; set; }= default!;
    
        /// <summary>Identifier of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerId")]
        [System.ComponentModel.DataAnnotations.Range(0D, 35D)]
        public double? CustomerId { get; set; }= default!;
    
        /// <summary>Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN &amp; BBAN</summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountId")]
        [System.ComponentModel.DataAnnotations.Range(0D, 35D)]
        public double? AccountId { get; set; }= default!;
    
        /// <summary>Identifier of the Transaction Stop Condition record.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionStopConditionId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? TransactionStopConditionId { get; set; }= default!;
    
        /// <summary>Used to determine if the stop instruction applies to a specific Channel/Payment type.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionStopChannel")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? TransactionStopChannel { get; set; }= default!;
    
        /// <summary>Stop instruction channel for  transaction stop</summary>
        [System.Text.Json.Serialization.JsonPropertyName("stopInstructionChannel")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? StopInstructionChannel { get; set; }= default!;
    
        /// <summary>Stop reason for  transaction stop</summary>
        [System.Text.Json.Serialization.JsonPropertyName("stopReason")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? StopReason { get; set; }= default!;
    
        /// <summary>Contains the description of purpose of the payment.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("description")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? Description { get; set; }= default!;
    
        /// <summary>Will allow the user to cancel an active Transaction Stop Instruction and this will move the Status of the instruction to Cancelled</summary>
        [System.Text.Json.Serialization.JsonPropertyName("cancelInstruction")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? CancelInstruction { get; set; }= default!;
    
        /// <summary>The date the item was issued.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("issueDate")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? IssueDate { get; set; }= default!;
    
        /// <summary>Identifies if the stop instruction applies to next payment only or all payments</summary>
        [System.Text.Json.Serialization.JsonPropertyName("stopInstructionAppliesTo")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? StopInstructionAppliesTo { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ScreenHeader 
    {
        /// <summary>The Identifier of the record created</summary>
        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public string? Id { get; set; }= default!;
    
        /// <summary>Status of the API(success/failed)</summary>
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public string? Status { get; set; }= default!;
    
        /// <summary>The status of the transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionStatus")]
        public string? TransactionStatus { get; set; }= default!;
    
        /// <summary>The unique identifier/Message Reference of the record created.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("uniqueIdentifier")]
        public string? UniqueIdentifier { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public Audit2? Audit { get; set; }= default!;
    
    
    }
    
    /// <summary>TransactionStopResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class TransactionStopResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ScreenHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public TransactionStopResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class TransactionStopResponseBody 
    {
        /// <summary>The value of the field on which the Alert criteria is based</summary>
        [System.Text.Json.Serialization.JsonPropertyName("attributes")]
        public System.Collections.Generic.ICollection<Attributes2>? Attributes { get; set; }= default!;
    
        /// <summary>Identifier of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerId")]
        [System.ComponentModel.DataAnnotations.Range(0D, 35D)]
        public double? CustomerId { get; set; }= default!;
    
        /// <summary>Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN &amp; BBAN</summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountId")]
        [System.ComponentModel.DataAnnotations.Range(0D, 35D)]
        public double? AccountId { get; set; }= default!;
    
        /// <summary>Identifier of the Transaction Stop Condition record.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionStopConditionId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? TransactionStopConditionId { get; set; }= default!;
    
        /// <summary>Used to determine if the stop instruction applies to a specific Channel/Payment type.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionStopChannel")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? TransactionStopChannel { get; set; }= default!;
    
        /// <summary>Stop instruction channel for  transaction stop</summary>
        [System.Text.Json.Serialization.JsonPropertyName("stopInstructionChannel")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? StopInstructionChannel { get; set; }= default!;
    
        /// <summary>Stop reason for  transaction stop</summary>
        [System.Text.Json.Serialization.JsonPropertyName("stopReason")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? StopReason { get; set; }= default!;
    
        /// <summary>Contains the description of purpose of the payment.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("description")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? Description { get; set; }= default!;
    
        /// <summary>Will allow the user to cancel an active Transaction Stop Instruction and this will move the Status of the instruction to Cancelled</summary>
        [System.Text.Json.Serialization.JsonPropertyName("cancelInstruction")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? CancelInstruction { get; set; }= default!;
    
        /// <summary>The date the item was issued.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("issueDate")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? IssueDate { get; set; }= default!;
    
        /// <summary>Identifies if the stop instruction applies to next payment only or all payments</summary>
        [System.Text.Json.Serialization.JsonPropertyName("stopInstructionAppliesTo")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? StopInstructionAppliesTo { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OverrideBody 
    {
        [System.Text.Json.Serialization.JsonPropertyName("overrideDetails")]
        public System.Collections.Generic.ICollection<OverrideDetails>? OverrideDetails { get; set; }= default!;
    
    
    }
    
    /// <summary>ScreenErrorResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ScreenErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ErrorHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("error")]
        public ScreenErrorResponseBody? Error { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("override")]
        public OverrideBody? Override { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ScreenErrorResponseBody 
    {
        [System.Text.Json.Serialization.JsonPropertyName("errorDetails")]
        public System.Collections.Generic.ICollection<ErrorDetails>? ErrorDetails { get; set; }= default!;
    
        /// <summary>The identifier of error type: </summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    /// <summary>BusinessScreenErrorResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BusinessScreenErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ErrorHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("error")]
        public BusinessScreenErrorResponseBody? Error { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("override")]
        public OverrideBody? Override { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BusinessScreenErrorResponseBody 
    {
        [System.Text.Json.Serialization.JsonPropertyName("errorDetails")]
        public System.Collections.Generic.ICollection<ErrorDetails2>? ErrorDetails { get; set; }= default!;
    
        /// <summary>The identifier of error type: Business</summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    /// <summary>SystemScreenErrorResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SystemScreenErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ErrorHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("error")]
        public SystemScreenErrorResponseBody? Error { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("override")]
        public OverrideBody? Override { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SystemScreenErrorResponseBody 
    {
        [System.Text.Json.Serialization.JsonPropertyName("errorDetails")]
        public System.Collections.Generic.ICollection<ErrorDetails3>? ErrorDetails { get; set; }= default!;
    
        /// <summary>The identifier of error type: System</summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class QueryHeader 
    {
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public Audit4? Audit { get; set; }= default!;
    
        /// <summary>Status of the API(success/failed)</summary>
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public string? Status { get; set; }= default!;
    
        /// <summary>The total number of records per page</summary>
        [System.Text.Json.Serialization.JsonPropertyName("page_size")]
        public int? Page_size { get; set; }= default!;
    
        /// <summary>The record from which the response should be displayed</summary>
        [System.Text.Json.Serialization.JsonPropertyName("page_start")]
        public int? Page_start { get; set; }= default!;
    
        /// <summary>The total number of records present</summary>
        [System.Text.Json.Serialization.JsonPropertyName("total_size")]
        public int? Total_size { get; set; }= default!;
    
        /// <summary>Unique id expected to get as part of response from t24 on every enquiry request</summary>
        [System.Text.Json.Serialization.JsonPropertyName("page_token")]
        public string? Page_token { get; set; }= default!;
    
    
    }
    
    /// <summary>InvestigationItemsResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class InvestigationItemsResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public InvestigationItemsResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class InvestigationItemsResponseBody : System.Collections.ObjectModel.Collection<Anonymous>
    {
    
    }
    
    /// <summary>BusinessQueryErrorResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BusinessQueryErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ErrorHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("error")]
        public BusinessQueryErrorResponseBody? Error { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BusinessQueryErrorResponseBody 
    {
        /// <summary>The identifier of the error message</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The actual t24 error message for bad requests</summary>
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
        /// <summary>The identifier of error type: Business</summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    /// <summary>SystemQueryErrorResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SystemQueryErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ErrorHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("error")]
        public SystemQueryErrorResponseBody? Error { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SystemQueryErrorResponseBody 
    {
        /// <summary>The identifier of the error message</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The actual t24 error message caused by server</summary>
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
        /// <summary>The identifier of error type: System</summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    /// <summary>TransactionStopInvestigations</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class TransactionStopInvestigations 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public PayloadHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public TransactionStopInvestigationsBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class TransactionStopInvestigationsBody 
    {
        /// <summary>Contains the narrative describing the reason for rejection by CAO officer.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("decisionReasons")]
        public System.Collections.Generic.ICollection<DecisionReasons>? DecisionReasons { get; set; }= default!;
    
        /// <summary>Identifier of the Transaction Stop instruction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionStopInstruction")]
        public System.Collections.Generic.ICollection<TransactionStopInstruction>? TransactionStopInstruction { get; set; }= default!;
    
        /// <summary> Identifier of the debitAccounts.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("debitAccount")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? DebitAccount { get; set; }= default!;
    
        /// <summary>Currency of the account. For example: USD, GBP.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountCurrency")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? AccountCurrency { get; set; }= default!;
    
        /// <summary>The currency the amount is requested in.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("requestedCurrency")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? RequestedCurrency { get; set; }= default!;
    
        /// <summary>Requested amount for funds authorisation</summary>
        [System.Text.Json.Serialization.JsonPropertyName("requestedAmount")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? RequestedAmount { get; set; }= default!;
    
        /// <summary>Contains the approval decision entered by the CAO.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("fundsDecision")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? FundsDecision { get; set; }= default!;
    
        /// <summary>Contains the identifier for the transaction in the core system</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionReference")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? TransactionReference { get; set; }= default!;
    
        /// <summary>Contains the status of the request based on which level of authorisation, the request has gone through in its lifecycle.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("fundsAuthorisationStatus")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? FundsAuthorisationStatus { get; set; }= default!;
    
    
    }
    
    /// <summary>TransactionStopInvestigationsResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class TransactionStopInvestigationsResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ScreenHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public TransactionStopInvestigationsResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class TransactionStopInvestigationsResponseBody 
    {
        /// <summary>Contains the narrative describing the reason for rejection by CAO officer.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("decisionReasons")]
        public System.Collections.Generic.ICollection<DecisionReasons2>? DecisionReasons { get; set; }= default!;
    
        /// <summary>Identifier of the Transaction Stop instruction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionStopInstruction")]
        public System.Collections.Generic.ICollection<TransactionStopInstruction2>? TransactionStopInstruction { get; set; }= default!;
    
        /// <summary> Identifier of the debitAccounts.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("debitAccount")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? DebitAccount { get; set; }= default!;
    
        /// <summary>Currency of the account. For example: USD, GBP.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountCurrency")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? AccountCurrency { get; set; }= default!;
    
        /// <summary>The currency the amount is requested in.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("requestedCurrency")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? RequestedCurrency { get; set; }= default!;
    
        /// <summary>Requested amount for funds authorisation</summary>
        [System.Text.Json.Serialization.JsonPropertyName("requestedAmount")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? RequestedAmount { get; set; }= default!;
    
        /// <summary>Contains the approval decision entered by the CAO.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("fundsDecision")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? FundsDecision { get; set; }= default!;
    
        /// <summary>Contains the identifier for the transaction in the core system</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionReference")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? TransactionReference { get; set; }= default!;
    
        /// <summary>Contains the status of the request based on which level of authorisation, the request has gone through in its lifecycle.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("fundsAuthorisationStatus")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? FundsAuthorisationStatus { get; set; }= default!;
    
    
    }
    
    /// <summary>StopInstructionsResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class StopInstructionsResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public StopInstructionsResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class StopInstructionsResponseBody : System.Collections.ObjectModel.Collection<Anonymous2>
    {
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Override 
    {
        [System.Text.Json.Serialization.JsonPropertyName("overrideDetails")]
        public System.Collections.Generic.ICollection<OverrideDetails2>? OverrideDetails { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Attributes 
    {
        /// <summary>Attribute name for  transaction stop</summary>
        [System.Text.Json.Serialization.JsonPropertyName("attributeName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? AttributeName { get; set; }= default!;
    
        /// <summary>This field along with fieldName and value, defines the conditions for the alert to be triggered.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("operand")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? Operand { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("values")]
        public System.Collections.Generic.ICollection<Values>? Values { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Audit2 
    {
        /// <summary>Time taken to response by T24</summary>
        [System.Text.Json.Serialization.JsonPropertyName("T24_time")]
        public int? T24_time { get; set; }= default!;
    
        /// <summary>The CURR.NO. of the record</summary>
        [System.Text.Json.Serialization.JsonPropertyName("versionNumber")]
        public string? VersionNumber { get; set; }= default!;
    
        /// <summary>Time taken to parse the request by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("requestParse_time")]
        public double? RequestParse_time { get; set; }= default!;
    
        /// <summary>Time taken to parse the response by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("responseParse_time")]
        public double? ResponseParse_time { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Attributes2 
    {
        /// <summary>Attribute name for  transaction stop</summary>
        [System.Text.Json.Serialization.JsonPropertyName("attributeName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? AttributeName { get; set; }= default!;
    
        /// <summary>This field along with fieldName and value, defines the conditions for the alert to be triggered.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("operand")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? Operand { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("values")]
        public System.Collections.Generic.ICollection<Values2>? Values { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Audit3 
    {
        /// <summary>Time taken to response by T24</summary>
        [System.Text.Json.Serialization.JsonPropertyName("T24_time")]
        public int? T24_time { get; set; }= default!;
    
        /// <summary>The CURR.NO. of the record</summary>
        [System.Text.Json.Serialization.JsonPropertyName("versionNumber")]
        public string? VersionNumber { get; set; }= default!;
    
        /// <summary>Time taken to parse the request by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("requestParse_time")]
        public double? RequestParse_time { get; set; }= default!;
    
        /// <summary>Time taken to parse the response by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("responseParse_time")]
        public double? ResponseParse_time { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OverrideDetails 
    {
        /// <summary>The identifier of the override.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public string? Id { get; set; }= default!;
    
        /// <summary>The actual override message.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string? Description { get; set; }= default!;
    
        /// <summary>The code related to override message.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The usable options for the override.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("options")]
        public System.Collections.Generic.ICollection<string>? Options { get; set; }= default!;
    
        /// <summary>The type of the override.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ErrorDetails 
    {
        /// <summary>The name of the field</summary>
        [System.Text.Json.Serialization.JsonPropertyName("fieldName")]
        public string? FieldName { get; set; }= default!;
    
        /// <summary>The identifier of the error message</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The actual t24 error message </summary>
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ErrorDetails2 
    {
        /// <summary>The name of the field</summary>
        [System.Text.Json.Serialization.JsonPropertyName("fieldName")]
        public string? FieldName { get; set; }= default!;
    
        /// <summary>The identifier of the error message</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The actual t24 error message for bad requests</summary>
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ErrorDetails3 
    {
        /// <summary>The name of the field</summary>
        [System.Text.Json.Serialization.JsonPropertyName("fieldName")]
        public string? FieldName { get; set; }= default!;
    
        /// <summary>The identifier of the error message</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The actual t24 error message caused by server</summary>
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Audit4 
    {
        /// <summary>Time taken to response by T24</summary>
        [System.Text.Json.Serialization.JsonPropertyName("T24_time")]
        public int? T24_time { get; set; }= default!;
    
        /// <summary>The CURR.NO. of the record</summary>
        [System.Text.Json.Serialization.JsonPropertyName("versionNumber")]
        public string? VersionNumber { get; set; }= default!;
    
        /// <summary>Time taken to parse the request by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("requestParse_time")]
        public double? RequestParse_time { get; set; }= default!;
    
        /// <summary>Time taken to parse the response by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("responseParse_time")]
        public double? ResponseParse_time { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous 
    {
        [System.Text.Json.Serialization.JsonPropertyName("multigroup")]
        public System.Collections.Generic.ICollection<Multigroup>? Multigroup { get; set; }= default!;
    
        /// <summary>ID for funds authorisation</summary>
        [System.Text.Json.Serialization.JsonPropertyName("acFundsAuthorisationId")]
        [System.ComponentModel.DataAnnotations.StringLength(16)]
        public string? AcFundsAuthorisationId { get; set; }= default!;
    
        /// <summary> Identifier of the debitAccounts.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("debitAccount")]
        [System.ComponentModel.DataAnnotations.Range(double.MinValue, 36D)]
        public double? DebitAccount { get; set; }= default!;
    
        /// <summary>Requested amount for funds authorisation</summary>
        [System.Text.Json.Serialization.JsonPropertyName("requestedAmount")]
        [System.ComponentModel.DataAnnotations.Range(double.MinValue, 19D)]
        public double? RequestedAmount { get; set; }= default!;
    
        /// <summary>Identifies the Original Transaction Reference that created the Funds Authorisation request</summary>
        [System.Text.Json.Serialization.JsonPropertyName("originalTransactionReference")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? OriginalTransactionReference { get; set; }= default!;
    
        /// <summary>Original decision status for funds authorisation</summary>
        [System.Text.Json.Serialization.JsonPropertyName("setTypeOrOriginalDecision")]
        [System.ComponentModel.DataAnnotations.StringLength(4)]
        public string? SetTypeOrOriginalDecision { get; set; }= default!;
    
        /// <summary>Request source for funds authorisation</summary>
        [System.Text.Json.Serialization.JsonPropertyName("requestSource")]
        [System.ComponentModel.DataAnnotations.StringLength(6)]
        public string? RequestSource { get; set; }= default!;
    
        /// <summary>Request code for funds authorisation</summary>
        [System.Text.Json.Serialization.JsonPropertyName("requestCode")]
        [System.ComponentModel.DataAnnotations.StringLength(15)]
        public string? RequestCode { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DecisionReasons 
    {
        /// <summary>Contains the narrative describing the reason for rejection by CAO officer.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("decisionReason")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? DecisionReason { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class TransactionStopInstruction 
    {
        /// <summary>Id of the Transaction Stop instruction against which the transaction has been matched.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("instructionId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? InstructionId { get; set; }= default!;
    
        /// <summary>This will store the decision Pay/Return decision took when the instruction has been matched with the Transaction Stop Instruction indicated in the associated field.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("instructionDecision")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? InstructionDecision { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DecisionReasons2 
    {
        /// <summary>Contains the narrative describing the reason for rejection by CAO officer.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("decisionReason")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? DecisionReason { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class TransactionStopInstruction2 
    {
        /// <summary>Id of the Transaction Stop instruction against which the transaction has been matched.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("instructionId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? InstructionId { get; set; }= default!;
    
        /// <summary>This will store the decision Pay/Return decision took when the instruction has been matched with the Transaction Stop Instruction indicated in the associated field.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("instructionDecision")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? InstructionDecision { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous2 
    {
        [System.Text.Json.Serialization.JsonPropertyName("multigroup")]
        public System.Collections.Generic.ICollection<Multigroup2>? Multigroup { get; set; }= default!;
    
        /// <summary>ID of stop instruction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("stopInstructionId")]
        [System.ComponentModel.DataAnnotations.StringLength(16)]
        public string? StopInstructionId { get; set; }= default!;
    
        /// <summary>create date for transaction stop</summary>
        [System.Text.Json.Serialization.JsonPropertyName("createDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? CreateDate { get; set; }= default!;
    
        /// <summary>Identifier of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerId")]
        [System.ComponentModel.DataAnnotations.Range(double.MinValue, 10D)]
        public double? CustomerId { get; set; }= default!;
    
        /// <summary>The date an agreement such as an arrangement, product, credit facility or limit is due to expire</summary>
        [System.Text.Json.Serialization.JsonPropertyName("expiryDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? ExpiryDate { get; set; }= default!;
    
        /// <summary>Cancel date for  transaction stop</summary>
        [System.Text.Json.Serialization.JsonPropertyName("cancelDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? CancelDate { get; set; }= default!;
    
        /// <summary>Transaction stop status for  transaction stop</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionStopStatus")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? TransactionStopStatus { get; set; }= default!;
    
        /// <summary>Stop condition id for  transaction stop</summary>
        [System.Text.Json.Serialization.JsonPropertyName("stopConditionId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? StopConditionId { get; set; }= default!;
    
        /// <summary>Stop instruction channel for  transaction stop</summary>
        [System.Text.Json.Serialization.JsonPropertyName("stopInstructionChannel")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? StopInstructionChannel { get; set; }= default!;
    
        /// <summary>Stop reason for  transaction stop</summary>
        [System.Text.Json.Serialization.JsonPropertyName("stopReason")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? StopReason { get; set; }= default!;
    
        /// <summary>The channel through which the transaction has been placed</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionChannel")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? TransactionChannel { get; set; }= default!;
    
        /// <summary>The status of the early maturity request</summary>
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? Status { get; set; }= default!;
    
        /// <summary>Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN &amp; BBAN</summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountId")]
        [System.ComponentModel.DataAnnotations.StringLength(16)]
        public string? AccountId { get; set; }= default!;
    
        /// <summary>Contains the description of purpose of the payment.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("description")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? Description { get; set; }= default!;
    
        /// <summary>The date the item was issued.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("issueDate")]
        [System.ComponentModel.DataAnnotations.StringLength(11)]
        public string? IssueDate { get; set; }= default!;
    
        /// <summary>Identifies if the stop instruction applies to next payment only or all payments</summary>
        [System.Text.Json.Serialization.JsonPropertyName("stopInstructionAppliesTo")]
        [System.ComponentModel.DataAnnotations.StringLength(11)]
        public string? StopInstructionAppliesTo { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OverrideDetails2 
    {
        /// <summary>The identifier of the override.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public string? Id { get; set; }= default!;
    
        /// <summary>The actual override message.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string? Description { get; set; }= default!;
    
        /// <summary>The code related to override message.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The user input to accept/reject the override.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("responseCode")]
        public string? ResponseCode { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Values 
    {
        /// <summary>The value of the field on which the Alert criteria is based</summary>
        [System.Text.Json.Serialization.JsonPropertyName("value")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? Value { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Values2 
    {
        /// <summary>The value of the field on which the Alert criteria is based</summary>
        [System.Text.Json.Serialization.JsonPropertyName("value")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? Value { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Multigroup 
    {
        /// <summary>Related instruction id for funds authorisation</summary>
        [System.Text.Json.Serialization.JsonPropertyName("relatedInsructionid")]
        public System.Collections.Generic.ICollection<string>? RelatedInsructionid { get; set; }= default!;
    
        /// <summary>Related decision for funds authorisation</summary>
        [System.Text.Json.Serialization.JsonPropertyName("relatedDecision")]
        public System.Collections.Generic.ICollection<string>? RelatedDecision { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Multigroup2 
    {
        /// <summary>Attribute name for  transaction stop</summary>
        [System.Text.Json.Serialization.JsonPropertyName("attributeName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? AttributeName { get; set; }= default!;
    
        /// <summary>This field along with fieldName and value, defines the conditions for the alert to be triggered.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("operand")]
        [System.ComponentModel.DataAnnotations.StringLength(20)]
        public string? Operand { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("attributeValues")]
        public System.Collections.Generic.ICollection<AttributeValues>? AttributeValues { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class AttributeValues 
    {
        /// <summary>This field along with 'attribute type' acts as a place holder for storing any parameters which are unique to that service.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("attributeValue")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? AttributeValue { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal class DateFormatConverter : Newtonsoft.Json.Converters.IsoDateTimeConverter
    {
        public DateFormatConverter()
        {
            DateTimeFormat = "yyyy-MM-dd";
        }
    }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016