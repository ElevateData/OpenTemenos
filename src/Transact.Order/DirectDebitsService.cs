//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using Shared.Models;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"

namespace Transact.Order.DirectDebitsX
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface IDirectDebitsService
    {
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieve the direct debit details</summary>
        /// <param name="directDebitId">The unique identifier of the direct debit mandate.</param>
        /// <param name="accountId">Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN &amp; BBAN</param>
        /// <param name="customerId">Identifier of the customer</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>AccountDirectDebitsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<AccountDirectDebitsResponse> GetAccountDirectDebitsAsync(string? directDebitId = null, string? accountId = null, string? customerId = null, int? page_size = null, int? page_start = null, string? page_token = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, bool? disablePagination = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Create direct debit for account</summary>
        /// <param name="directDebitId">The unique identifier of the direct debit mandate.</param>
        /// <param name="payload">body Payload</param>
        /// <param name="validate_only">The identifier to indicate if it is set to only validate or not.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <returns>DirectDebitsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<DirectDebitsResponse> CreateDirectDebitsAsync(string directDebitId, DirectDebits payload, bool? validate_only = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Update the direct debit record</summary>
        /// <param name="directDebitId">The unique identifier of the direct debit mandate.</param>
        /// <param name="payload">body Payload</param>
        /// <param name="validate_only">The identifier to indicate if it is set to only validate or not.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <returns>DirectDebitsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<DirectDebitsResponse> UpdateDirectDebitsAsync(string directDebitId, DirectDebits payload, bool? validate_only = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves rejected collections</summary>
        /// <param name="claimId">Reference id to track claim record</param>
        /// <param name="accountId">Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN &amp; BBAN</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>RejectedCollectionsResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<RejectedCollectionsResponse> GetRejectedCollectionsAsync(string? claimId = null, string? accountId = null, int? page_size = null, int? page_start = null, string? page_token = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, bool? disablePagination = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves the debtor mandate details for the customer/account</summary>
        /// <param name="customerId">Identifier of the customer</param>
        /// <param name="accountId">Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN &amp; BBAN</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>DebtorDirectDebitMandatesResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<DebtorDirectDebitMandatesResponse> GetDebtorDirectDebitMandatesAsync(string? customerId = null, string? accountId = null, int? page_size = null, int? page_start = null, string? page_token = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, bool? disablePagination = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Updates debtor direct debit mandate details</summary>
        /// <param name="directDebitId">The unique identifier of the direct debit mandate.</param>
        /// <param name="payload">body Payload</param>
        /// <param name="validate_only">The identifier to indicate if it is set to only validate or not.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <returns>DebtorDirectDebitMandatesResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<DebtorDirectDebitMandatesResponse1> UpdateDebtorDirectDebitMandatesAsync(string directDebitId, DebtorDirectDebitMandates payload, bool? validate_only = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Cancel the specified inward debtor direct debit mandates</summary>
        /// <param name="directDebitId">The unique identifier of the direct debit mandate.</param>
        /// <param name="payload">body Payload</param>
        /// <param name="validate_only">The identifier to indicate if it is set to only validate or not.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <returns>DebtorDirectDebitMandatesResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<DebtorDirectDebitMandatesResponse2> CancelDebtorDirectDebitMandatesAsync(string directDebitId, DebtorDirectDebitMandates1 payload, bool? validate_only = null, string? credentials = null, string? companyId = null, string? deviceId = null, string? userRole = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class QueryHeader 
    {
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public Audit? Audit { get; set; }= default!;
    
        /// <summary>Status of the API(success/failed)</summary>
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public string? Status { get; set; }= default!;
    
        /// <summary>The total number of records per page</summary>
        [System.Text.Json.Serialization.JsonPropertyName("page_size")]
        public int? Page_size { get; set; }= default!;
    
        /// <summary>The record from which the response should be displayed</summary>
        [System.Text.Json.Serialization.JsonPropertyName("page_start")]
        public int? Page_start { get; set; }= default!;
    
        /// <summary>The total number of records present</summary>
        [System.Text.Json.Serialization.JsonPropertyName("total_size")]
        public int? Total_size { get; set; }= default!;
    
        /// <summary>Unique id expected to get as part of response from t24 on every enquiry request</summary>
        [System.Text.Json.Serialization.JsonPropertyName("page_token")]
        public string? Page_token { get; set; }= default!;
    
    
    }
    
    /// <summary>AccountDirectDebitsResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class AccountDirectDebitsResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public AccountDirectDebitsResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class AccountDirectDebitsResponseBody : System.Collections.ObjectModel.Collection<Anonymous>
    {
    
    }
    
    /// <summary>BusinessQueryErrorResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BusinessQueryErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ErrorHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("error")]
        public BusinessQueryErrorResponseBody? Error { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BusinessQueryErrorResponseBody 
    {
        /// <summary>The identifier of the error message</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The actual t24 error message for bad requests</summary>
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
        /// <summary>The identifier of error type: Business</summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    /// <summary>SystemQueryErrorResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SystemQueryErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ErrorHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("error")]
        public SystemQueryErrorResponseBody? Error { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SystemQueryErrorResponseBody 
    {
        /// <summary>The identifier of the error message</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The actual t24 error message caused by server</summary>
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
        /// <summary>The identifier of error type: System</summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PayloadHeader 
    {
        [System.Text.Json.Serialization.JsonPropertyName("override")]
        public Override? Override { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public Audit3? Audit { get; set; }= default!;
    
    
    }
    
    /// <summary>DirectDebits</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DirectDebits 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public PayloadHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public DirectDebitsBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DirectDebitsBody 
    {
        /// <summary>The override message is captured  that was generated at the time of commitment of the transaction to the database.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("overrides")]
        public System.Collections.Generic.ICollection<Overrides>? Overrides { get; set; }= default!;
    
        /// <summary>Identifier of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerId")]
        [System.ComponentModel.DataAnnotations.StringLength(11)]
        public string? CustomerId { get; set; }= default!;
    
        /// <summary>Contains the name used for display or enrichment purposes</summary>
        [System.Text.Json.Serialization.JsonPropertyName("displayName")]
        [System.ComponentModel.DataAnnotations.StringLength(11)]
        public string? DisplayName { get; set; }= default!;
    
        /// <summary>Indicates the direction of the Direct debit claim for which mandate is received. The claim can be 'Outward' i.e. Claim is sent to the other bank or 'Inward'  i.e. other bank submit their claim to debit our customer's account. </summary>
        [System.Text.Json.Serialization.JsonPropertyName("direction")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? Direction { get; set; }= default!;
    
        /// <summary>Identifies the record key of a Parameter table,that acts as a key to access the information specific to them. This holds system or a company as its value.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("parameterId")]
        [System.ComponentModel.DataAnnotations.StringLength(11)]
        public string? ParameterId { get; set; }= default!;
    
        /// <summary>Contains bank sort code or iban branch identifier for the account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("sortCode")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? SortCode { get; set; }= default!;
    
        /// <summary>This field will have the value as INTERNAL/EXTERNAL type of record</summary>
        [System.Text.Json.Serialization.JsonPropertyName("requestType")]
        [System.ComponentModel.DataAnnotations.StringLength(11)]
        public string? RequestType { get; set; }= default!;
    
        /// <summary>Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("currencyId")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? CurrencyId { get; set; }= default!;
    
        /// <summary>Identifies the currency market to be used to get the correct exchange and revaluation rates to be applied to each currency</summary>
        [System.Text.Json.Serialization.JsonPropertyName("currencyMarket")]
        [System.ComponentModel.DataAnnotations.StringLength(14)]
        public string? CurrencyMarket { get; set; }= default!;
    
        /// <summary>Inward unique account details</summary>
        [System.Text.Json.Serialization.JsonPropertyName("inwardAccountId")]
        [System.ComponentModel.DataAnnotations.StringLength(15)]
        public string? InwardAccountId { get; set; }= default!;
    
        /// <summary>Account name details of the creditor</summary>
        [System.Text.Json.Serialization.JsonPropertyName("creditAccountName")]
        [System.ComponentModel.DataAnnotations.StringLength(70)]
        public string? CreditAccountName { get; set; }= default!;
    
        /// <summary>Credit account identifier of the payment or transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("creditAccountId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? CreditAccountId { get; set; }= default!;
    
        /// <summary>The status of direct debit mandate i.e. New, Advised, Hold, Active, Available, Returned or Cancelled. Only when the status is Active or Available, the instruction will be sent out for collecting funds</summary>
        [System.Text.Json.Serialization.JsonPropertyName("directDebitStatus")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? DirectDebitStatus { get; set; }= default!;
    
        /// <summary>The amount of the stand-alone direct debit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("standaloneAmount")]
        [System.ComponentModel.DataAnnotations.Range(0D, 19D)]
        public double? StandaloneAmount { get; set; }= default!;
    
        /// <summary>Specifies the frequency in which the payment application(periodic payments) execute the payment instruction.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("frequency")]
        [System.ComponentModel.DataAnnotations.StringLength(19)]
        public string? Frequency { get; set; }= default!;
    
        /// <summary>This is the termination date of recurring direct debit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("terminationDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? TerminationDate { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ScreenHeader 
    {
        /// <summary>The Identifier of the record created</summary>
        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public string? Id { get; set; }= default!;
    
        /// <summary>Status of the API(success/failed)</summary>
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public string? Status { get; set; }= default!;
    
        /// <summary>The status of the transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("transactionStatus")]
        public string? TransactionStatus { get; set; }= default!;
    
        /// <summary>The unique identifier/Message Reference of the record created.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("uniqueIdentifier")]
        public string? UniqueIdentifier { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public Audit4? Audit { get; set; }= default!;
    
    
    }
    
    /// <summary>DirectDebitsResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DirectDebitsResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ScreenHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public DirectDebitsResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DirectDebitsResponseBody 
    {
        /// <summary>The override message is captured  that was generated at the time of commitment of the transaction to the database.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("overrides")]
        public System.Collections.Generic.ICollection<Overrides2>? Overrides { get; set; }= default!;
    
        /// <summary>Identifier of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerId")]
        [System.ComponentModel.DataAnnotations.StringLength(11)]
        public string? CustomerId { get; set; }= default!;
    
        /// <summary>Contains the name used for display or enrichment purposes</summary>
        [System.Text.Json.Serialization.JsonPropertyName("displayName")]
        [System.ComponentModel.DataAnnotations.StringLength(11)]
        public string? DisplayName { get; set; }= default!;
    
        /// <summary>Indicates the direction of the Direct debit claim for which mandate is received. The claim can be 'Outward' i.e. Claim is sent to the other bank or 'Inward'  i.e. other bank submit their claim to debit our customer's account. </summary>
        [System.Text.Json.Serialization.JsonPropertyName("direction")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? Direction { get; set; }= default!;
    
        /// <summary>Identifies the record key of a Parameter table,that acts as a key to access the information specific to them. This holds system or a company as its value.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("parameterId")]
        [System.ComponentModel.DataAnnotations.StringLength(11)]
        public string? ParameterId { get; set; }= default!;
    
        /// <summary>Contains bank sort code or iban branch identifier for the account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("sortCode")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? SortCode { get; set; }= default!;
    
        /// <summary>This field will have the value as INTERNAL/EXTERNAL type of record</summary>
        [System.Text.Json.Serialization.JsonPropertyName("requestType")]
        [System.ComponentModel.DataAnnotations.StringLength(11)]
        public string? RequestType { get; set; }= default!;
    
        /// <summary>Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("currencyId")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? CurrencyId { get; set; }= default!;
    
        /// <summary>Identifies the currency market to be used to get the correct exchange and revaluation rates to be applied to each currency</summary>
        [System.Text.Json.Serialization.JsonPropertyName("currencyMarket")]
        [System.ComponentModel.DataAnnotations.StringLength(14)]
        public string? CurrencyMarket { get; set; }= default!;
    
        /// <summary>Inward unique account details</summary>
        [System.Text.Json.Serialization.JsonPropertyName("inwardAccountId")]
        [System.ComponentModel.DataAnnotations.StringLength(15)]
        public string? InwardAccountId { get; set; }= default!;
    
        /// <summary>Account name details of the creditor</summary>
        [System.Text.Json.Serialization.JsonPropertyName("creditAccountName")]
        [System.ComponentModel.DataAnnotations.StringLength(70)]
        public string? CreditAccountName { get; set; }= default!;
    
        /// <summary>Credit account identifier of the payment or transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("creditAccountId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? CreditAccountId { get; set; }= default!;
    
        /// <summary>The status of direct debit mandate i.e. New, Advised, Hold, Active, Available, Returned or Cancelled. Only when the status is Active or Available, the instruction will be sent out for collecting funds</summary>
        [System.Text.Json.Serialization.JsonPropertyName("directDebitStatus")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? DirectDebitStatus { get; set; }= default!;
    
        /// <summary>The amount of the stand-alone direct debit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("standaloneAmount")]
        [System.ComponentModel.DataAnnotations.Range(0D, 19D)]
        public double? StandaloneAmount { get; set; }= default!;
    
        /// <summary>Specifies the frequency in which the payment application(periodic payments) execute the payment instruction.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("frequency")]
        [System.ComponentModel.DataAnnotations.StringLength(19)]
        public string? Frequency { get; set; }= default!;
    
        /// <summary>This is the termination date of recurring direct debit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("terminationDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? TerminationDate { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OverrideBody 
    {
        [System.Text.Json.Serialization.JsonPropertyName("overrideDetails")]
        public System.Collections.Generic.ICollection<OverrideDetails>? OverrideDetails { get; set; }= default!;
    
    
    }
    
    /// <summary>ScreenErrorResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ScreenErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ErrorHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("error")]
        public ScreenErrorResponseBody? Error { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("override")]
        public OverrideBody? Override { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ScreenErrorResponseBody 
    {
        [System.Text.Json.Serialization.JsonPropertyName("errorDetails")]
        public System.Collections.Generic.ICollection<ErrorDetails>? ErrorDetails { get; set; }= default!;
    
        /// <summary>The identifier of error type: </summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    /// <summary>BusinessScreenErrorResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BusinessScreenErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ErrorHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("error")]
        public BusinessScreenErrorResponseBody? Error { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("override")]
        public OverrideBody? Override { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BusinessScreenErrorResponseBody 
    {
        [System.Text.Json.Serialization.JsonPropertyName("errorDetails")]
        public System.Collections.Generic.ICollection<ErrorDetails2>? ErrorDetails { get; set; }= default!;
    
        /// <summary>The identifier of error type: Business</summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    /// <summary>SystemScreenErrorResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SystemScreenErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ErrorHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("error")]
        public SystemScreenErrorResponseBody? Error { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("override")]
        public OverrideBody? Override { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SystemScreenErrorResponseBody 
    {
        [System.Text.Json.Serialization.JsonPropertyName("errorDetails")]
        public System.Collections.Generic.ICollection<ErrorDetails3>? ErrorDetails { get; set; }= default!;
    
        /// <summary>The identifier of error type: System</summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    /// <summary>RejectedCollectionsResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class RejectedCollectionsResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public RejectedCollectionsResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class RejectedCollectionsResponseBody : System.Collections.ObjectModel.Collection<Anonymous2>
    {
    
    }
    
    /// <summary>DebtorDirectDebitMandatesResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DebtorDirectDebitMandatesResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public DebtorDirectDebitMandatesResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DebtorDirectDebitMandatesResponseBody : System.Collections.ObjectModel.Collection<Anonymous3>
    {
    
    }
    
    /// <summary>DebtorDirectDebitMandates</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DebtorDirectDebitMandates 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public PayloadHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public DebtorDirectDebitMandatesBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DebtorDirectDebitMandatesBody 
    {
        /// <summary>Creditor Reference provided in the transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("creditorReference")]
        [System.ComponentModel.DataAnnotations.StringLength(17)]
        public string? CreditorReference { get; set; }= default!;
    
        /// <summary>Name or short title of the credit account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("creditorName")]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        public string? CreditorName { get; set; }= default!;
    
        /// <summary>Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1</summary>
        [System.Text.Json.Serialization.JsonPropertyName("ddMandateReference")]
        [System.ComponentModel.DataAnnotations.StringLength(18)]
        public string? DdMandateReference { get; set; }= default!;
    
        /// <summary>This is the termination date of recurring direct debit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("terminationDate")]
        [System.ComponentModel.DataAnnotations.StringLength(15)]
        public string? TerminationDate { get; set; }= default!;
    
        /// <summary>Indicates the maximum number of collections that can be posted under the direct debit within the defined period of time</summary>
        [System.Text.Json.Serialization.JsonPropertyName("maximumCollections")]
        [System.ComponentModel.DataAnnotations.StringLength(18)]
        public string? MaximumCollections { get; set; }= default!;
    
        /// <summary>Contains the date on which the transaction or payment gets initiated.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("startDate")]
        [System.ComponentModel.DataAnnotations.StringLength(26)]
        public string? StartDate { get; set; }= default!;
    
        /// <summary>Specifies the frequency in which the payment application(periodic payments) execute the payment instruction.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("frequency")]
        [System.ComponentModel.DataAnnotations.StringLength(26)]
        public string? Frequency { get; set; }= default!;
    
        /// <summary>Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned</summary>
        [System.Text.Json.Serialization.JsonPropertyName("endDate")]
        [System.ComponentModel.DataAnnotations.StringLength(24)]
        public string? EndDate { get; set; }= default!;
    
        /// <summary>Contains the reason code for amending the eMandate. Eg. MD16</summary>
        [System.Text.Json.Serialization.JsonPropertyName("mandateAmendmentReasonCode")]
        [System.ComponentModel.DataAnnotations.StringLength(26)]
        public string? MandateAmendmentReasonCode { get; set; }= default!;
    
    
    }
    
    /// <summary>DebtorDirectDebitMandatesResponse1</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DebtorDirectDebitMandatesResponse1 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ScreenHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public DebtorDirectDebitMandatesResponse1Body? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DebtorDirectDebitMandatesResponse1Body 
    {
        /// <summary>Creditor Reference provided in the transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("creditorReference")]
        [System.ComponentModel.DataAnnotations.StringLength(17)]
        public string? CreditorReference { get; set; }= default!;
    
        /// <summary>Name or short title of the credit account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("creditorName")]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        public string? CreditorName { get; set; }= default!;
    
        /// <summary>Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1</summary>
        [System.Text.Json.Serialization.JsonPropertyName("ddMandateReference")]
        [System.ComponentModel.DataAnnotations.StringLength(18)]
        public string? DdMandateReference { get; set; }= default!;
    
        /// <summary>This is the termination date of recurring direct debit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("terminationDate")]
        [System.ComponentModel.DataAnnotations.StringLength(15)]
        public string? TerminationDate { get; set; }= default!;
    
        /// <summary>Indicates the maximum number of collections that can be posted under the direct debit within the defined period of time</summary>
        [System.Text.Json.Serialization.JsonPropertyName("maximumCollections")]
        [System.ComponentModel.DataAnnotations.StringLength(18)]
        public string? MaximumCollections { get; set; }= default!;
    
        /// <summary>Contains the date on which the transaction or payment gets initiated.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("startDate")]
        [System.ComponentModel.DataAnnotations.StringLength(26)]
        public string? StartDate { get; set; }= default!;
    
        /// <summary>Specifies the frequency in which the payment application(periodic payments) execute the payment instruction.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("frequency")]
        [System.ComponentModel.DataAnnotations.StringLength(26)]
        public string? Frequency { get; set; }= default!;
    
        /// <summary>Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned</summary>
        [System.Text.Json.Serialization.JsonPropertyName("endDate")]
        [System.ComponentModel.DataAnnotations.StringLength(24)]
        public string? EndDate { get; set; }= default!;
    
        /// <summary>Contains the reason code for amending the eMandate. Eg. MD16</summary>
        [System.Text.Json.Serialization.JsonPropertyName("mandateAmendmentReasonCode")]
        [System.ComponentModel.DataAnnotations.StringLength(26)]
        public string? MandateAmendmentReasonCode { get; set; }= default!;
    
    
    }
    
    /// <summary>DebtorDirectDebitMandates1</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DebtorDirectDebitMandates1 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public PayloadHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public DebtorDirectDebitMandates1Body? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DebtorDirectDebitMandates1Body 
    {
        /// <summary>Contains the reason for which the payment is cancelled.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("cancelReason")]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        public string? CancelReason { get; set; }= default!;
    
    
    }
    
    /// <summary>DebtorDirectDebitMandatesResponse2</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DebtorDirectDebitMandatesResponse2 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ScreenHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public DebtorDirectDebitMandatesResponse2Body? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class DebtorDirectDebitMandatesResponse2Body 
    {
        /// <summary>Contains the reason for which the payment is cancelled.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("cancelReason")]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        public string? CancelReason { get; set; }= default!;
    
        /// <summary>The status of direct debit mandate i.e. New, Advised, Hold, Active, Available, Returned or Cancelled. Only when the status is Active or Available, the instruction will be sent out for collecting funds</summary>
        [System.Text.Json.Serialization.JsonPropertyName("directDebitStatus")]
        [System.ComponentModel.DataAnnotations.StringLength(17)]
        public string? DirectDebitStatus { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous 
    {
        /// <summary>The unique identifier of the direct debit mandate. </summary>
        [System.Text.Json.Serialization.JsonPropertyName("directDebitId")]
        [System.ComponentModel.DataAnnotations.StringLength(25)]
        public string? DirectDebitId { get; set; }= default!;
    
        /// <summary>Identifier of the customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerId")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? CustomerId { get; set; }= default!;
    
        /// <summary>Specifies an alternative easy means of referencing the Customer</summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerMnemonic")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? CustomerMnemonic { get; set; }= default!;
    
        /// <summary>Credit account identifier of the payment or transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("creditAccountId")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? CreditAccountId { get; set; }= default!;
    
        /// <summary>Name or short title of the credit account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("creditorName")]
        [System.ComponentModel.DataAnnotations.StringLength(70)]
        public string? CreditorName { get; set; }= default!;
    
        /// <summary>Contains bank sort code or iban branch identifier for the account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("sortCode")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? SortCode { get; set; }= default!;
    
        /// <summary>Contains the name used for display or enrichment purposes</summary>
        [System.Text.Json.Serialization.JsonPropertyName("displayName")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? DisplayName { get; set; }= default!;
    
        /// <summary>Indicates the direction of the Direct debit claim for which mandate is received. The claim can be 'Outward' i.e. Claim is sent to the other bank or 'Inward'  i.e. other bank submit their claim to debit our customer's account. </summary>
        [System.Text.Json.Serialization.JsonPropertyName("direction")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? Direction { get; set; }= default!;
    
        /// <summary>Identifies the currency. E.g. USD, GBP etc</summary>
        [System.Text.Json.Serialization.JsonPropertyName("currency")]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public string? Currency { get; set; }= default!;
    
        /// <summary>Defines whether the direct debit mandate is for stand-alone purpose i.e. one-off instruction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("standAloneDdi")]
        [System.ComponentModel.DataAnnotations.StringLength(1)]
        public string? StandAloneDdi { get; set; }= default!;
    
        /// <summary>This is the payment amount</summary>
        [System.Text.Json.Serialization.JsonPropertyName("amount")]
        [System.ComponentModel.DataAnnotations.Range(double.MinValue, 19D)]
        public double? Amount { get; set; }= default!;
    
        /// <summary>The status of the early maturity request</summary>
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? Status { get; set; }= default!;
    
        /// <summary>Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN &amp; BBAN</summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountId")]
        public string? AccountId { get; set; }= default!;
    
        /// <summary>Specifies the frequency in which the payment application(periodic payments) execute the payment instruction.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("frequency")]
        [System.ComponentModel.DataAnnotations.StringLength(19)]
        public string? Frequency { get; set; }= default!;
    
        /// <summary>Contains the date on which the transaction or payment gets initiated.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("startDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? StartDate { get; set; }= default!;
    
        /// <summary>Indicates next payment date for the contract</summary>
        [System.Text.Json.Serialization.JsonPropertyName("nextPaymentDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? NextPaymentDate { get; set; }= default!;
    
        /// <summary>The name that is displayed for the currency</summary>
        [System.Text.Json.Serialization.JsonPropertyName("currencyName")]
        public string? CurrencyName { get; set; }= default!;
    
        /// <summary>Display name or short name of the account specified.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountName")]
        public string? AccountName { get; set; }= default!;
    
        /// <summary>Current number of the record</summary>
        [System.Text.Json.Serialization.JsonPropertyName("versionNumber")]
        [System.ComponentModel.DataAnnotations.StringLength(4)]
        public string? VersionNumber { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Audit2 
    {
        /// <summary>Time taken to response by T24</summary>
        [System.Text.Json.Serialization.JsonPropertyName("T24_time")]
        public int? T24_time { get; set; }= default!;
    
        /// <summary>The CURR.NO. of the record</summary>
        [System.Text.Json.Serialization.JsonPropertyName("versionNumber")]
        public string? VersionNumber { get; set; }= default!;
    
        /// <summary>Time taken to parse the request by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("requestParse_time")]
        public double? RequestParse_time { get; set; }= default!;
    
        /// <summary>Time taken to parse the response by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("responseParse_time")]
        public double? ResponseParse_time { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Override 
    {
        [System.Text.Json.Serialization.JsonPropertyName("overrideDetails")]
        public System.Collections.Generic.ICollection<OverrideDetails2>? OverrideDetails { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Audit3 
    {
        /// <summary>The CURR.NO. of the record</summary>
        [System.Text.Json.Serialization.JsonPropertyName("versionNumber")]
        public string? VersionNumber { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Overrides 
    {
        /// <summary>The override message is captured  that was generated at the time of commitment of the transaction to the database.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("override")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? Override { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Audit4 
    {
        /// <summary>Time taken to response by T24</summary>
        [System.Text.Json.Serialization.JsonPropertyName("T24_time")]
        public int? T24_time { get; set; }= default!;
    
        /// <summary>The CURR.NO. of the record</summary>
        [System.Text.Json.Serialization.JsonPropertyName("versionNumber")]
        public string? VersionNumber { get; set; }= default!;
    
        /// <summary>Time taken to parse the request by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("requestParse_time")]
        public double? RequestParse_time { get; set; }= default!;
    
        /// <summary>Time taken to parse the response by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("responseParse_time")]
        public double? ResponseParse_time { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Overrides2 
    {
        /// <summary>The override message is captured  that was generated at the time of commitment of the transaction to the database.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("override")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? Override { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OverrideDetails 
    {
        /// <summary>The identifier of the override.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public string? Id { get; set; }= default!;
    
        /// <summary>The actual override message.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string? Description { get; set; }= default!;
    
        /// <summary>The code related to override message.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The usable options for the override.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("options")]
        public System.Collections.Generic.ICollection<string>? Options { get; set; }= default!;
    
        /// <summary>The type of the override.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ErrorDetails 
    {
        /// <summary>The name of the field</summary>
        [System.Text.Json.Serialization.JsonPropertyName("fieldName")]
        public string? FieldName { get; set; }= default!;
    
        /// <summary>The identifier of the error message</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The actual t24 error message </summary>
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ErrorDetails2 
    {
        /// <summary>The name of the field</summary>
        [System.Text.Json.Serialization.JsonPropertyName("fieldName")]
        public string? FieldName { get; set; }= default!;
    
        /// <summary>The identifier of the error message</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The actual t24 error message for bad requests</summary>
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ErrorDetails3 
    {
        /// <summary>The name of the field</summary>
        [System.Text.Json.Serialization.JsonPropertyName("fieldName")]
        public string? FieldName { get; set; }= default!;
    
        /// <summary>The identifier of the error message</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The actual t24 error message caused by server</summary>
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous2 
    {
        [System.Text.Json.Serialization.JsonPropertyName("resubmittedClaimIds")]
        public System.Collections.Generic.ICollection<ResubmittedClaimIds>? ResubmittedClaimIds { get; set; }= default!;
    
        /// <summary>Reference id to track claim record</summary>
        [System.Text.Json.Serialization.JsonPropertyName("claimId")]
        [System.ComponentModel.DataAnnotations.StringLength(25)]
        public string? ClaimId { get; set; }= default!;
    
        /// <summary>Indicates the direction of the Direct debit claim for which mandate is received. The claim can be 'Outward' i.e. Claim is sent to the other bank or 'Inward'  i.e. other bank submit their claim to debit our customer's account. </summary>
        [System.Text.Json.Serialization.JsonPropertyName("direction")]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string? Direction { get; set; }= default!;
    
        /// <summary>Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN &amp; BBAN</summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountId")]
        [System.ComponentModel.DataAnnotations.StringLength(16)]
        public string? AccountId { get; set; }= default!;
    
        /// <summary>Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("currencyId")]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public string? CurrencyId { get; set; }= default!;
    
        /// <summary>This is the payment amount</summary>
        [System.Text.Json.Serialization.JsonPropertyName("amount")]
        [System.ComponentModel.DataAnnotations.Range(double.MinValue, 19D)]
        public double? Amount { get; set; }= default!;
    
        /// <summary>Indicates the value date on which the underlying accounting entry is to be given value (for interest purposes)</summary>
        [System.Text.Json.Serialization.JsonPropertyName("valueDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? ValueDate { get; set; }= default!;
    
        /// <summary>Status update of the claim records</summary>
        [System.Text.Json.Serialization.JsonPropertyName("claimStatus")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? ClaimStatus { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous3 
    {
        /// <summary>Address of the creditor or beneficiary account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("creditorAddresses")]
        public System.Collections.Generic.ICollection<CreditorAddresses>? CreditorAddresses { get; set; }= default!;
    
        /// <summary>Contains the mandatory SEPA(Single Euro Payment Area) payment identifier from the transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("mandateId")]
        [System.ComponentModel.DataAnnotations.StringLength(25)]
        public string? MandateId { get; set; }= default!;
    
        /// <summary>The Payment scheme and service level under which the mandate can be used (e.g SEPA*CORE)</summary>
        [System.Text.Json.Serialization.JsonPropertyName("mandateScheme")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? MandateScheme { get; set; }= default!;
    
        /// <summary>Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN &amp; BBAN</summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountId")]
        [System.ComponentModel.DataAnnotations.StringLength(25)]
        public string? AccountId { get; set; }= default!;
    
        /// <summary>Display name or short name of the account specified.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountName")]
        [System.ComponentModel.DataAnnotations.StringLength(25)]
        public string? AccountName { get; set; }= default!;
    
        /// <summary>Indicates if the payment is Customer (C) type or Bank (B) type</summary>
        [System.Text.Json.Serialization.JsonPropertyName("paymentType")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? PaymentType { get; set; }= default!;
    
        /// <summary>Creditor Reference provided in the transaction</summary>
        [System.Text.Json.Serialization.JsonPropertyName("creditorReference")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? CreditorReference { get; set; }= default!;
    
        /// <summary>Name or short title of the credit account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("creditorName")]
        [System.ComponentModel.DataAnnotations.StringLength(140)]
        public string? CreditorName { get; set; }= default!;
    
        /// <summary>It specifies the Country of Ultimate creditor of payment</summary>
        [System.Text.Json.Serialization.JsonPropertyName("ultimateCreditorCountry")]
        [System.ComponentModel.DataAnnotations.StringLength(2)]
        public string? UltimateCreditorCountry { get; set; }= default!;
    
        /// <summary>Contains the actual creditor account number</summary>
        [System.Text.Json.Serialization.JsonPropertyName("ultimateCreditor")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? UltimateCreditor { get; set; }= default!;
    
        /// <summary>Indicates the IBAN of the credit account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("creditAccountIBAN")]
        [System.ComponentModel.DataAnnotations.StringLength(25)]
        public string? CreditAccountIBAN { get; set; }= default!;
    
        /// <summary>Date on which the transaction or payment gets processed, i.e. the processing date of the transaction.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("executionDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? ExecutionDate { get; set; }= default!;
    
        /// <summary>Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1</summary>
        [System.Text.Json.Serialization.JsonPropertyName("ddMandateReference")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? DdMandateReference { get; set; }= default!;
    
        /// <summary>The date when the mandate has been signed by the Debtor</summary>
        [System.Text.Json.Serialization.JsonPropertyName("mandateSigningDate")]
        [System.ComponentModel.DataAnnotations.StringLength(8)]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? MandateSigningDate { get; set; }= default!;
    
        /// <summary>Indicates the remittance information that is supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system, in an unstructured form.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("remittanceInformation")]
        [System.ComponentModel.DataAnnotations.StringLength(25)]
        public string? RemittanceInformation { get; set; }= default!;
    
        /// <summary>Contains description of the credit account reference</summary>
        [System.Text.Json.Serialization.JsonPropertyName("structuredCreditorReference")]
        [System.ComponentModel.DataAnnotations.StringLength(25)]
        public string? StructuredCreditorReference { get; set; }= default!;
    
        /// <summary>Creditor reference in a coded form i.e - RADM (RemittanceAdviceMessage) - RPIN (RelatedPaymentInstruction) - FXDR (ForeignExchangeDealReference) - DISP (DispatchAdvice) - PUOR (PurchaseOrder) - SCOR (StructuredCommunicationReference)</summary>
        [System.Text.Json.Serialization.JsonPropertyName("structuredCommunicationCode")]
        [System.ComponentModel.DataAnnotations.StringLength(25)]
        public string? StructuredCommunicationCode { get; set; }= default!;
    
        /// <summary>Entity that assigns the identification</summary>
        [System.Text.Json.Serialization.JsonPropertyName("structuredIssuer")]
        [System.ComponentModel.DataAnnotations.StringLength(25)]
        public string? StructuredIssuer { get; set; }= default!;
    
        /// <summary>Indicates how the  Mandate was registered (e.g.  automatically, paper, electronic)</summary>
        [System.Text.Json.Serialization.JsonPropertyName("mandateType")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? MandateType { get; set; }= default!;
    
        /// <summary>This is the termination date of recurring direct debit</summary>
        [System.Text.Json.Serialization.JsonPropertyName("terminationDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? TerminationDate { get; set; }= default!;
    
        /// <summary>Indicates the maximum number of collections that can be posted under the direct debit within the defined period of time</summary>
        [System.Text.Json.Serialization.JsonPropertyName("maximumCollections")]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public string? MaximumCollections { get; set; }= default!;
    
        /// <summary>Contains the date on which the transaction or payment gets initiated.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("startDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? StartDate { get; set; }= default!;
    
        /// <summary>Specifies the frequency in which the payment application(periodic payments) execute the payment instruction.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("frequency")]
        [System.ComponentModel.DataAnnotations.StringLength(17)]
        public string? Frequency { get; set; }= default!;
    
        /// <summary>Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned</summary>
        [System.Text.Json.Serialization.JsonPropertyName("endDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? EndDate { get; set; }= default!;
    
        /// <summary>Indicates the start date of a period over which the transaction or payment can be cycled based on the frequency</summary>
        [System.Text.Json.Serialization.JsonPropertyName("periodStartDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? PeriodStartDate { get; set; }= default!;
    
        /// <summary>Indicates the end date of a period over which the transaction or payment can be cycled based on the frequency</summary>
        [System.Text.Json.Serialization.JsonPropertyName("periodEndDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? PeriodEndDate { get; set; }= default!;
    
        /// <summary>Indicates the number of direct debit collections posted on the account in current frequency cycle</summary>
        [System.Text.Json.Serialization.JsonPropertyName("successfulCollections")]
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public string? SuccessfulCollections { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class OverrideDetails2 
    {
        /// <summary>The identifier of the override.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public string? Id { get; set; }= default!;
    
        /// <summary>The actual override message.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string? Description { get; set; }= default!;
    
        /// <summary>The code related to override message.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The user input to accept/reject the override.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("responseCode")]
        public string? ResponseCode { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ResubmittedClaimIds 
    {
        /// <summary>Rejected collection updated details</summary>
        [System.Text.Json.Serialization.JsonPropertyName("resubmittedClaimId")]
        public System.Collections.Generic.ICollection<string>? ResubmittedClaimId { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CreditorAddresses 
    {
        /// <summary>Address of the creditor or beneficiary account</summary>
        [System.Text.Json.Serialization.JsonPropertyName("creditorAddress")]
        [System.ComponentModel.DataAnnotations.StringLength(70)]
        public string? CreditorAddress { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0))")]
    internal class DateFormatConverter : Newtonsoft.Json.Converters.IsoDateTimeConverter
    {
        public DateFormatConverter()
        {
            DateTimeFormat = "yyyy-MM-dd";
        }
    }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016