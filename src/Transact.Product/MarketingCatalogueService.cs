//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

using Shared.Models;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"

namespace Transact.Product.MarketingCatalogue
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.14.5.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface IMarketingCatalogueService
    {
        /// <summary>Retrieves the list of Products available in Marketing Catalogue</summary>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>ProductMarketingCatalogueResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ProductMarketingCatalogueResponse> GetProductMarketingCatalogueAsync(int? page_size, int? page_start, string? page_token, string? credentials, string? companyId, string? deviceId, string? userRole, bool? disablePagination);
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves the list of Products available in Marketing Catalogue</summary>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>ProductMarketingCatalogueResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ProductMarketingCatalogueResponse> GetProductMarketingCatalogueAsync(int? page_size, int? page_start, string? page_token, string? credentials, string? companyId, string? deviceId, string? userRole, bool? disablePagination, System.Threading.CancellationToken cancellationToken);
    
        /// <summary>Retrieves the List of Savings Accounts related products from Marketing Catalogue</summary>
        /// <param name="currency">Identifies the currency. E.g. USD, GBP etc</param>
        /// <param name="customerId">Identifier of the customer</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>SavingsAccountCatalogResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<SavingsAccountCatalogResponse> GetSavingsAccountCatalogAsync(string? currency, string? customerId, int? page_size, int? page_start, string? page_token, string? credentials, string? companyId, string? deviceId, string? userRole, bool? disablePagination);
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves the List of Savings Accounts related products from Marketing Catalogue</summary>
        /// <param name="currency">Identifies the currency. E.g. USD, GBP etc</param>
        /// <param name="customerId">Identifier of the customer</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>SavingsAccountCatalogResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<SavingsAccountCatalogResponse> GetSavingsAccountCatalogAsync(string? currency, string? customerId, int? page_size, int? page_start, string? page_token, string? credentials, string? companyId, string? deviceId, string? userRole, bool? disablePagination, System.Threading.CancellationToken cancellationToken);
    
        /// <summary>Retrieves the List of product related to Current Accounts Products</summary>
        /// <param name="currency">Identifies the currency. E.g. USD, GBP etc</param>
        /// <param name="customerId">Identifier of the customer</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>CurrentAccountCatalogResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<CurrentAccountCatalogResponse> GetCurrentAccountCatalogAsync(string? currency, string? customerId, int? page_size, int? page_start, string? page_token, string? credentials, string? companyId, string? deviceId, string? userRole, bool? disablePagination);
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves the List of product related to Current Accounts Products</summary>
        /// <param name="currency">Identifies the currency. E.g. USD, GBP etc</param>
        /// <param name="customerId">Identifier of the customer</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>CurrentAccountCatalogResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<CurrentAccountCatalogResponse> GetCurrentAccountCatalogAsync(string? currency, string? customerId, int? page_size, int? page_start, string? page_token, string? credentials, string? companyId, string? deviceId, string? userRole, bool? disablePagination, System.Threading.CancellationToken cancellationToken);
    
        /// <summary>Retrieves the List of products related to Term Deposit</summary>
        /// <param name="currency">Identifies the currency. E.g. USD, GBP etc</param>
        /// <param name="customerId">Identifier of the customer</param>
        /// <param name="minTerm">Contains the minimum term defined for the deposit contract</param>
        /// <param name="maxTerm">Contains the maximum term defined for the deposit contract</param>
        /// <param name="minAmount">Contains the minimum principal amount defined for the deposit contract</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>TermDepositsCatalogResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<TermDepositsCatalogResponse> GetTermDepositsCatalogAsync(string? currency, string? customerId, string? minTerm, string? maxTerm, string? minAmount, int? page_size, int? page_start, string? page_token, string? credentials, string? companyId, string? deviceId, string? userRole, bool? disablePagination);
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves the List of products related to Term Deposit</summary>
        /// <param name="currency">Identifies the currency. E.g. USD, GBP etc</param>
        /// <param name="customerId">Identifier of the customer</param>
        /// <param name="minTerm">Contains the minimum term defined for the deposit contract</param>
        /// <param name="maxTerm">Contains the maximum term defined for the deposit contract</param>
        /// <param name="minAmount">Contains the minimum principal amount defined for the deposit contract</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>TermDepositsCatalogResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<TermDepositsCatalogResponse> GetTermDepositsCatalogAsync(string? currency, string? customerId, string? minTerm, string? maxTerm, string? minAmount, int? page_size, int? page_start, string? page_token, string? credentials, string? companyId, string? deviceId, string? userRole, bool? disablePagination, System.Threading.CancellationToken cancellationToken);
    
        /// <summary>Retrieves the List of Short term finance products from Catalogue</summary>
        /// <param name="currency">Identifies the currency. E.g. USD, GBP etc</param>
        /// <param name="customerId">Identifier of the customer</param>
        /// <param name="minTerm">Contains the minimum term defined for the deposit contract</param>
        /// <param name="maxTerm">Contains the maximum term defined for the deposit contract</param>
        /// <param name="minAmount">Contains the minimum principal amount defined for the deposit contract</param>
        /// <param name="maxAmount">Contains the maximum principal amount defined for the deposit contract</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>ShortTermFinanceCatalogResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ShortTermFinanceCatalogResponse> GetShortTermFinanceCatalogAsync(string? currency, string? customerId, string? minTerm, string? maxTerm, string? minAmount, string? maxAmount, int? page_size, int? page_start, string? page_token, string? credentials, string? companyId, string? deviceId, string? userRole, bool? disablePagination);
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves the List of Short term finance products from Catalogue</summary>
        /// <param name="currency">Identifies the currency. E.g. USD, GBP etc</param>
        /// <param name="customerId">Identifier of the customer</param>
        /// <param name="minTerm">Contains the minimum term defined for the deposit contract</param>
        /// <param name="maxTerm">Contains the maximum term defined for the deposit contract</param>
        /// <param name="minAmount">Contains the minimum principal amount defined for the deposit contract</param>
        /// <param name="maxAmount">Contains the maximum principal amount defined for the deposit contract</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>ShortTermFinanceCatalogResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<ShortTermFinanceCatalogResponse> GetShortTermFinanceCatalogAsync(string? currency, string? customerId, string? minTerm, string? maxTerm, string? minAmount, string? maxAmount, int? page_size, int? page_start, string? page_token, string? credentials, string? companyId, string? deviceId, string? userRole, bool? disablePagination, System.Threading.CancellationToken cancellationToken);
    
        /// <summary>Retrieves the List of Personal Loans Products from marketing catalogue</summary>
        /// <param name="currency">Identifies the currency. E.g. USD, GBP etc</param>
        /// <param name="customerId">Identifier of the customer</param>
        /// <param name="minTerm">Contains the minimum term defined for the deposit contract</param>
        /// <param name="maxTerm">Contains the maximum term defined for the deposit contract</param>
        /// <param name="minAmount">Contains the minimum principal amount defined for the deposit contract</param>
        /// <param name="maxAmount">Contains the maximum principal amount defined for the deposit contract</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>PersonalLoanCatalogResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PersonalLoanCatalogResponse> GetPersonalLoanCatalogAsync(string? currency, string? customerId, string? minTerm, string? maxTerm, string? minAmount, string? maxAmount, int? page_size, int? page_start, string? page_token, string? credentials, string? companyId, string? deviceId, string? userRole, bool? disablePagination);
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves the List of Personal Loans Products from marketing catalogue</summary>
        /// <param name="currency">Identifies the currency. E.g. USD, GBP etc</param>
        /// <param name="customerId">Identifier of the customer</param>
        /// <param name="minTerm">Contains the minimum term defined for the deposit contract</param>
        /// <param name="maxTerm">Contains the maximum term defined for the deposit contract</param>
        /// <param name="minAmount">Contains the minimum principal amount defined for the deposit contract</param>
        /// <param name="maxAmount">Contains the maximum principal amount defined for the deposit contract</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>PersonalLoanCatalogResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<PersonalLoanCatalogResponse> GetPersonalLoanCatalogAsync(string? currency, string? customerId, string? minTerm, string? maxTerm, string? minAmount, string? maxAmount, int? page_size, int? page_start, string? page_token, string? credentials, string? companyId, string? deviceId, string? userRole, bool? disablePagination, System.Threading.CancellationToken cancellationToken);
    
        /// <summary>Retrieves the List of Mortgage Products available in Marketing Catalogue</summary>
        /// <param name="currency">Identifies the currency. E.g. USD, GBP etc</param>
        /// <param name="customerId">Identifier of the customer</param>
        /// <param name="minTerm">Contains the minimum term defined for the deposit contract</param>
        /// <param name="maxTerm">Contains the maximum term defined for the deposit contract</param>
        /// <param name="minAmount">Contains the minimum principal amount defined for the deposit contract</param>
        /// <param name="maxAmount">Contains the maximum principal amount defined for the deposit contract</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>MortgageCatalogResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<MortgageCatalogResponse> GetMortgageCatalogAsync(string? currency, string? customerId, string? minTerm, string? maxTerm, string? minAmount, string? maxAmount, int? page_size, int? page_start, string? page_token, string? credentials, string? companyId, string? deviceId, string? userRole, bool? disablePagination);
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves the List of Mortgage Products available in Marketing Catalogue</summary>
        /// <param name="currency">Identifies the currency. E.g. USD, GBP etc</param>
        /// <param name="customerId">Identifier of the customer</param>
        /// <param name="minTerm">Contains the minimum term defined for the deposit contract</param>
        /// <param name="maxTerm">Contains the maximum term defined for the deposit contract</param>
        /// <param name="minAmount">Contains the minimum principal amount defined for the deposit contract</param>
        /// <param name="maxAmount">Contains the maximum principal amount defined for the deposit contract</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>MortgageCatalogResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<MortgageCatalogResponse> GetMortgageCatalogAsync(string? currency, string? customerId, string? minTerm, string? maxTerm, string? minAmount, string? maxAmount, int? page_size, int? page_start, string? page_token, string? credentials, string? companyId, string? deviceId, string? userRole, bool? disablePagination, System.Threading.CancellationToken cancellationToken);
    
        /// <summary>Retrieves the List of Home Purchase Products available from Marketing Catalogue</summary>
        /// <param name="currency">Identifies the currency. E.g. USD, GBP etc</param>
        /// <param name="customerId">Identifier of the customer</param>
        /// <param name="minTerm">Contains the minimum term defined for the deposit contract</param>
        /// <param name="maxTerm">Contains the maximum term defined for the deposit contract</param>
        /// <param name="minAmount">Contains the minimum principal amount defined for the deposit contract</param>
        /// <param name="maxAmount">Contains the maximum principal amount defined for the deposit contract</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>HomePurchaseCatalogResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<HomePurchaseCatalogResponse> GetHomePurchaseCatalogAsync(string? currency, string? customerId, string? minTerm, string? maxTerm, string? minAmount, string? maxAmount, int? page_size, int? page_start, string? page_token, string? credentials, string? companyId, string? deviceId, string? userRole, bool? disablePagination);
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Retrieves the List of Home Purchase Products available from Marketing Catalogue</summary>
        /// <param name="currency">Identifies the currency. E.g. USD, GBP etc</param>
        /// <param name="customerId">Identifier of the customer</param>
        /// <param name="minTerm">Contains the minimum term defined for the deposit contract</param>
        /// <param name="maxTerm">Contains the maximum term defined for the deposit contract</param>
        /// <param name="minAmount">Contains the minimum principal amount defined for the deposit contract</param>
        /// <param name="maxAmount">Contains the maximum principal amount defined for the deposit contract</param>
        /// <param name="page_size">The total number of records per page</param>
        /// <param name="page_start">The record from which the response should be displayed</param>
        /// <param name="page_token">Unique id expected to get as part of response from t24 on every enquiry request.</param>
        /// <param name="credentials">Username and password to authenticate the API against core-banking.</param>
        /// <param name="companyId">Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.</param>
        /// <param name="deviceId">Identifies the device type</param>
        /// <param name="userRole">User who initiated the transaction</param>
        /// <param name="disablePagination">Indicates the pagination header attributes availability. If set to 'true', it fetches all the data</param>
        /// <returns>HomePurchaseCatalogResponse</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<HomePurchaseCatalogResponse> GetHomePurchaseCatalogAsync(string? currency, string? customerId, string? minTerm, string? maxTerm, string? minAmount, string? maxAmount, int? page_size, int? page_start, string? page_token, string? credentials, string? companyId, string? deviceId, string? userRole, bool? disablePagination, System.Threading.CancellationToken cancellationToken);
    
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class QueryHeader 
    {
        [System.Text.Json.Serialization.JsonPropertyName("audit")]
        public Audit? Audit { get; set; }= default!;
    
        /// <summary>Status of the API(success/failed)</summary>
        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public string? Status { get; set; }= default!;
    
        /// <summary>The total number of records per page</summary>
        [System.Text.Json.Serialization.JsonPropertyName("page_size")]
        public int? Page_size { get; set; }= default!;
    
        /// <summary>The record from which the response should be displayed</summary>
        [System.Text.Json.Serialization.JsonPropertyName("page_start")]
        public int? Page_start { get; set; }= default!;
    
        /// <summary>The total number of records present</summary>
        [System.Text.Json.Serialization.JsonPropertyName("total_size")]
        public int? Total_size { get; set; }= default!;
    
        /// <summary>Unique id expected to get as part of response from t24 on every enquiry request</summary>
        [System.Text.Json.Serialization.JsonPropertyName("page_token")]
        public string? Page_token { get; set; }= default!;
    
    
    }
    
    /// <summary>ProductMarketingCatalogueResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ProductMarketingCatalogueResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public ProductMarketingCatalogueResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ProductMarketingCatalogueResponseBody : System.Collections.ObjectModel.Collection<Anonymous>
    {
    
    }
    
    /// <summary>BusinessQueryErrorResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BusinessQueryErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ErrorHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("error")]
        public BusinessQueryErrorResponseBody? Error { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class BusinessQueryErrorResponseBody 
    {
        /// <summary>The identifier of the error message</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The actual t24 error message for bad requests</summary>
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
        /// <summary>The identifier of error type: Business</summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    /// <summary>SystemQueryErrorResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SystemQueryErrorResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public ErrorHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("error")]
        public SystemQueryErrorResponseBody? Error { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SystemQueryErrorResponseBody 
    {
        /// <summary>The identifier of the error message</summary>
        [System.Text.Json.Serialization.JsonPropertyName("code")]
        public string? Code { get; set; }= default!;
    
        /// <summary>The actual t24 error message caused by server</summary>
        [System.Text.Json.Serialization.JsonPropertyName("message")]
        public string? Message { get; set; }= default!;
    
        /// <summary>The identifier of error type: System</summary>
        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string? Type { get; set; }= default!;
    
    
    }
    
    /// <summary>SavingsAccountCatalogResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SavingsAccountCatalogResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public SavingsAccountCatalogResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class SavingsAccountCatalogResponseBody : System.Collections.ObjectModel.Collection<Anonymous2>
    {
    
    }
    
    /// <summary>CurrentAccountCatalogResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CurrentAccountCatalogResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public CurrentAccountCatalogResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class CurrentAccountCatalogResponseBody : System.Collections.ObjectModel.Collection<Anonymous3>
    {
    
    }
    
    /// <summary>TermDepositsCatalogResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class TermDepositsCatalogResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public TermDepositsCatalogResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class TermDepositsCatalogResponseBody : System.Collections.ObjectModel.Collection<Anonymous4>
    {
    
    }
    
    /// <summary>ShortTermFinanceCatalogResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ShortTermFinanceCatalogResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public ShortTermFinanceCatalogResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class ShortTermFinanceCatalogResponseBody : System.Collections.ObjectModel.Collection<Anonymous5>
    {
    
    }
    
    /// <summary>PersonalLoanCatalogResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PersonalLoanCatalogResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public PersonalLoanCatalogResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class PersonalLoanCatalogResponseBody : System.Collections.ObjectModel.Collection<Anonymous6>
    {
    
    }
    
    /// <summary>MortgageCatalogResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class MortgageCatalogResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public MortgageCatalogResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class MortgageCatalogResponseBody : System.Collections.ObjectModel.Collection<Anonymous7>
    {
    
    }
    
    /// <summary>HomePurchaseCatalogResponse</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class HomePurchaseCatalogResponse 
    {
        [System.Text.Json.Serialization.JsonPropertyName("header")]
        public QueryHeader? Header { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("body")]
        public HomePurchaseCatalogResponseBody? Body { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class HomePurchaseCatalogResponseBody : System.Collections.ObjectModel.Collection<Anonymous8>
    {
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous 
    {
        [System.Text.Json.Serialization.JsonPropertyName("catalogue")]
        [System.ComponentModel.DataAnnotations.StringLength(35)]
        public string? Catalogue { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Audit2 
    {
        /// <summary>Time taken to response by T24</summary>
        [System.Text.Json.Serialization.JsonPropertyName("T24_time")]
        public int? T24_time { get; set; }= default!;
    
        /// <summary>The CURR.NO. of the record</summary>
        [System.Text.Json.Serialization.JsonPropertyName("versionNumber")]
        public string? VersionNumber { get; set; }= default!;
    
        /// <summary>Time taken to parse the request by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("requestParse_time")]
        public double? RequestParse_time { get; set; }= default!;
    
        /// <summary>Time taken to parse the response by IRIS</summary>
        [System.Text.Json.Serialization.JsonPropertyName("responseParse_time")]
        public double? ResponseParse_time { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous2 
    {
        /// <summary>Contains the unique identifier of the product, e.g. the product id of the arrangement account.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("productId")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? ProductId { get; set; }= default!;
    
        /// <summary>Identifies the currency. E.g. USD, GBP etc</summary>
        [System.Text.Json.Serialization.JsonPropertyName("currency")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? Currency { get; set; }= default!;
    
        /// <summary>Additional product specification based on particular criteria for example the account was opened on-line and attracted a higher interest rate. Drop down list to select appropriate variation or applied automatically</summary>
        [System.Text.Json.Serialization.JsonPropertyName("variation")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? Variation { get; set; }= default!;
    
        /// <summary>Indicates the description of the Product</summary>
        [System.Text.Json.Serialization.JsonPropertyName("productDescription")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? ProductDescription { get; set; }= default!;
    
        /// <summary>Indicates the type of calculation selected for credit interest. Types such as Single, Level and Band are available</summary>
        [System.Text.Json.Serialization.JsonPropertyName("creditInterestType")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? CreditInterestType { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("creditBaseRate")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? CreditBaseRate { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("creditIntMargin")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? CreditIntMargin { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous3 
    {
        /// <summary>Contains the unique identifier of the product, e.g. the product id of the arrangement account.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("productId")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? ProductId { get; set; }= default!;
    
        /// <summary>Identifies the currency. E.g. USD, GBP etc</summary>
        [System.Text.Json.Serialization.JsonPropertyName("currency")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? Currency { get; set; }= default!;
    
        /// <summary>Additional product specification based on particular criteria for example the account was opened on-line and attracted a higher interest rate. Drop down list to select appropriate variation or applied automatically</summary>
        [System.Text.Json.Serialization.JsonPropertyName("variation")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? Variation { get; set; }= default!;
    
        /// <summary>Indicates the description of the Product</summary>
        [System.Text.Json.Serialization.JsonPropertyName("productDescription")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? ProductDescription { get; set; }= default!;
    
        /// <summary>Indicates the type of calculation selected for credit interest. Types such as Single, Level and Band are available</summary>
        [System.Text.Json.Serialization.JsonPropertyName("creditInterestType")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? CreditInterestType { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("creditBaseRate")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? CreditBaseRate { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("creditIntMargin")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? CreditIntMargin { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("debitIntType")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? DebitIntType { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("drBaseIntRate")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? DrBaseIntRate { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("debitIntMargin")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? DebitIntMargin { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous4 
    {
        /// <summary>Contains the unique identifier of the product, e.g. the product id of the arrangement account.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("productId")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? ProductId { get; set; }= default!;
    
        /// <summary>Identifies the currency. E.g. USD, GBP etc</summary>
        [System.Text.Json.Serialization.JsonPropertyName("currency")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? Currency { get; set; }= default!;
    
        /// <summary>Additional product specification based on particular criteria for example the account was opened on-line and attracted a higher interest rate. Drop down list to select appropriate variation or applied automatically</summary>
        [System.Text.Json.Serialization.JsonPropertyName("variation")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? Variation { get; set; }= default!;
    
        /// <summary>Indicates the description of the Product</summary>
        [System.Text.Json.Serialization.JsonPropertyName("productDescription")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? ProductDescription { get; set; }= default!;
    
        /// <summary>Contains the minimum term defined for the deposit contract</summary>
        [System.Text.Json.Serialization.JsonPropertyName("minTerm")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? MinTerm { get; set; }= default!;
    
        /// <summary>Contains the maximum term defined for the deposit contract</summary>
        [System.Text.Json.Serialization.JsonPropertyName("maxTerm")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? MaxTerm { get; set; }= default!;
    
        /// <summary>Contains the minimum principal amount defined for the deposit contract</summary>
        [System.Text.Json.Serialization.JsonPropertyName("minAmount")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? MinAmount { get; set; }= default!;
    
        /// <summary>Fixed or floating rate.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("rateType")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? RateType { get; set; }= default!;
    
        /// <summary>Contains the base rate used for calculating the interest</summary>
        [System.Text.Json.Serialization.JsonPropertyName("baseInterestRate")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? BaseInterestRate { get; set; }= default!;
    
        /// <summary>Contains the margin used for calculating the interest</summary>
        [System.Text.Json.Serialization.JsonPropertyName("interestMargin")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? InterestMargin { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous5 
    {
        /// <summary>Contains the unique identifier of the product, e.g. the product id of the arrangement account.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("productId")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? ProductId { get; set; }= default!;
    
        /// <summary>Identifies the currency. E.g. USD, GBP etc</summary>
        [System.Text.Json.Serialization.JsonPropertyName("currency")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? Currency { get; set; }= default!;
    
        /// <summary>Additional product specification based on particular criteria for example the account was opened on-line and attracted a higher interest rate. Drop down list to select appropriate variation or applied automatically</summary>
        [System.Text.Json.Serialization.JsonPropertyName("variation")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? Variation { get; set; }= default!;
    
        /// <summary>Indicates the description of the Product</summary>
        [System.Text.Json.Serialization.JsonPropertyName("productDescription")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? ProductDescription { get; set; }= default!;
    
        /// <summary>Contains the minimum term defined for the deposit contract</summary>
        [System.Text.Json.Serialization.JsonPropertyName("minTerm")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? MinTerm { get; set; }= default!;
    
        /// <summary>Contains the maximum term defined for the deposit contract</summary>
        [System.Text.Json.Serialization.JsonPropertyName("maxTerm")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? MaxTerm { get; set; }= default!;
    
        /// <summary>Contains the minimum principal amount defined for the deposit contract</summary>
        [System.Text.Json.Serialization.JsonPropertyName("minAmount")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? MinAmount { get; set; }= default!;
    
        /// <summary>Contains the maximum principal amount defined for the deposit contract</summary>
        [System.Text.Json.Serialization.JsonPropertyName("maxAmount")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? MaxAmount { get; set; }= default!;
    
        /// <summary>Fixed or floating rate.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("rateType")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? RateType { get; set; }= default!;
    
        /// <summary>Contains the base rate used for calculating the interest</summary>
        [System.Text.Json.Serialization.JsonPropertyName("baseInterestRate")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? BaseInterestRate { get; set; }= default!;
    
        /// <summary>Contains the margin used for calculating the interest</summary>
        [System.Text.Json.Serialization.JsonPropertyName("interestMargin")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? InterestMargin { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous6 
    {
        /// <summary>Contains the unique identifier of the product, e.g. the product id of the arrangement account.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("productId")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? ProductId { get; set; }= default!;
    
        /// <summary>Identifies the currency. E.g. USD, GBP etc</summary>
        [System.Text.Json.Serialization.JsonPropertyName("currency")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? Currency { get; set; }= default!;
    
        /// <summary>Additional product specification based on particular criteria for example the account was opened on-line and attracted a higher interest rate. Drop down list to select appropriate variation or applied automatically</summary>
        [System.Text.Json.Serialization.JsonPropertyName("variation")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? Variation { get; set; }= default!;
    
        /// <summary>Indicates the description of the Product</summary>
        [System.Text.Json.Serialization.JsonPropertyName("productDescription")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? ProductDescription { get; set; }= default!;
    
        /// <summary>Contains the minimum term defined for the deposit contract</summary>
        [System.Text.Json.Serialization.JsonPropertyName("minTerm")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? MinTerm { get; set; }= default!;
    
        /// <summary>Contains the maximum term defined for the deposit contract</summary>
        [System.Text.Json.Serialization.JsonPropertyName("maxTerm")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? MaxTerm { get; set; }= default!;
    
        /// <summary>Contains the minimum principal amount defined for the deposit contract</summary>
        [System.Text.Json.Serialization.JsonPropertyName("minAmount")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? MinAmount { get; set; }= default!;
    
        /// <summary>Contains the maximum principal amount defined for the deposit contract</summary>
        [System.Text.Json.Serialization.JsonPropertyName("maxAmount")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? MaxAmount { get; set; }= default!;
    
        /// <summary>Fixed or floating rate.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("rateType")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? RateType { get; set; }= default!;
    
        /// <summary>Contains the base rate used for calculating the interest</summary>
        [System.Text.Json.Serialization.JsonPropertyName("baseInterestRate")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? BaseInterestRate { get; set; }= default!;
    
        /// <summary>Contains the margin used for calculating the interest</summary>
        [System.Text.Json.Serialization.JsonPropertyName("interestMargin")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? InterestMargin { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous7 
    {
        /// <summary>Contains the unique identifier of the product, e.g. the product id of the arrangement account.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("productId")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? ProductId { get; set; }= default!;
    
        /// <summary>Identifies the currency. E.g. USD, GBP etc</summary>
        [System.Text.Json.Serialization.JsonPropertyName("currency")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? Currency { get; set; }= default!;
    
        /// <summary>Additional product specification based on particular criteria for example the account was opened on-line and attracted a higher interest rate. Drop down list to select appropriate variation or applied automatically</summary>
        [System.Text.Json.Serialization.JsonPropertyName("variation")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? Variation { get; set; }= default!;
    
        /// <summary>Contains the minimum term defined for the deposit contract</summary>
        [System.Text.Json.Serialization.JsonPropertyName("minTerm")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? MinTerm { get; set; }= default!;
    
        /// <summary>Contains the maximum term defined for the deposit contract</summary>
        [System.Text.Json.Serialization.JsonPropertyName("maxTerm")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? MaxTerm { get; set; }= default!;
    
        /// <summary>Contains the minimum principal amount defined for the deposit contract</summary>
        [System.Text.Json.Serialization.JsonPropertyName("minAmount")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? MinAmount { get; set; }= default!;
    
        /// <summary>Contains the maximum principal amount defined for the deposit contract</summary>
        [System.Text.Json.Serialization.JsonPropertyName("maxAmount")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? MaxAmount { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("interestRateType")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? InterestRateType { get; set; }= default!;
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.5.2.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class Anonymous8 
    {
        /// <summary>Contains the unique identifier of the product, e.g. the product id of the arrangement account.</summary>
        [System.Text.Json.Serialization.JsonPropertyName("productId")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? ProductId { get; set; }= default!;
    
        /// <summary>Identifies the currency. E.g. USD, GBP etc</summary>
        [System.Text.Json.Serialization.JsonPropertyName("currency")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? Currency { get; set; }= default!;
    
        /// <summary>Additional product specification based on particular criteria for example the account was opened on-line and attracted a higher interest rate. Drop down list to select appropriate variation or applied automatically</summary>
        [System.Text.Json.Serialization.JsonPropertyName("variation")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? Variation { get; set; }= default!;
    
        /// <summary>Contains the minimum term defined for the deposit contract</summary>
        [System.Text.Json.Serialization.JsonPropertyName("minTerm")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? MinTerm { get; set; }= default!;
    
        /// <summary>Contains the maximum term defined for the deposit contract</summary>
        [System.Text.Json.Serialization.JsonPropertyName("maxTerm")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? MaxTerm { get; set; }= default!;
    
        /// <summary>Contains the minimum principal amount defined for the deposit contract</summary>
        [System.Text.Json.Serialization.JsonPropertyName("minAmount")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? MinAmount { get; set; }= default!;
    
        /// <summary>Contains the maximum principal amount defined for the deposit contract</summary>
        [System.Text.Json.Serialization.JsonPropertyName("maxAmount")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? MaxAmount { get; set; }= default!;
    
        [System.Text.Json.Serialization.JsonPropertyName("interestRateType")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? InterestRateType { get; set; }= default!;
    
    
    }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016